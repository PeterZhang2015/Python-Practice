{"created": 1587976419.3222096, "duration": 0.5455417633056641, "exitcode": 1, "root": "C:\\Work\\Projects\\Python-Practice", "environment": {"Python": "3.7.1", "Platform": "Windows-10-10.0.18362-SP0", "Packages": {"pytest": "5.3.4", "py": "1.8.1", "pluggy": "0.13.1"}, "Plugins": {"allure-pytest": "2.8.7", "html": "2.1.1", "json-report": "1.2.1", "metadata": "1.8.0", "reportportal": "5.0.0"}, "JAVA_HOME": "C:\\Program Files\\Java\\jre1.8.0_241"}, "summary": {"failed": 4, "passed": 1, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "type": "Module"}]}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "outcome": "passed", "result": [{"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment0]", "type": "Function", "lineno": 43}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment1]", "type": "Function", "lineno": 43}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters1-testEnvironment0]", "type": "Function", "lineno": 43}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters1-testEnvironment1]", "type": "Function", "lineno": 43}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_example", "type": "Function", "lineno": 97}]}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "outcome": "passed", "result": [{"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "type": "Instance"}]}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "outcome": "passed", "result": [{"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "type": "Class"}]}], "tests": [{"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment0]", "lineno": 43, "outcome": "failed", "keywords": ["()", "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "test_MAndroid2_VoiceCall[testParameters0-testEnvironment0]", "parametrize", "pytestmark", "TestMAndroid2TestCases", "testParameters0-testEnvironment0", "Python-Practice"], "setup": {"duration": 0.0009987354278564453, "outcome": "passed"}, "call": {"duration": 0.005986928939819336, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2TestCases.py", "lineno": 60, "message": "TypeError: checkConfiguration() missing 1 required positional argument: 'testUsers'"}, "traceback": [{"path": "test_MAndroid2TestCases.py", "lineno": 60, "message": "TypeError"}], "stdout": "{'VoiceCallTestCaseInfo': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Precondition': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\n", "longrepr": "self = <test_MAndroid2TestCases.TestMAndroid2TestCases object at 0x000001C0CB148D30>\njson_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...': {'IMSI': '505025104559746', 'MSISDN': '+61418673947'}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622'}}}\ntestParameters = {'VoiceCall': {'Duration': 10}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironment)\n    @pytest.mark.parametrize(\"testParameters\", testParameters)\n    def test_MAndroid2_VoiceCall(self, json_metadata, testEnvironment, testParameters):\n        # Initialization\n        self.testEnvironment = testEnvironment\n        self.testParameters = testParameters\n        self.responseList = []\n        self.testResults = []\n        testCaseKey = 'VoiceCall'\n        testCaseInfoFileName = \"../configuration/testCaseInfo/testCaseInfo.yaml\"\n        testCaseInfoName = \"VoiceCallTestCaseInfo\"\n    \n        # Read test case info.\n        self.testCaseInfo = getConfigureInfo(testCaseInfoFileName, testCaseInfoName)\n    \n        # Checking Test parameters.\n>       self.checkConfiguration(testEnvironment)\nE       TypeError: checkConfiguration() missing 1 required positional argument: 'testUsers'\n\ntest_MAndroid2TestCases.py:60: TypeError"}, "teardown": {"duration": 0.000997304916381836, "outcome": "passed"}}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment1]", "lineno": 43, "outcome": "failed", "keywords": ["()", "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "parametrize", "testParameters0-testEnvironment1", "pytestmark", "TestMAndroid2TestCases", "test_MAndroid2_VoiceCall[testParameters0-testEnvironment1]", "Python-Practice"], "setup": {"duration": 0.0009975433349609375, "outcome": "passed"}, "call": {"duration": 0.005983829498291016, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2TestCases.py", "lineno": 60, "message": "TypeError: checkConfiguration() missing 1 required positional argument: 'testUsers'"}, "traceback": [{"path": "test_MAndroid2TestCases.py", "lineno": 60, "message": "TypeError"}], "stdout": "{'VoiceCallTestCaseInfo': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Precondition': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\n", "longrepr": "self = <test_MAndroid2TestCases.TestMAndroid2TestCases object at 0x000001C0CB1BD6D8>\njson_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...': {'IMSI': '505025703492762', 'MSISDN': '+61402537622'}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947'}}}\ntestParameters = {'VoiceCall': {'Duration': 10}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironment)\n    @pytest.mark.parametrize(\"testParameters\", testParameters)\n    def test_MAndroid2_VoiceCall(self, json_metadata, testEnvironment, testParameters):\n        # Initialization\n        self.testEnvironment = testEnvironment\n        self.testParameters = testParameters\n        self.responseList = []\n        self.testResults = []\n        testCaseKey = 'VoiceCall'\n        testCaseInfoFileName = \"../configuration/testCaseInfo/testCaseInfo.yaml\"\n        testCaseInfoName = \"VoiceCallTestCaseInfo\"\n    \n        # Read test case info.\n        self.testCaseInfo = getConfigureInfo(testCaseInfoFileName, testCaseInfoName)\n    \n        # Checking Test parameters.\n>       self.checkConfiguration(testEnvironment)\nE       TypeError: checkConfiguration() missing 1 required positional argument: 'testUsers'\n\ntest_MAndroid2TestCases.py:60: TypeError"}, "teardown": {"duration": 0.0009982585906982422, "outcome": "passed"}}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters1-testEnvironment0]", "lineno": 43, "outcome": "failed", "keywords": ["test_MAndroid2_VoiceCall[testParameters1-testEnvironment0]", "()", "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "testParameters1-testEnvironment0", "parametrize", "pytestmark", "TestMAndroid2TestCases", "Python-Practice"], "setup": {"duration": 0.000997304916381836, "outcome": "passed"}, "call": {"duration": 0.005984067916870117, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2TestCases.py", "lineno": 60, "message": "TypeError: checkConfiguration() missing 1 required positional argument: 'testUsers'"}, "traceback": [{"path": "test_MAndroid2TestCases.py", "lineno": 60, "message": "TypeError"}], "stdout": "{'VoiceCallTestCaseInfo': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Precondition': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\n", "longrepr": "self = <test_MAndroid2TestCases.TestMAndroid2TestCases object at 0x000001C0CB1D8A20>\njson_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...': {'IMSI': '505025104559746', 'MSISDN': '+61418673947'}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622'}}}\ntestParameters = {'VoiceCall': {'Duration': 5}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironment)\n    @pytest.mark.parametrize(\"testParameters\", testParameters)\n    def test_MAndroid2_VoiceCall(self, json_metadata, testEnvironment, testParameters):\n        # Initialization\n        self.testEnvironment = testEnvironment\n        self.testParameters = testParameters\n        self.responseList = []\n        self.testResults = []\n        testCaseKey = 'VoiceCall'\n        testCaseInfoFileName = \"../configuration/testCaseInfo/testCaseInfo.yaml\"\n        testCaseInfoName = \"VoiceCallTestCaseInfo\"\n    \n        # Read test case info.\n        self.testCaseInfo = getConfigureInfo(testCaseInfoFileName, testCaseInfoName)\n    \n        # Checking Test parameters.\n>       self.checkConfiguration(testEnvironment)\nE       TypeError: checkConfiguration() missing 1 required positional argument: 'testUsers'\n\ntest_MAndroid2TestCases.py:60: TypeError"}, "teardown": {"duration": 0.0009980201721191406, "outcome": "passed"}}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters1-testEnvironment1]", "lineno": 43, "outcome": "failed", "keywords": ["()", "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "parametrize", "pytestmark", "TestMAndroid2TestCases", "testParameters1-testEnvironment1", "test_MAndroid2_VoiceCall[testParameters1-testEnvironment1]", "Python-Practice"], "setup": {"duration": 0.0009970664978027344, "outcome": "passed"}, "call": {"duration": 0.007979393005371094, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2TestCases.py", "lineno": 60, "message": "TypeError: checkConfiguration() missing 1 required positional argument: 'testUsers'"}, "traceback": [{"path": "test_MAndroid2TestCases.py", "lineno": 60, "message": "TypeError"}], "stdout": "{'VoiceCallTestCaseInfo': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Precondition': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\n", "longrepr": "self = <test_MAndroid2TestCases.TestMAndroid2TestCases object at 0x000001C0CB1D8DA0>\njson_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...': {'IMSI': '505025703492762', 'MSISDN': '+61402537622'}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947'}}}\ntestParameters = {'VoiceCall': {'Duration': 5}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironment)\n    @pytest.mark.parametrize(\"testParameters\", testParameters)\n    def test_MAndroid2_VoiceCall(self, json_metadata, testEnvironment, testParameters):\n        # Initialization\n        self.testEnvironment = testEnvironment\n        self.testParameters = testParameters\n        self.responseList = []\n        self.testResults = []\n        testCaseKey = 'VoiceCall'\n        testCaseInfoFileName = \"../configuration/testCaseInfo/testCaseInfo.yaml\"\n        testCaseInfoName = \"VoiceCallTestCaseInfo\"\n    \n        # Read test case info.\n        self.testCaseInfo = getConfigureInfo(testCaseInfoFileName, testCaseInfoName)\n    \n        # Checking Test parameters.\n>       self.checkConfiguration(testEnvironment)\nE       TypeError: checkConfiguration() missing 1 required positional argument: 'testUsers'\n\ntest_MAndroid2TestCases.py:60: TypeError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_example", "lineno": 97, "outcome": "passed", "keywords": ["()", "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "TestMAndroid2TestCases", "test_example", "Python-Practice"], "setup": {"duration": 0.000997781753540039, "outcome": "passed"}, "call": {"duration": 0.0009970664978027344, "outcome": "passed", "stdout": "***************************test Example************************************\n"}, "teardown": {"duration": 0.0009968280792236328, "outcome": "passed"}}]}