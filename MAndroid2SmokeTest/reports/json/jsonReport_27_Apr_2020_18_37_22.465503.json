{"created": 1587976646.9432375, "duration": 2.3269715309143066, "exitcode": 1, "root": "C:\\Work\\Projects\\Python-Practice", "environment": {"Python": "3.7.1", "Platform": "Windows-10-10.0.18362-SP0", "Packages": {"pytest": "5.3.4", "py": "1.8.1", "pluggy": "0.13.1"}, "Plugins": {"allure-pytest": "2.8.7", "html": "2.1.1", "json-report": "1.2.1", "metadata": "1.8.0", "reportportal": "5.0.0"}, "JAVA_HOME": "C:\\Program Files\\Java\\jre1.8.0_241"}, "summary": {"failed": 4, "passed": 1, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "type": "Module"}]}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "outcome": "passed", "result": [{"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment0]", "type": "Function", "lineno": 43}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment1]", "type": "Function", "lineno": 43}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters1-testEnvironment0]", "type": "Function", "lineno": 43}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters1-testEnvironment1]", "type": "Function", "lineno": 43}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_example", "type": "Function", "lineno": 97}]}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "outcome": "passed", "result": [{"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "type": "Instance"}]}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "outcome": "passed", "result": [{"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "type": "Class"}]}], "tests": [{"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment0]", "lineno": 43, "outcome": "failed", "keywords": ["pytestmark", "parametrize", "()", "testParameters0-testEnvironment0", "test_MAndroid2_VoiceCall[testParameters0-testEnvironment0]", "Python-Practice", "TestMAndroid2TestCases", "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py"], "setup": {"duration": 0.000997304916381836, "outcome": "passed"}, "call": {"duration": 0.4087095260620117, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2TestCases.py", "lineno": 74, "message": "AttributeError: 'TestMAndroid2TestCases' object has no attribute 'testUsers'"}, "traceback": [{"path": "test_MAndroid2TestCases.py", "lineno": 74, "message": "AttributeError"}], "stdout": "{'VoiceCallTestCaseInfo': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Precondition': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nVoice call duration is 10\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\n##########Calling REST API to release device 25cb81cc6f0d7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/25cb81cc6f0d7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nHandset with IMSI 505025104559746 has been occupied by myself Peter.Zhang@matrium.com.au.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 25cb81cc6f0d7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 25cb81cc6f0d7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 25cb81cc6f0d7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/25cb81cc6f0d7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7541'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7541\n", "longrepr": "self = <test_MAndroid2TestCases.TestMAndroid2TestCases object at 0x0000020435738AC8>\njson_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...61418673947', 'handsetID': 'mcloud.matrium.com.au:7541'}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622'}}}\ntestParameters = {'VoiceCall': {'Duration': 10}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironment)\n    @pytest.mark.parametrize(\"testParameters\", testParameters)\n    def test_MAndroid2_VoiceCall(self, json_metadata, testEnvironment, testParameters):\n        # Initialization\n        self.testEnvironment = testEnvironment\n        self.testParameters = testParameters\n        self.responseList = []\n        self.testResults = []\n        testCaseKey = 'VoiceCall'\n        testCaseInfoFileName = \"../configuration/testCaseInfo/testCaseInfo.yaml\"\n        testCaseInfoName = \"VoiceCallTestCaseInfo\"\n    \n        # Read test case info.\n        self.testCaseInfo = getConfigureInfo(testCaseInfoFileName, testCaseInfoName)\n    \n        # Checking Test parameters.\n        self.checkConfiguration(testEnvironment)\n        assert (\"VoiceCall\" in self.testParameters)\n        assert (\"Duration\" in self.testParameters['VoiceCall'])\n        print(\"Voice call duration is {}\".format(testParameters['VoiceCall']['Duration']))\n    \n        # Connect available test handset on mcloud from specified IMSI.\n        mcloud = MCloudControl()\n    \n        # Set test environment variables.\n        mcloud.mcloudBaseUrl = self.testEnvironment['MCloud']['baseUrl']\n        mcloud.mcloudLoginUser = self.testEnvironment['Login']['User']\n        mcloud.mcloudLoginToken = self.testEnvironment['Login']['accessToken']\n    \n        self.testEnvironment['testUsers']['MO']['handsetID'] = mcloud.connectToMcloudUser(self.testEnvironment['testUsers']['MO']['IMSI'])\n>       print(\"MO Handset ID is {}\".format(self.testUsers['MO']['handsetID']))\nE       AttributeError: 'TestMAndroid2TestCases' object has no attribute 'testUsers'\n\ntest_MAndroid2TestCases.py:74: AttributeError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment1]", "lineno": 43, "outcome": "failed", "keywords": ["pytestmark", "parametrize", "()", "test_MAndroid2_VoiceCall[testParameters0-testEnvironment1]", "TestMAndroid2TestCases", "Python-Practice", "testParameters0-testEnvironment1", "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py"], "setup": {"duration": 0.000997304916381836, "outcome": "passed"}, "call": {"duration": 0.42386674880981445, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2TestCases.py", "lineno": 74, "message": "AttributeError: 'TestMAndroid2TestCases' object has no attribute 'testUsers'"}, "traceback": [{"path": "test_MAndroid2TestCases.py", "lineno": 74, "message": "AttributeError"}], "stdout": "{'VoiceCallTestCaseInfo': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Precondition': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nVoice call duration is 10\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nHandset with IMSI 505025703492762 has been occupied by myself Peter.Zhang@matrium.com.au.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7569'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7569\n", "longrepr": "self = <test_MAndroid2TestCases.TestMAndroid2TestCases object at 0x00000204357D0278>\njson_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...61402537622', 'handsetID': 'mcloud.matrium.com.au:7569'}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947'}}}\ntestParameters = {'VoiceCall': {'Duration': 10}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironment)\n    @pytest.mark.parametrize(\"testParameters\", testParameters)\n    def test_MAndroid2_VoiceCall(self, json_metadata, testEnvironment, testParameters):\n        # Initialization\n        self.testEnvironment = testEnvironment\n        self.testParameters = testParameters\n        self.responseList = []\n        self.testResults = []\n        testCaseKey = 'VoiceCall'\n        testCaseInfoFileName = \"../configuration/testCaseInfo/testCaseInfo.yaml\"\n        testCaseInfoName = \"VoiceCallTestCaseInfo\"\n    \n        # Read test case info.\n        self.testCaseInfo = getConfigureInfo(testCaseInfoFileName, testCaseInfoName)\n    \n        # Checking Test parameters.\n        self.checkConfiguration(testEnvironment)\n        assert (\"VoiceCall\" in self.testParameters)\n        assert (\"Duration\" in self.testParameters['VoiceCall'])\n        print(\"Voice call duration is {}\".format(testParameters['VoiceCall']['Duration']))\n    \n        # Connect available test handset on mcloud from specified IMSI.\n        mcloud = MCloudControl()\n    \n        # Set test environment variables.\n        mcloud.mcloudBaseUrl = self.testEnvironment['MCloud']['baseUrl']\n        mcloud.mcloudLoginUser = self.testEnvironment['Login']['User']\n        mcloud.mcloudLoginToken = self.testEnvironment['Login']['accessToken']\n    \n        self.testEnvironment['testUsers']['MO']['handsetID'] = mcloud.connectToMcloudUser(self.testEnvironment['testUsers']['MO']['IMSI'])\n>       print(\"MO Handset ID is {}\".format(self.testUsers['MO']['handsetID']))\nE       AttributeError: 'TestMAndroid2TestCases' object has no attribute 'testUsers'\n\ntest_MAndroid2TestCases.py:74: AttributeError"}, "teardown": {"duration": 0.001995086669921875, "outcome": "passed"}}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters1-testEnvironment0]", "lineno": 43, "outcome": "failed", "keywords": ["pytestmark", "parametrize", "()", "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "testParameters1-testEnvironment0", "Python-Practice", "TestMAndroid2TestCases", "test_MAndroid2_VoiceCall[testParameters1-testEnvironment0]"], "setup": {"duration": 0.0009970664978027344, "outcome": "passed"}, "call": {"duration": 0.5833168029785156, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2TestCases.py", "lineno": 74, "message": "AttributeError: 'TestMAndroid2TestCases' object has no attribute 'testUsers'"}, "traceback": [{"path": "test_MAndroid2TestCases.py", "lineno": 74, "message": "AttributeError"}], "stdout": "{'VoiceCallTestCaseInfo': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Precondition': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nVoice call duration is 5\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\n##########Calling REST API to release device 25cb81cc6f0d7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/25cb81cc6f0d7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nHandset with IMSI 505025104559746 has been occupied by myself Peter.Zhang@matrium.com.au.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 25cb81cc6f0d7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 25cb81cc6f0d7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 25cb81cc6f0d7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/25cb81cc6f0d7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7541'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7541\n", "longrepr": "self = <test_MAndroid2TestCases.TestMAndroid2TestCases object at 0x00000204357D0978>\njson_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...61418673947', 'handsetID': 'mcloud.matrium.com.au:7541'}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622'}}}\ntestParameters = {'VoiceCall': {'Duration': 5}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironment)\n    @pytest.mark.parametrize(\"testParameters\", testParameters)\n    def test_MAndroid2_VoiceCall(self, json_metadata, testEnvironment, testParameters):\n        # Initialization\n        self.testEnvironment = testEnvironment\n        self.testParameters = testParameters\n        self.responseList = []\n        self.testResults = []\n        testCaseKey = 'VoiceCall'\n        testCaseInfoFileName = \"../configuration/testCaseInfo/testCaseInfo.yaml\"\n        testCaseInfoName = \"VoiceCallTestCaseInfo\"\n    \n        # Read test case info.\n        self.testCaseInfo = getConfigureInfo(testCaseInfoFileName, testCaseInfoName)\n    \n        # Checking Test parameters.\n        self.checkConfiguration(testEnvironment)\n        assert (\"VoiceCall\" in self.testParameters)\n        assert (\"Duration\" in self.testParameters['VoiceCall'])\n        print(\"Voice call duration is {}\".format(testParameters['VoiceCall']['Duration']))\n    \n        # Connect available test handset on mcloud from specified IMSI.\n        mcloud = MCloudControl()\n    \n        # Set test environment variables.\n        mcloud.mcloudBaseUrl = self.testEnvironment['MCloud']['baseUrl']\n        mcloud.mcloudLoginUser = self.testEnvironment['Login']['User']\n        mcloud.mcloudLoginToken = self.testEnvironment['Login']['accessToken']\n    \n        self.testEnvironment['testUsers']['MO']['handsetID'] = mcloud.connectToMcloudUser(self.testEnvironment['testUsers']['MO']['IMSI'])\n>       print(\"MO Handset ID is {}\".format(self.testUsers['MO']['handsetID']))\nE       AttributeError: 'TestMAndroid2TestCases' object has no attribute 'testUsers'\n\ntest_MAndroid2TestCases.py:74: AttributeError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters1-testEnvironment1]", "lineno": 43, "outcome": "failed", "keywords": ["pytestmark", "parametrize", "()", "testParameters1-testEnvironment1", "Python-Practice", "TestMAndroid2TestCases", "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "test_MAndroid2_VoiceCall[testParameters1-testEnvironment1]"], "setup": {"duration": 0.0009970664978027344, "outcome": "passed"}, "call": {"duration": 0.41141295433044434, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2TestCases.py", "lineno": 74, "message": "AttributeError: 'TestMAndroid2TestCases' object has no attribute 'testUsers'"}, "traceback": [{"path": "test_MAndroid2TestCases.py", "lineno": 74, "message": "AttributeError"}], "stdout": "{'VoiceCallTestCaseInfo': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Precondition': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nVoice call duration is 5\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nHandset with IMSI 505025703492762 has been occupied by myself Peter.Zhang@matrium.com.au.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7569'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7569\n", "longrepr": "self = <test_MAndroid2TestCases.TestMAndroid2TestCases object at 0x0000020435809748>\njson_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...61402537622', 'handsetID': 'mcloud.matrium.com.au:7569'}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947'}}}\ntestParameters = {'VoiceCall': {'Duration': 5}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironment)\n    @pytest.mark.parametrize(\"testParameters\", testParameters)\n    def test_MAndroid2_VoiceCall(self, json_metadata, testEnvironment, testParameters):\n        # Initialization\n        self.testEnvironment = testEnvironment\n        self.testParameters = testParameters\n        self.responseList = []\n        self.testResults = []\n        testCaseKey = 'VoiceCall'\n        testCaseInfoFileName = \"../configuration/testCaseInfo/testCaseInfo.yaml\"\n        testCaseInfoName = \"VoiceCallTestCaseInfo\"\n    \n        # Read test case info.\n        self.testCaseInfo = getConfigureInfo(testCaseInfoFileName, testCaseInfoName)\n    \n        # Checking Test parameters.\n        self.checkConfiguration(testEnvironment)\n        assert (\"VoiceCall\" in self.testParameters)\n        assert (\"Duration\" in self.testParameters['VoiceCall'])\n        print(\"Voice call duration is {}\".format(testParameters['VoiceCall']['Duration']))\n    \n        # Connect available test handset on mcloud from specified IMSI.\n        mcloud = MCloudControl()\n    \n        # Set test environment variables.\n        mcloud.mcloudBaseUrl = self.testEnvironment['MCloud']['baseUrl']\n        mcloud.mcloudLoginUser = self.testEnvironment['Login']['User']\n        mcloud.mcloudLoginToken = self.testEnvironment['Login']['accessToken']\n    \n        self.testEnvironment['testUsers']['MO']['handsetID'] = mcloud.connectToMcloudUser(self.testEnvironment['testUsers']['MO']['IMSI'])\n>       print(\"MO Handset ID is {}\".format(self.testUsers['MO']['handsetID']))\nE       AttributeError: 'TestMAndroid2TestCases' object has no attribute 'testUsers'\n\ntest_MAndroid2TestCases.py:74: AttributeError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_example", "lineno": 97, "outcome": "passed", "keywords": ["test_example", "()", "Python-Practice", "TestMAndroid2TestCases", "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py"], "setup": {"duration": 0.0, "outcome": "passed"}, "call": {"duration": 0.000997304916381836, "outcome": "passed", "stdout": "***************************test Example************************************\n"}, "teardown": {"duration": 0.000997304916381836, "outcome": "passed"}}]}