{"created": 1601271502.0399835, "duration": 955.802864074707, "exitcode": 1, "root": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest", "environment": {"Python": "3.7.1", "Platform": "Windows-10-10.0.18362-SP0", "Packages": {"pytest": "5.3.4", "py": "1.8.1", "pluggy": "0.13.1"}, "Plugins": {"allure-pytest": "2.8.7", "html": "2.1.1", "json-report": "1.2.1", "metadata": "1.8.0", "reportportal": "5.0.3", "rerunfailures": "9.0"}, "CI": "true", "CI_COMMIT_REF_NAME": "develop", "CI_COMMIT_REF_SLUG": "develop", "CI_COMMIT_SHA": "9494a062f1a740dc7684400fa4cbbc8fe8d27db8", "CI_DEBUG_TRACE": "true", "CI_JOB_ID": "759789091", "CI_JOB_NAME": "smokeTest", "CI_JOB_STAGE": "smokeTest", "CI_JOB_TOKEN": "zukuzJYszZjZz8tzxwrZ", "CI_REPOSITORY_URL": "https://gitlab-ci-token:zukuzJYszZjZz8tzxwrZ@gitlab.com/matrium/MAndroid2.git", "CI_RUNNER_DESCRIPTION": "Peter-Win10", "CI_RUNNER_ID": "2080590", "CI_RUNNER_TAGS": "Peter", "CI_PIPELINE_ID": "195116707", "CI_PROJECT_DIR": "C:\\Setup\\GitLab-Runner\\builds\\CWzDzWSE\\0\\matrium\\MAndroid2", "CI_PROJECT_ID": "7364135", "CI_PROJECT_NAME": "MAndroid2", "CI_PROJECT_NAMESPACE": "matrium", "CI_PROJECT_PATH": "matrium/MAndroid2", "CI_PROJECT_URL": "https://gitlab.com/matrium/MAndroid2", "CI_REGISTRY": "registry.gitlab.com", "CI_REGISTRY_IMAGE": "registry.gitlab.com/matrium/mandroid2", "CI_REGISTRY_PASSWORD": "zukuzJYszZjZz8tzxwrZ", "CI_REGISTRY_USER": "gitlab-ci-token", "CI_SERVER": "yes", "CI_SERVER_NAME": "GitLab", "CI_SERVER_REVISION": "6980c355894", "CI_SERVER_VERSION": "13.5.0-pre", "GITLAB_CI": "true", "GITLAB_USER_ID": "1984703", "GITLAB_USER_EMAIL": "peter.zhang@matrium.com.au", "JAVA_HOME": "C:\\Program Files\\Java\\jdk1.8.0_162"}, "summary": {"passed": 12, "failed": 17, "error": 1, "total": 30, "collected": 30}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "testcases/test_MAndroid2AllDevices.py", "type": "Module"}, {"nodeid": "testcases/test_MAndroid2SimpleTestCases.py", "type": "Module"}, {"nodeid": "testcases/test_MAndroid2TestCases.py", "type": "Module"}]}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases", "outcome": "passed", "result": [{"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment0]", "type": "Function", "lineno": 147}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment1]", "type": "Function", "lineno": 147}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment2]", "type": "Function", "lineno": 147}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment3]", "type": "Function", "lineno": 147}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment4]", "type": "Function", "lineno": 147}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment5]", "type": "Function", "lineno": 147}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_SMS[testParameters0-testEnvironment0]", "type": "Function", "lineno": 178}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_SMS[testParameters0-testEnvironment1]", "type": "Function", "lineno": 178}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_SMS[testParameters0-testEnvironment2]", "type": "Function", "lineno": 178}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_SMS[testParameters0-testEnvironment3]", "type": "Function", "lineno": 178}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_SMS[testParameters0-testEnvironment4]", "type": "Function", "lineno": 178}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_SMS[testParameters0-testEnvironment5]", "type": "Function", "lineno": 178}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_MMS[testParameters0-testEnvironment0]", "type": "Function", "lineno": 209}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_MMS[testParameters0-testEnvironment1]", "type": "Function", "lineno": 209}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_MMS[testParameters0-testEnvironment2]", "type": "Function", "lineno": 209}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_MMS[testParameters0-testEnvironment3]", "type": "Function", "lineno": 209}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_MMS[testParameters0-testEnvironment4]", "type": "Function", "lineno": 209}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_MMS[testParameters0-testEnvironment5]", "type": "Function", "lineno": 209}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_WebBrowsing[testParameters0-testEnvironment0]", "type": "Function", "lineno": 240}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_WebBrowsing[testParameters0-testEnvironment1]", "type": "Function", "lineno": 240}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_WebBrowsing[testParameters0-testEnvironment2]", "type": "Function", "lineno": 240}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_WebBrowsing[testParameters0-testEnvironment3]", "type": "Function", "lineno": 240}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_WebBrowsing[testParameters0-testEnvironment4]", "type": "Function", "lineno": 240}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_WebBrowsing[testParameters0-testEnvironment5]", "type": "Function", "lineno": 240}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment0]", "type": "Function", "lineno": 272}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment1]", "type": "Function", "lineno": 272}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment2]", "type": "Function", "lineno": 272}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment3]", "type": "Function", "lineno": 272}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment4]", "type": "Function", "lineno": 272}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment5]", "type": "Function", "lineno": 272}]}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases", "outcome": "passed", "result": [{"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases", "type": "Instance"}]}, {"nodeid": "testcases/test_MAndroid2AllDevices.py", "outcome": "passed", "result": [{"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases", "type": "Class"}]}, {"nodeid": "testcases/test_MAndroid2SimpleTestCases.py::TestMAndroid2TestCases", "outcome": "passed", "result": [{"nodeid": "testcases/test_MAndroid2SimpleTestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment0]", "type": "Function", "lineno": 118, "deselected": true}, {"nodeid": "testcases/test_MAndroid2SimpleTestCases.py::TestMAndroid2TestCases::test_MAndroid2_SMS[testParameters0-testEnvironment0]", "type": "Function", "lineno": 144, "deselected": true}, {"nodeid": "testcases/test_MAndroid2SimpleTestCases.py::TestMAndroid2TestCases::test_MAndroid2_MMS[testParameters0-testEnvironment0]", "type": "Function", "lineno": 170, "deselected": true}, {"nodeid": "testcases/test_MAndroid2SimpleTestCases.py::TestMAndroid2TestCases::test_MAndroid2_WebBrowsing[testParameters0-testEnvironment0]", "type": "Function", "lineno": 196, "deselected": true}, {"nodeid": "testcases/test_MAndroid2SimpleTestCases.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment0]", "type": "Function", "lineno": 223, "deselected": true}]}, {"nodeid": "testcases/test_MAndroid2SimpleTestCases.py::TestMAndroid2TestCases", "outcome": "passed", "result": [{"nodeid": "testcases/test_MAndroid2SimpleTestCases.py::TestMAndroid2TestCases", "type": "Instance"}]}, {"nodeid": "testcases/test_MAndroid2SimpleTestCases.py", "outcome": "passed", "result": [{"nodeid": "testcases/test_MAndroid2SimpleTestCases.py::TestMAndroid2TestCases", "type": "Class"}]}, {"nodeid": "testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "outcome": "passed", "result": [{"nodeid": "testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment0]", "type": "Function", "lineno": 100, "deselected": true}, {"nodeid": "testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment1]", "type": "Function", "lineno": 100, "deselected": true}, {"nodeid": "testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters1-testEnvironment0]", "type": "Function", "lineno": 100, "deselected": true}, {"nodeid": "testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters1-testEnvironment1]", "type": "Function", "lineno": 100, "deselected": true}]}, {"nodeid": "testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "outcome": "passed", "result": [{"nodeid": "testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "type": "Instance"}]}, {"nodeid": "testcases/test_MAndroid2TestCases.py", "outcome": "passed", "result": [{"nodeid": "testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "type": "Class"}]}], "tests": [{"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment0]", "lineno": 147, "outcome": "passed", "keywords": ["test_MAndroid2_VoiceCall[testParameters0-testEnvironment0]", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "testParameters0-testEnvironment0", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0019876956939697266, "outcome": "passed", "stdout": "------ Setup before class TestMAndroid2TestCases ------\n"}, "metadata": {"testEnvironment": {"MCloud": {"baseUrl": "http://mcloud.matrium.com.au:7100/api/v1"}, "Login": {"User": "Peter.Zhang@matrium.com.au", "accessToken": "Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e"}, "MAndroid2AgentPath": "c:/tmp/MatriumMAndroid2-release.jar", "testUsers": {"MO": {"IMSI": "505025504563848", "MSISDN": "+61431202671", "handsetID": "mcloud.matrium.com.au:7918", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}, "MT": {"IMSI": "505025104559746", "MSISDN": "+61418673947", "handsetID": "mcloud.matrium.com.au:7465", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}}}, "testParameters": {"VoiceCall": {"Duration": 8}}, "testCaseInfo": {"TestCaseID": "MAndroid2_Smoke_Test_001_Voice_Call", "Description": "Basic voice call.", "Preconditions": "None.", "TestSteps": ["Place voice call.", "Receive voice call.", "Wait for call duraton.", "End voice call."], "CheckPoints": ["Place voice call successfully.", "Receive voice call successfully.", "End voice call successfully."]}, "testResults": [{"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3010 call_phonenum +61418673947", "response": {"isSuccess": true, "startTime": 1601270570754, "callee": "+61418673947", "networkModeBeforeCall": "LTE", "description": "Make a call successfully"}, "checkPoint": "Place voice call successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3011 ", "response": {"isSuccess": true, "callAnswered": true, "ringingTime": 1601270574927, "answerTime": 1601270575083, "endTime": "0", "caller": "0431202671", "callDuration": "null", "networkModeBeforeCall": "LTE", "networkModeDuringCall": "LTE", "networkModeAfterCall": "", "description": "Call is connected successfully", "screenshotURL": "/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032255.png"}, "checkPoint": "Receive voice call successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3012", "response": {"screenshotURL": "/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152304.png", "description": "End the call successfully.", "endTime": "1601270587907", "networkModeAfterCall": "LTE", "isSuccess": "true"}, "checkPoint": "End voice call successfully."}]}, "call": {"duration": 50.046260356903076, "outcome": "passed", "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025504563848 has not been occupied.\nCorresponding device serial is 21f982c0b00c7ece.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'failed to authenticate to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7918']\nMO Handset ID is mcloud.matrium.com.au:7918\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025104559746 has not been occupied.\nCorresponding device serial is 9886734d5647434c32.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'failed to authenticate to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7465\tdevice\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7465', 'mcloud.matrium.com.au:7918']\nMT Handset ID is mcloud.matrium.com.au:7465\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9001\n{'isSuccess': True, 'startTime': 1601270553583, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270554319, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270554319, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'isSuccess': True, 'startTime': 1601270562041, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270563092, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270563092, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of placing basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3010 call_phonenum +61418673947\nResponse of placing basic voice call is:  {'isSuccess': True, 'startTime': 1601270570754, 'callee': '+61418673947', 'networkModeBeforeCall': 'LTE', 'description': 'Make a call successfully'}\nCommand of receiving basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3011 \nResponse of receiving basic voice call is:  {'isSuccess': True, 'callAnswered': True, 'ringingTime': 1601270574927, 'answerTime': 1601270575083, 'endTime': '0', 'caller': '0431202671', 'callDuration': 'null', 'networkModeBeforeCall': 'LTE', 'networkModeDuringCall': 'LTE', 'networkModeAfterCall': '', 'description': 'Call is connected successfully', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032255.png'}\nCommand of receiving basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3012\nResponse of ending basic voice call is:  {'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152304.png', 'description': 'End the call successfully.', 'endTime': '1601270587907', 'networkModeAfterCall': 'LTE', 'isSuccess': 'true'}\ndeviceSerialList to be disconnected is ['21f982c0b00c7ece', '9886734d5647434c32']\ndisconnected everything\r\n##########Calling REST API to release device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['9886734d5647434c32']\n##########Calling REST API to release device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is []\ndisconnected everything\r\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 157, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270546.5467331, "msecs": 546.7331409454346, "relativeCreated": 623.870849609375, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025504563848', 'MSISDN': '+61431202671'}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947'}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 158, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270546.5477288, "msecs": 547.7287769317627, "relativeCreated": 624.8664855957031, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'VoiceCall': {'Duration': 8}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 159, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270546.5477288, "msecs": 547.7287769317627, "relativeCreated": 624.8664855957031, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 162, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270546.5477288, "msecs": 547.7287769317627, "relativeCreated": 624.8664855957031, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test result: [{'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3010 call_phonenum +61418673947', 'response': {'isSuccess': True, 'startTime': 1601270570754, 'callee': '+61418673947', 'networkModeBeforeCall': 'LTE', 'description': 'Make a call successfully'}, 'checkPoint': 'Place voice call successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3011 ', 'response': {'isSuccess': True, 'callAnswered': True, 'ringingTime': 1601270574927, 'answerTime': 1601270575083, 'endTime': '0', 'caller': '0431202671', 'callDuration': 'null', 'networkModeBeforeCall': 'LTE', 'networkModeDuringCall': 'LTE', 'networkModeAfterCall': '', 'description': 'Call is connected successfully', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032255.png'}, 'checkPoint': 'Receive voice call successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3012', 'response': {'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152304.png', 'description': 'End the call successfully.', 'endTime': '1601270587907', 'networkModeAfterCall': 'LTE', 'isSuccess': 'true'}, 'checkPoint': 'End voice call successfully.'}].", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 172, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270591.5874445, "msecs": 587.444543838501, "relativeCreated": 45664.58225250244, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}]}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment1]", "lineno": 147, "outcome": "passed", "keywords": ["testParameters0-testEnvironment1", "TestMAndroid2TestCases", "test_MAndroid2_VoiceCall[testParameters0-testEnvironment1]", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.000993967056274414, "outcome": "passed"}, "metadata": {"testEnvironment": {"MCloud": {"baseUrl": "http://mcloud.matrium.com.au:7100/api/v1"}, "Login": {"User": "Peter.Zhang@matrium.com.au", "accessToken": "Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e"}, "MAndroid2AgentPath": "c:/tmp/MatriumMAndroid2-release.jar", "testUsers": {"MO": {"IMSI": "505025504563848", "MSISDN": "+61431202671", "handsetID": "mcloud.matrium.com.au:7918", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}, "MT": {"IMSI": "505025703492762", "MSISDN": "+61402537622", "handsetID": "mcloud.matrium.com.au:7457", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}}}, "testParameters": {"VoiceCall": {"Duration": 8}}, "testCaseInfo": {"TestCaseID": "MAndroid2_Smoke_Test_001_Voice_Call", "Description": "Basic voice call.", "Preconditions": "None.", "TestSteps": ["Place voice call.", "Receive voice call.", "Wait for call duraton.", "End voice call."], "CheckPoints": ["Place voice call successfully.", "Receive voice call successfully.", "End voice call successfully."]}, "testResults": [{"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3010 call_phonenum +61402537622", "response": {"isSuccess": true, "startTime": 1601270615422, "callee": "+61402537622", "networkModeBeforeCall": "LTE", "description": "Make a call successfully"}, "checkPoint": "Place voice call successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3011 ", "response": {"ringingTime": "1601270619049", "callDuration": "null", "networkModeBeforeCall": "HSPAP", "screenshotURL": "/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152336.png", "caller": "0431202671", "callAnswered": "true", "answerTime": "1601270621318", "description": "Call is connected successfully.", "endTime": "0", "networkModeDuringCall": "HSPAP", "networkModeAfterCall": "null", "isSuccess": "true"}, "checkPoint": "Receive voice call successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3012", "response": {"screenshotURL": "/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152352.png", "description": "End the call successfully.", "endTime": "1601270636082", "networkModeAfterCall": "LTE", "isSuccess": "true"}, "checkPoint": "End voice call successfully."}]}, "call": {"duration": 48.055946826934814, "outcome": "passed", "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025504563848 has not been occupied.\nCorresponding device serial is 21f982c0b00c7ece.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'failed to authenticate to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7918']\nMO Handset ID is mcloud.matrium.com.au:7918\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025703492762 has not been occupied.\nCorresponding device serial is ce12160ccd1f323f05.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'failed to authenticate to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7918']\nMT Handset ID is mcloud.matrium.com.au:7457\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9001\n{'isSuccess': True, 'startTime': 1601270602873, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270603619, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270603619, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9001\n{'isSuccess': True, 'startTime': 1601270608372, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270609470, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270609470, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of placing basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3010 call_phonenum +61402537622\nResponse of placing basic voice call is:  {'isSuccess': True, 'startTime': 1601270615422, 'callee': '+61402537622', 'networkModeBeforeCall': 'LTE', 'description': 'Make a call successfully'}\nCommand of receiving basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3011 \nResponse of receiving basic voice call is:  {'ringingTime': '1601270619049', 'callDuration': 'null', 'networkModeBeforeCall': 'HSPAP', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152336.png', 'caller': '0431202671', 'callAnswered': 'true', 'answerTime': '1601270621318', 'description': 'Call is connected successfully.', 'endTime': '0', 'networkModeDuringCall': 'HSPAP', 'networkModeAfterCall': 'null', 'isSuccess': 'true'}\nCommand of receiving basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3012\nResponse of ending basic voice call is:  {'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152352.png', 'description': 'End the call successfully.', 'endTime': '1601270636082', 'networkModeAfterCall': 'LTE', 'isSuccess': 'true'}\ndeviceSerialList to be disconnected is ['21f982c0b00c7ece', 'ce12160ccd1f323f05']\ndisconnected everything\r\n##########Calling REST API to release device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['ce12160ccd1f323f05']\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is []\ndisconnected everything\r\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 157, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270596.5968711, "msecs": 596.8711376190186, "relativeCreated": 50674.00884628296, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025504563848', 'MSISDN': '+61431202671'}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622'}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 158, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270596.5968711, "msecs": 596.8711376190186, "relativeCreated": 50674.00884628296, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'VoiceCall': {'Duration': 8}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 159, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270596.5968711, "msecs": 596.8711376190186, "relativeCreated": 50674.00884628296, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 162, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270596.5968711, "msecs": 596.8711376190186, "relativeCreated": 50674.00884628296, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test result: [{'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3010 call_phonenum +61402537622', 'response': {'isSuccess': True, 'startTime': 1601270615422, 'callee': '+61402537622', 'networkModeBeforeCall': 'LTE', 'description': 'Make a call successfully'}, 'checkPoint': 'Place voice call successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3011 ', 'response': {'ringingTime': '1601270619049', 'callDuration': 'null', 'networkModeBeforeCall': 'HSPAP', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152336.png', 'caller': '0431202671', 'callAnswered': 'true', 'answerTime': '1601270621318', 'description': 'Call is connected successfully.', 'endTime': '0', 'networkModeDuringCall': 'HSPAP', 'networkModeAfterCall': 'null', 'isSuccess': 'true'}, 'checkPoint': 'Receive voice call successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3012', 'response': {'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152352.png', 'description': 'End the call successfully.', 'endTime': '1601270636082', 'networkModeAfterCall': 'LTE', 'isSuccess': 'true'}, 'checkPoint': 'End voice call successfully.'}].", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 172, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270639.6467788, "msecs": 646.7788219451904, "relativeCreated": 93723.91653060913, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}]}, "teardown": {"duration": 0.0009958744049072266, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment2]", "lineno": 147, "outcome": "passed", "keywords": ["testParameters0-testEnvironment2", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "test_MAndroid2_VoiceCall[testParameters0-testEnvironment2]", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.000997304916381836, "outcome": "passed"}, "metadata": {"testEnvironment": {"MCloud": {"baseUrl": "http://mcloud.matrium.com.au:7100/api/v1"}, "Login": {"User": "Peter.Zhang@matrium.com.au", "accessToken": "Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e"}, "MAndroid2AgentPath": "c:/tmp/MatriumMAndroid2-release.jar", "testUsers": {"MO": {"IMSI": "505025104559746", "MSISDN": "+61418673947", "handsetID": "mcloud.matrium.com.au:7465", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}, "MT": {"IMSI": "505025504563848", "MSISDN": "+61431202671", "handsetID": "mcloud.matrium.com.au:7918", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}}}, "testParameters": {"VoiceCall": {"Duration": 8}}, "testCaseInfo": {"TestCaseID": "MAndroid2_Smoke_Test_001_Voice_Call", "Description": "Basic voice call.", "Preconditions": "None.", "TestSteps": ["Place voice call.", "Receive voice call.", "Wait for call duraton.", "End voice call."], "CheckPoints": ["Place voice call successfully.", "Receive voice call successfully.", "End voice call successfully."]}, "testResults": [{"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3010 call_phonenum +61431202671", "response": {"isSuccess": true, "startTime": 1601270670763, "callee": "+61431202671", "networkModeBeforeCall": "LTE", "description": "Make a call successfully"}, "checkPoint": "Place voice call successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3011 ", "response": {"ringingTime": "1601270674228", "callDuration": "null", "networkModeBeforeCall": "LTE", "screenshotURL": "/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152431.png", "caller": "+61418673947", "callAnswered": "true", "answerTime": "1601270676282", "description": "Call is connected successfully.", "endTime": "0", "networkModeDuringCall": "LTE", "networkModeAfterCall": "null", "isSuccess": "true"}, "checkPoint": "Receive voice call successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3012", "response": {"isSuccess": true, "endTime": 1601270691746, "networkModeAfterCall": "LTE", "description": "End the call successfully", "screenshotURL": "/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032451.png"}, "checkPoint": "End voice call successfully."}]}, "call": {"duration": 53.476154804229736, "outcome": "passed", "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025104559746 has not been occupied.\nCorresponding device serial is 9886734d5647434c32.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'failed to authenticate to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7465\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7465']\nMO Handset ID is mcloud.matrium.com.au:7465\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025504563848 has not been occupied.\nCorresponding device serial is 21f982c0b00c7ece.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'failed to authenticate to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7465\tdevice\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7465', 'mcloud.matrium.com.au:7918']\nMT Handset ID is mcloud.matrium.com.au:7918\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'isSuccess': True, 'startTime': 1601270653807, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270654917, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270654917, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9001\n{'isSuccess': True, 'startTime': 1601270661906, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270662685, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270662685, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of placing basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3010 call_phonenum +61431202671\nResponse of placing basic voice call is:  {'isSuccess': True, 'startTime': 1601270670763, 'callee': '+61431202671', 'networkModeBeforeCall': 'LTE', 'description': 'Make a call successfully'}\nCommand of receiving basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3011 \nResponse of receiving basic voice call is:  {'ringingTime': '1601270674228', 'callDuration': 'null', 'networkModeBeforeCall': 'LTE', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152431.png', 'caller': '+61418673947', 'callAnswered': 'true', 'answerTime': '1601270676282', 'description': 'Call is connected successfully.', 'endTime': '0', 'networkModeDuringCall': 'LTE', 'networkModeAfterCall': 'null', 'isSuccess': 'true'}\nCommand of receiving basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3012\nResponse of ending basic voice call is:  {'isSuccess': True, 'endTime': 1601270691746, 'networkModeAfterCall': 'LTE', 'description': 'End the call successfully', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032451.png'}\ndeviceSerialList to be disconnected is ['9886734d5647434c32', '21f982c0b00c7ece']\ndisconnected everything\r\n##########Calling REST API to release device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['21f982c0b00c7ece']\n##########Calling REST API to release device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is []\ndisconnected everything\r\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 157, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270644.6607869, "msecs": 660.7868671417236, "relativeCreated": 98737.92457580566, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025104559746', 'MSISDN': '+61418673947'}, 'MT': {'IMSI': '505025504563848', 'MSISDN': '+61431202671'}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 158, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270644.661785, "msecs": 661.7848873138428, "relativeCreated": 98738.92259597778, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'VoiceCall': {'Duration': 8}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 159, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270644.661785, "msecs": 661.7848873138428, "relativeCreated": 98738.92259597778, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 162, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270644.661785, "msecs": 661.7848873138428, "relativeCreated": 98738.92259597778, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test result: [{'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3010 call_phonenum +61431202671', 'response': {'isSuccess': True, 'startTime': 1601270670763, 'callee': '+61431202671', 'networkModeBeforeCall': 'LTE', 'description': 'Make a call successfully'}, 'checkPoint': 'Place voice call successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3011 ', 'response': {'ringingTime': '1601270674228', 'callDuration': 'null', 'networkModeBeforeCall': 'LTE', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152431.png', 'caller': '+61418673947', 'callAnswered': 'true', 'answerTime': '1601270676282', 'description': 'Call is connected successfully.', 'endTime': '0', 'networkModeDuringCall': 'LTE', 'networkModeAfterCall': 'null', 'isSuccess': 'true'}, 'checkPoint': 'Receive voice call successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3012', 'response': {'isSuccess': True, 'endTime': 1601270691746, 'networkModeAfterCall': 'LTE', 'description': 'End the call successfully', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032451.png'}, 'checkPoint': 'End voice call successfully.'}].", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 172, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270693.125809, "msecs": 125.8089542388916, "relativeCreated": 147202.94666290283, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}]}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment3]", "lineno": 147, "outcome": "passed", "keywords": ["TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "test_MAndroid2_VoiceCall[testParameters0-testEnvironment3]", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "testParameters0-testEnvironment3", "parametrize", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0, "outcome": "passed"}, "metadata": {"testEnvironment": {"MCloud": {"baseUrl": "http://mcloud.matrium.com.au:7100/api/v1"}, "Login": {"User": "Peter.Zhang@matrium.com.au", "accessToken": "Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e"}, "MAndroid2AgentPath": "c:/tmp/MatriumMAndroid2-release.jar", "testUsers": {"MO": {"IMSI": "505025104559746", "MSISDN": "+61418673947", "handsetID": "mcloud.matrium.com.au:7465", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}, "MT": {"IMSI": "505025703492762", "MSISDN": "+61402537622", "handsetID": "mcloud.matrium.com.au:7457", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}}}, "testParameters": {"VoiceCall": {"Duration": 8}}, "testCaseInfo": {"TestCaseID": "MAndroid2_Smoke_Test_001_Voice_Call", "Description": "Basic voice call.", "Preconditions": "None.", "TestSteps": ["Place voice call.", "Receive voice call.", "Wait for call duraton.", "End voice call."], "CheckPoints": ["Place voice call successfully.", "Receive voice call successfully.", "End voice call successfully."]}, "testResults": [{"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3010 call_phonenum +61402537622", "response": {"isSuccess": true, "startTime": 1601270724798, "callee": "+61402537622", "networkModeBeforeCall": "LTE", "description": "Make a call successfully"}, "checkPoint": "Place voice call successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3011 ", "response": {"ringingTime": "1601270730936", "callDuration": "null", "networkModeBeforeCall": "HSPAP", "screenshotURL": "/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152525.png", "caller": "0418673947", "callAnswered": "true", "answerTime": "1601270733030", "description": "Call is connected successfully.", "endTime": "0", "networkModeDuringCall": "HSPAP", "networkModeAfterCall": "null", "isSuccess": "true"}, "checkPoint": "Receive voice call successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3012", "response": {"isSuccess": true, "endTime": 1601270748156, "networkModeAfterCall": "LTE", "description": "End the call successfully", "screenshotURL": "/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032548.png"}, "checkPoint": "End voice call successfully."}]}, "call": {"duration": 56.49271011352539, "outcome": "passed", "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025104559746 has not been occupied.\nCorresponding device serial is 9886734d5647434c32.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'failed to authenticate to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7465\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7465']\nMO Handset ID is mcloud.matrium.com.au:7465\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025703492762 has not been occupied.\nCorresponding device serial is ce12160ccd1f323f05.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'failed to authenticate to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7465\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7465']\nMT Handset ID is mcloud.matrium.com.au:7457\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'isSuccess': True, 'startTime': 1601270707100, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270708199, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270708199, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9001\n{'isSuccess': True, 'startTime': 1601270715472, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270716416, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270716416, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of placing basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3010 call_phonenum +61402537622\nResponse of placing basic voice call is:  {'isSuccess': True, 'startTime': 1601270724798, 'callee': '+61402537622', 'networkModeBeforeCall': 'LTE', 'description': 'Make a call successfully'}\nCommand of receiving basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3011 \nResponse of receiving basic voice call is:  {'ringingTime': '1601270730936', 'callDuration': 'null', 'networkModeBeforeCall': 'HSPAP', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152525.png', 'caller': '0418673947', 'callAnswered': 'true', 'answerTime': '1601270733030', 'description': 'Call is connected successfully.', 'endTime': '0', 'networkModeDuringCall': 'HSPAP', 'networkModeAfterCall': 'null', 'isSuccess': 'true'}\nCommand of receiving basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3012\nResponse of ending basic voice call is:  {'isSuccess': True, 'endTime': 1601270748156, 'networkModeAfterCall': 'LTE', 'description': 'End the call successfully', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032548.png'}\ndeviceSerialList to be disconnected is ['9886734d5647434c32', 'ce12160ccd1f323f05']\ndisconnected everything\r\n##########Calling REST API to release device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['ce12160ccd1f323f05']\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is []\ndisconnected everything\r\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 157, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270698.1339824, "msecs": 133.98241996765137, "relativeCreated": 152211.1201286316, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025104559746', 'MSISDN': '+61418673947'}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622'}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 158, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270698.1349792, "msecs": 134.979248046875, "relativeCreated": 152212.11695671082, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'VoiceCall': {'Duration': 8}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 159, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270698.1349792, "msecs": 134.979248046875, "relativeCreated": 152212.11695671082, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 162, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270698.1349792, "msecs": 134.979248046875, "relativeCreated": 152212.11695671082, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test result: [{'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3010 call_phonenum +61402537622', 'response': {'isSuccess': True, 'startTime': 1601270724798, 'callee': '+61402537622', 'networkModeBeforeCall': 'LTE', 'description': 'Make a call successfully'}, 'checkPoint': 'Place voice call successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3011 ', 'response': {'ringingTime': '1601270730936', 'callDuration': 'null', 'networkModeBeforeCall': 'HSPAP', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152525.png', 'caller': '0418673947', 'callAnswered': 'true', 'answerTime': '1601270733030', 'description': 'Call is connected successfully.', 'endTime': '0', 'networkModeDuringCall': 'HSPAP', 'networkModeAfterCall': 'null', 'isSuccess': 'true'}, 'checkPoint': 'Receive voice call successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3012', 'response': {'isSuccess': True, 'endTime': 1601270748156, 'networkModeAfterCall': 'LTE', 'description': 'End the call successfully', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032548.png'}, 'checkPoint': 'End voice call successfully.'}].", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 172, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270749.6181724, "msecs": 618.1724071502686, "relativeCreated": 203695.3101158142, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}]}, "teardown": {"duration": 0.001988649368286133, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment4]", "lineno": 147, "outcome": "passed", "keywords": ["testParameters0-testEnvironment4", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "test_MAndroid2_VoiceCall[testParameters0-testEnvironment4]", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0010099411010742188, "outcome": "passed"}, "metadata": {"testEnvironment": {"MCloud": {"baseUrl": "http://mcloud.matrium.com.au:7100/api/v1"}, "Login": {"User": "Peter.Zhang@matrium.com.au", "accessToken": "Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e"}, "MAndroid2AgentPath": "c:/tmp/MatriumMAndroid2-release.jar", "testUsers": {"MO": {"IMSI": "505025703492762", "MSISDN": "+61402537622", "handsetID": "mcloud.matrium.com.au:7457", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}, "MT": {"IMSI": "505025504563848", "MSISDN": "+61431202671", "handsetID": "mcloud.matrium.com.au:7918", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}}}, "testParameters": {"VoiceCall": {"Duration": 8}}, "testCaseInfo": {"TestCaseID": "MAndroid2_Smoke_Test_001_Voice_Call", "Description": "Basic voice call.", "Preconditions": "None.", "TestSteps": ["Place voice call.", "Receive voice call.", "Wait for call duraton.", "End voice call."], "CheckPoints": ["Place voice call successfully.", "Receive voice call successfully.", "End voice call successfully."]}, "testResults": [{"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3010 call_phonenum +61431202671", "response": {"isSuccess": true, "startTime": 1601270774908, "callee": "+61431202671", "networkModeBeforeCall": "LTE", "description": "Make a call successfully"}, "checkPoint": "Place voice call successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3011 ", "response": {"ringingTime": "1601270782485", "callDuration": "null", "networkModeBeforeCall": "LTE", "screenshotURL": "/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152615.png", "caller": "+61402537622", "callAnswered": "true", "answerTime": "1601270784712", "description": "Call is connected successfully.", "endTime": "0", "networkModeDuringCall": "LTE", "networkModeAfterCall": "null", "isSuccess": "true"}, "checkPoint": "Receive voice call successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3012", "response": {"screenshotURL": "/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152636.png", "description": "End the call successfully.", "endTime": "1601270799512", "networkModeAfterCall": "HSPAP", "isSuccess": "true"}, "checkPoint": "End voice call successfully."}]}, "call": {"duration": 53.474534034729004, "outcome": "passed", "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025703492762 has not been occupied.\nCorresponding device serial is ce12160ccd1f323f05.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'failed to authenticate to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457']\nMO Handset ID is mcloud.matrium.com.au:7457\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025504563848 has not been occupied.\nCorresponding device serial is 21f982c0b00c7ece.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'failed to authenticate to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7918']\nMT Handset ID is mcloud.matrium.com.au:7918\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9001\n{'isSuccess': True, 'startTime': 1601270761088, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270761751, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270761751, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9001\n{'isSuccess': True, 'startTime': 1601270767643, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270768404, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270768404, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of placing basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3010 call_phonenum +61431202671\nResponse of placing basic voice call is:  {'isSuccess': True, 'startTime': 1601270774908, 'callee': '+61431202671', 'networkModeBeforeCall': 'LTE', 'description': 'Make a call successfully'}\nCommand of receiving basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3011 \nResponse of receiving basic voice call is:  {'ringingTime': '1601270782485', 'callDuration': 'null', 'networkModeBeforeCall': 'LTE', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152615.png', 'caller': '+61402537622', 'callAnswered': 'true', 'answerTime': '1601270784712', 'description': 'Call is connected successfully.', 'endTime': '0', 'networkModeDuringCall': 'LTE', 'networkModeAfterCall': 'null', 'isSuccess': 'true'}\nCommand of receiving basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3012\nResponse of ending basic voice call is:  {'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152636.png', 'description': 'End the call successfully.', 'endTime': '1601270799512', 'networkModeAfterCall': 'HSPAP', 'isSuccess': 'true'}\ndeviceSerialList to be disconnected is ['ce12160ccd1f323f05', '21f982c0b00c7ece']\ndisconnected everything\r\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['21f982c0b00c7ece']\n##########Calling REST API to release device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is []\ndisconnected everything\r\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 157, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270754.641617, "msecs": 641.6170597076416, "relativeCreated": 208718.75476837158, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025703492762', 'MSISDN': '+61402537622'}, 'MT': {'IMSI': '505025504563848', 'MSISDN': '+61431202671'}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 158, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270754.641617, "msecs": 641.6170597076416, "relativeCreated": 208718.75476837158, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'VoiceCall': {'Duration': 8}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 159, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270754.641617, "msecs": 641.6170597076416, "relativeCreated": 208718.75476837158, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 162, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270754.641617, "msecs": 641.6170597076416, "relativeCreated": 208718.75476837158, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test result: [{'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3010 call_phonenum +61431202671', 'response': {'isSuccess': True, 'startTime': 1601270774908, 'callee': '+61431202671', 'networkModeBeforeCall': 'LTE', 'description': 'Make a call successfully'}, 'checkPoint': 'Place voice call successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3011 ', 'response': {'ringingTime': '1601270782485', 'callDuration': 'null', 'networkModeBeforeCall': 'LTE', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152615.png', 'caller': '+61402537622', 'callAnswered': 'true', 'answerTime': '1601270784712', 'description': 'Call is connected successfully.', 'endTime': '0', 'networkModeDuringCall': 'LTE', 'networkModeAfterCall': 'null', 'isSuccess': 'true'}, 'checkPoint': 'Receive voice call successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3012', 'response': {'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152636.png', 'description': 'End the call successfully.', 'endTime': '1601270799512', 'networkModeAfterCall': 'HSPAP', 'isSuccess': 'true'}, 'checkPoint': 'End voice call successfully.'}].", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 172, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270803.1045554, "msecs": 104.55536842346191, "relativeCreated": 257181.6930770874, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}]}, "teardown": {"duration": 0.0009953975677490234, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_VoiceCall[testParameters0-testEnvironment5]", "lineno": 147, "outcome": "passed", "keywords": ["TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "test_MAndroid2_VoiceCall[testParameters0-testEnvironment5]", "testParameters0-testEnvironment5", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0009961128234863281, "outcome": "passed"}, "metadata": {"testEnvironment": {"MCloud": {"baseUrl": "http://mcloud.matrium.com.au:7100/api/v1"}, "Login": {"User": "Peter.Zhang@matrium.com.au", "accessToken": "Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e"}, "MAndroid2AgentPath": "c:/tmp/MatriumMAndroid2-release.jar", "testUsers": {"MO": {"IMSI": "505025703492762", "MSISDN": "+61402537622", "handsetID": "mcloud.matrium.com.au:7457", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}, "MT": {"IMSI": "505025104559746", "MSISDN": "+61418673947", "handsetID": "mcloud.matrium.com.au:7465", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}}}, "testParameters": {"VoiceCall": {"Duration": 8}}, "testCaseInfo": {"TestCaseID": "MAndroid2_Smoke_Test_001_Voice_Call", "Description": "Basic voice call.", "Preconditions": "None.", "TestSteps": ["Place voice call.", "Receive voice call.", "Wait for call duraton.", "End voice call."], "CheckPoints": ["Place voice call successfully.", "Receive voice call successfully.", "End voice call successfully."]}, "testResults": [{"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3010 call_phonenum +61418673947", "response": {"isSuccess": true, "startTime": 1601270832579, "callee": "+61418673947", "networkModeBeforeCall": "LTE", "description": "Make a call successfully"}, "checkPoint": "Place voice call successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3011 ", "response": {"isSuccess": true, "callAnswered": true, "ringingTime": 1601270836928, "answerTime": 1601270837004, "endTime": "0", "caller": "0402537622", "callDuration": "null", "networkModeBeforeCall": "LTE", "networkModeDuringCall": "LTE", "networkModeAfterCall": "", "description": "Call is connected successfully", "screenshotURL": "/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032717.png"}, "checkPoint": "Receive voice call successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3012", "response": {"screenshotURL": "/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152726.png", "description": "End the call successfully.", "endTime": "1601270850043", "networkModeAfterCall": "HSPAP", "isSuccess": "true"}, "checkPoint": "End voice call successfully."}]}, "call": {"duration": 50.63937330245972, "outcome": "passed", "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025703492762 has not been occupied.\nCorresponding device serial is ce12160ccd1f323f05.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'failed to authenticate to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457']\nMO Handset ID is mcloud.matrium.com.au:7457\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025104559746 has not been occupied.\nCorresponding device serial is 9886734d5647434c32.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'failed to authenticate to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7465\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7465']\nMT Handset ID is mcloud.matrium.com.au:7465\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9001\n{'isSuccess': True, 'startTime': 1601270814706, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270815158, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270815158, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'isSuccess': True, 'startTime': 1601270822958, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270824064, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270824064, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of placing basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3010 call_phonenum +61418673947\nResponse of placing basic voice call is:  {'isSuccess': True, 'startTime': 1601270832579, 'callee': '+61418673947', 'networkModeBeforeCall': 'LTE', 'description': 'Make a call successfully'}\nCommand of receiving basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3011 \nResponse of receiving basic voice call is:  {'isSuccess': True, 'callAnswered': True, 'ringingTime': 1601270836928, 'answerTime': 1601270837004, 'endTime': '0', 'caller': '0402537622', 'callDuration': 'null', 'networkModeBeforeCall': 'LTE', 'networkModeDuringCall': 'LTE', 'networkModeAfterCall': '', 'description': 'Call is connected successfully', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032717.png'}\nCommand of receiving basic voice call is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3012\nResponse of ending basic voice call is:  {'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152726.png', 'description': 'End the call successfully.', 'endTime': '1601270850043', 'networkModeAfterCall': 'HSPAP', 'isSuccess': 'true'}\ndeviceSerialList to be disconnected is ['ce12160ccd1f323f05', '9886734d5647434c32']\ndisconnected everything\r\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['9886734d5647434c32']\n##########Calling REST API to release device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is []\ndisconnected everything\r\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 157, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270808.117064, "msecs": 117.06399917602539, "relativeCreated": 262194.20170783997, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025703492762', 'MSISDN': '+61402537622'}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947'}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 158, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270808.117064, "msecs": 117.06399917602539, "relativeCreated": 262194.20170783997, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'VoiceCall': {'Duration': 8}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 159, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270808.117064, "msecs": 117.06399917602539, "relativeCreated": 262194.20170783997, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 162, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270808.118093, "msecs": 118.09301376342773, "relativeCreated": 262195.23072242737, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test result: [{'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3010 call_phonenum +61418673947', 'response': {'isSuccess': True, 'startTime': 1601270832579, 'callee': '+61418673947', 'networkModeBeforeCall': 'LTE', 'description': 'Make a call successfully'}, 'checkPoint': 'Place voice call successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3011 ', 'response': {'isSuccess': True, 'callAnswered': True, 'ringingTime': 1601270836928, 'answerTime': 1601270837004, 'endTime': '0', 'caller': '0402537622', 'callDuration': 'null', 'networkModeBeforeCall': 'LTE', 'networkModeDuringCall': 'LTE', 'networkModeAfterCall': '', 'description': 'Call is connected successfully', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032717.png'}, 'checkPoint': 'Receive voice call successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3012', 'response': {'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152726.png', 'description': 'End the call successfully.', 'endTime': '1601270850043', 'networkModeAfterCall': 'HSPAP', 'isSuccess': 'true'}, 'checkPoint': 'End voice call successfully.'}].", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 172, "funcName": "test_MAndroid2_VoiceCall", "created": 1601270853.747083, "msecs": 747.0829486846924, "relativeCreated": 307824.22065734863, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}]}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_SMS[testParameters0-testEnvironment0]", "lineno": 178, "outcome": "passed", "keywords": ["test_MAndroid2_SMS[testParameters0-testEnvironment0]", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "testParameters0-testEnvironment0", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0009949207305908203, "outcome": "passed"}, "metadata": {"testEnvironment": {"MCloud": {"baseUrl": "http://mcloud.matrium.com.au:7100/api/v1"}, "Login": {"User": "Peter.Zhang@matrium.com.au", "accessToken": "Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e"}, "MAndroid2AgentPath": "c:/tmp/MatriumMAndroid2-release.jar", "testUsers": {"MO": {"IMSI": "505025504563848", "MSISDN": "+61431202671", "handsetID": "mcloud.matrium.com.au:7918", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}, "MT": {"IMSI": "505025104559746", "MSISDN": "+61418673947", "handsetID": "mcloud.matrium.com.au:7465", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}}}, "testParameters": {"SMS": {"Duration": 5, "smsBody": "MAndroid2 SMS test."}}, "testCaseInfo": {"TestCaseID": "MAndroid2_Smoke_Test_002_SMS", "Description": "Basic SMS.", "Preconditions": "None.", "TestSteps": ["Send SMS.", "Wait for SMS duraton.", "Receive SMS."], "CheckPoints": ["Send SMS successfully.", "Receive SMS successfully."]}, "testResults": [{"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3001 sms_address +61418673947 sms_body \"MAndroid2\\ SMS\\ test.\"", "response": {"isSuccess": true, "startTime": 1601270882423, "description": "SMS is sent"}, "checkPoint": "Send SMS successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3002", "response": {"isSuccess": true, "startTime": 1601270892727, "receivedTime": 1601270883524, "smsFrom": "+61431202671", "smsBody": "MAndroid2 SMS test.", "description": "Received SMS successfully"}, "checkPoint": "Receive SMS successfully."}]}, "call": {"duration": 40.48857259750366, "outcome": "passed", "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025504563848 has not been occupied.\nCorresponding device serial is 21f982c0b00c7ece.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'failed to authenticate to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7918']\nMO Handset ID is mcloud.matrium.com.au:7918\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025104559746 has not been occupied.\nCorresponding device serial is 9886734d5647434c32.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'failed to authenticate to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7465\tdevice\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7465', 'mcloud.matrium.com.au:7918']\nMT Handset ID is mcloud.matrium.com.au:7465\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9001\n{'isSuccess': True, 'startTime': 1601270864956, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270865732, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270865732, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'isSuccess': True, 'startTime': 1601270873414, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270874474, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270874474, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of sending SMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3001 sms_address +61418673947 sms_body \"MAndroid2\\ SMS\\ test.\"\nResponse of sending SMS is:  {'isSuccess': True, 'startTime': 1601270882423, 'description': 'SMS is sent'}\nCommand of receiving SMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3002\nResponse of receiving SMS is:  {'isSuccess': True, 'startTime': 1601270892727, 'receivedTime': 1601270883524, 'smsFrom': '+61431202671', 'smsBody': 'MAndroid2 SMS test.', 'description': 'Received SMS successfully'}\ndeviceSerialList to be disconnected is ['21f982c0b00c7ece', '9886734d5647434c32']\ndisconnected everything\r\n##########Calling REST API to release device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['9886734d5647434c32']\n##########Calling REST API to release device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is []\ndisconnected everything\r\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 188, "funcName": "test_MAndroid2_SMS", "created": 1601270858.755345, "msecs": 755.3451061248779, "relativeCreated": 312832.4828147888, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 189, "funcName": "test_MAndroid2_SMS", "created": 1601270858.755345, "msecs": 755.3451061248779, "relativeCreated": 312832.4828147888, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'SMS': {'Duration': 5, 'smsBody': 'MAndroid2 SMS test.'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 190, "funcName": "test_MAndroid2_SMS", "created": 1601270858.755345, "msecs": 755.3451061248779, "relativeCreated": 312832.4828147888, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 193, "funcName": "test_MAndroid2_SMS", "created": 1601270858.755345, "msecs": 755.3451061248779, "relativeCreated": 312832.4828147888, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test result: [{'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3001 sms_address +61418673947 sms_body \"MAndroid2\\\\ SMS\\\\ test.\"', 'response': {'isSuccess': True, 'startTime': 1601270882423, 'description': 'SMS is sent'}, 'checkPoint': 'Send SMS successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3002', 'response': {'isSuccess': True, 'startTime': 1601270892727, 'receivedTime': 1601270883524, 'smsFrom': '+61431202671', 'smsBody': 'MAndroid2 SMS test.', 'description': 'Received SMS successfully'}, 'checkPoint': 'Receive SMS successfully.'}].", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 203, "funcName": "test_MAndroid2_SMS", "created": 1601270894.236955, "msecs": 236.954927444458, "relativeCreated": 348314.0926361084, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}]}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_SMS[testParameters0-testEnvironment1]", "lineno": 178, "outcome": "passed", "keywords": ["testParameters0-testEnvironment1", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "()", "test_MAndroid2_SMS[testParameters0-testEnvironment1]", "MAndroid2SmokeTest"], "setup": {"duration": 0.0, "outcome": "passed"}, "metadata": {"testEnvironment": {"MCloud": {"baseUrl": "http://mcloud.matrium.com.au:7100/api/v1"}, "Login": {"User": "Peter.Zhang@matrium.com.au", "accessToken": "Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e"}, "MAndroid2AgentPath": "c:/tmp/MatriumMAndroid2-release.jar", "testUsers": {"MO": {"IMSI": "505025504563848", "MSISDN": "+61431202671", "handsetID": "mcloud.matrium.com.au:7918", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}, "MT": {"IMSI": "505025703492762", "MSISDN": "+61402537622", "handsetID": "mcloud.matrium.com.au:7457", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}}}, "testParameters": {"SMS": {"Duration": 5, "smsBody": "MAndroid2 SMS test."}}, "testCaseInfo": {"TestCaseID": "MAndroid2_Smoke_Test_002_SMS", "Description": "Basic SMS.", "Preconditions": "None.", "TestSteps": ["Send SMS.", "Wait for SMS duraton.", "Receive SMS."], "CheckPoints": ["Send SMS successfully.", "Receive SMS successfully."]}, "testResults": [{"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3001 sms_address +61402537622 sms_body \"MAndroid2\\ SMS\\ test.\"", "response": {"isSuccess": true, "startTime": 1601270917791, "description": "SMS is sent"}, "checkPoint": "Send SMS successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3002", "response": {"isSuccess": true, "startTime": 1601270926002, "receivedTime": 1601270919182, "smsFrom": "+61431202671", "smsBody": "MAndroid2 SMS test.", "description": "Received SMS successfully"}, "checkPoint": "Receive SMS successfully."}]}, "call": {"duration": 32.29461407661438, "outcome": "passed", "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025504563848 has not been occupied.\nCorresponding device serial is 21f982c0b00c7ece.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'failed to authenticate to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7918']\nMO Handset ID is mcloud.matrium.com.au:7918\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025703492762 has not been occupied.\nCorresponding device serial is ce12160ccd1f323f05.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'failed to authenticate to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7918']\nMT Handset ID is mcloud.matrium.com.au:7457\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9001\n{'isSuccess': True, 'startTime': 1601270905483, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270906246, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270906246, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9001\n{'isSuccess': True, 'startTime': 1601270911567, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270911820, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270911820, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of sending SMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3001 sms_address +61402537622 sms_body \"MAndroid2\\ SMS\\ test.\"\nResponse of sending SMS is:  {'isSuccess': True, 'startTime': 1601270917791, 'description': 'SMS is sent'}\nCommand of receiving SMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3002\nResponse of receiving SMS is:  {'isSuccess': True, 'startTime': 1601270926002, 'receivedTime': 1601270919182, 'smsFrom': '+61431202671', 'smsBody': 'MAndroid2 SMS test.', 'description': 'Received SMS successfully'}\ndeviceSerialList to be disconnected is ['21f982c0b00c7ece', 'ce12160ccd1f323f05']\ndisconnected everything\r\n##########Calling REST API to release device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['ce12160ccd1f323f05']\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is []\ndisconnected everything\r\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 188, "funcName": "test_MAndroid2_SMS", "created": 1601270899.2497826, "msecs": 249.78256225585938, "relativeCreated": 353326.9202709198, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 189, "funcName": "test_MAndroid2_SMS", "created": 1601270899.2497826, "msecs": 249.78256225585938, "relativeCreated": 353326.9202709198, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'SMS': {'Duration': 5, 'smsBody': 'MAndroid2 SMS test.'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 190, "funcName": "test_MAndroid2_SMS", "created": 1601270899.2497826, "msecs": 249.78256225585938, "relativeCreated": 353326.9202709198, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 193, "funcName": "test_MAndroid2_SMS", "created": 1601270899.2497826, "msecs": 249.78256225585938, "relativeCreated": 353326.9202709198, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test result: [{'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3001 sms_address +61402537622 sms_body \"MAndroid2\\\\ SMS\\\\ test.\"', 'response': {'isSuccess': True, 'startTime': 1601270917791, 'description': 'SMS is sent'}, 'checkPoint': 'Send SMS successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3002', 'response': {'isSuccess': True, 'startTime': 1601270926002, 'receivedTime': 1601270919182, 'smsFrom': '+61431202671', 'smsBody': 'MAndroid2 SMS test.', 'description': 'Received SMS successfully'}, 'checkPoint': 'Receive SMS successfully.'}].", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 203, "funcName": "test_MAndroid2_SMS", "created": 1601270926.5333025, "msecs": 533.3025455474854, "relativeCreated": 380610.4402542114, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}]}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_SMS[testParameters0-testEnvironment2]", "lineno": 178, "outcome": "passed", "keywords": ["testParameters0-testEnvironment2", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "()", "test_MAndroid2_SMS[testParameters0-testEnvironment2]", "MAndroid2SmokeTest"], "setup": {"duration": 0.0009968280792236328, "outcome": "passed"}, "metadata": {"testEnvironment": {"MCloud": {"baseUrl": "http://mcloud.matrium.com.au:7100/api/v1"}, "Login": {"User": "Peter.Zhang@matrium.com.au", "accessToken": "Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e"}, "MAndroid2AgentPath": "c:/tmp/MatriumMAndroid2-release.jar", "testUsers": {"MO": {"IMSI": "505025104559746", "MSISDN": "+61418673947", "handsetID": "mcloud.matrium.com.au:7465", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}, "MT": {"IMSI": "505025504563848", "MSISDN": "+61431202671", "handsetID": "mcloud.matrium.com.au:7918", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}}}, "testParameters": {"SMS": {"Duration": 5, "smsBody": "MAndroid2 SMS test."}}, "testCaseInfo": {"TestCaseID": "MAndroid2_Smoke_Test_002_SMS", "Description": "Basic SMS.", "Preconditions": "None.", "TestSteps": ["Send SMS.", "Wait for SMS duraton.", "Receive SMS."], "CheckPoints": ["Send SMS successfully.", "Receive SMS successfully."]}, "testResults": [{"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3001 sms_address +61431202671 sms_body \"MAndroid2\\ SMS\\ test.\"", "response": {"isSuccess": true, "startTime": 1601270957204, "description": "SMS is sent"}, "checkPoint": "Send SMS successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3002", "response": {"isSuccess": true, "startTime": 1601270965470, "receivedTime": 1601270959010, "smsFrom": "+61418673947", "smsBody": "MAndroid2 SMS test.", "description": "Received SMS successfully"}, "checkPoint": "Receive SMS successfully."}]}, "call": {"duration": 39.92094135284424, "outcome": "passed", "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025104559746 has not been occupied.\nCorresponding device serial is 9886734d5647434c32.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'failed to authenticate to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7465\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7465']\nMO Handset ID is mcloud.matrium.com.au:7465\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025504563848 has not been occupied.\nCorresponding device serial is 21f982c0b00c7ece.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'failed to authenticate to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7465\tdevice\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7465', 'mcloud.matrium.com.au:7918']\nMT Handset ID is mcloud.matrium.com.au:7918\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'isSuccess': True, 'startTime': 1601270940475, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270941585, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270941585, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9001\n{'isSuccess': True, 'startTime': 1601270948487, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270949216, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270949216, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of sending SMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3001 sms_address +61431202671 sms_body \"MAndroid2\\ SMS\\ test.\"\nResponse of sending SMS is:  {'isSuccess': True, 'startTime': 1601270957204, 'description': 'SMS is sent'}\nCommand of receiving SMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3002\nResponse of receiving SMS is:  {'isSuccess': True, 'startTime': 1601270965470, 'receivedTime': 1601270959010, 'smsFrom': '+61418673947', 'smsBody': 'MAndroid2 SMS test.', 'description': 'Received SMS successfully'}\ndeviceSerialList to be disconnected is ['9886734d5647434c32', '21f982c0b00c7ece']\ndisconnected everything\r\n##########Calling REST API to release device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['21f982c0b00c7ece']\n##########Calling REST API to release device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is []\ndisconnected everything\r\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 188, "funcName": "test_MAndroid2_SMS", "created": 1601270931.5454173, "msecs": 545.417308807373, "relativeCreated": 385622.5550174713, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 189, "funcName": "test_MAndroid2_SMS", "created": 1601270931.5454173, "msecs": 545.417308807373, "relativeCreated": 385622.5550174713, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'SMS': {'Duration': 5, 'smsBody': 'MAndroid2 SMS test.'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 190, "funcName": "test_MAndroid2_SMS", "created": 1601270931.5454173, "msecs": 545.417308807373, "relativeCreated": 385622.5550174713, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 193, "funcName": "test_MAndroid2_SMS", "created": 1601270931.5454173, "msecs": 545.417308807373, "relativeCreated": 385622.5550174713, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test result: [{'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3001 sms_address +61431202671 sms_body \"MAndroid2\\\\ SMS\\\\ test.\"', 'response': {'isSuccess': True, 'startTime': 1601270957204, 'description': 'SMS is sent'}, 'checkPoint': 'Send SMS successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3002', 'response': {'isSuccess': True, 'startTime': 1601270965470, 'receivedTime': 1601270959010, 'smsFrom': '+61418673947', 'smsBody': 'MAndroid2 SMS test.', 'description': 'Received SMS successfully'}, 'checkPoint': 'Receive SMS successfully.'}].", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 203, "funcName": "test_MAndroid2_SMS", "created": 1601270966.455675, "msecs": 455.6748867034912, "relativeCreated": 420532.81259536743, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}]}, "teardown": {"duration": 0.0009970664978027344, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_SMS[testParameters0-testEnvironment3]", "lineno": 178, "outcome": "passed", "keywords": ["test_MAndroid2_SMS[testParameters0-testEnvironment3]", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "testParameters0-testEnvironment3", "parametrize", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0019943714141845703, "outcome": "passed"}, "metadata": {"testEnvironment": {"MCloud": {"baseUrl": "http://mcloud.matrium.com.au:7100/api/v1"}, "Login": {"User": "Peter.Zhang@matrium.com.au", "accessToken": "Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e"}, "MAndroid2AgentPath": "c:/tmp/MatriumMAndroid2-release.jar", "testUsers": {"MO": {"IMSI": "505025104559746", "MSISDN": "+61418673947", "handsetID": "mcloud.matrium.com.au:7465", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}, "MT": {"IMSI": "505025703492762", "MSISDN": "+61402537622", "handsetID": "mcloud.matrium.com.au:7457", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}}}, "testParameters": {"SMS": {"Duration": 5, "smsBody": "MAndroid2 SMS test."}}, "testCaseInfo": {"TestCaseID": "MAndroid2_Smoke_Test_002_SMS", "Description": "Basic SMS.", "Preconditions": "None.", "TestSteps": ["Send SMS.", "Wait for SMS duraton.", "Receive SMS."], "CheckPoints": ["Send SMS successfully.", "Receive SMS successfully."]}, "testResults": [{"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3001 sms_address +61402537622 sms_body \"MAndroid2\\ SMS\\ test.\"", "response": {"isSuccess": true, "startTime": 1601270997159, "description": "SMS is sent"}, "checkPoint": "Send SMS successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3002", "response": {"isSuccess": true, "startTime": 1601271005987, "receivedTime": 1601270999228, "smsFrom": "+61418673947", "smsBody": "MAndroid2 SMS test.", "description": "Received SMS successfully"}, "checkPoint": "Receive SMS successfully."}]}, "call": {"duration": 40.11319041252136, "outcome": "passed", "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025104559746 has not been occupied.\nCorresponding device serial is 9886734d5647434c32.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'failed to authenticate to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7465\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7465']\nMO Handset ID is mcloud.matrium.com.au:7465\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025703492762 has not been occupied.\nCorresponding device serial is ce12160ccd1f323f05.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'failed to authenticate to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7465\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7465']\nMT Handset ID is mcloud.matrium.com.au:7457\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'isSuccess': True, 'startTime': 1601270980309, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270981416, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270981416, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9001\n{'isSuccess': True, 'startTime': 1601270988830, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270989087, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601270989087, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of sending SMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3001 sms_address +61402537622 sms_body \"MAndroid2\\ SMS\\ test.\"\nResponse of sending SMS is:  {'isSuccess': True, 'startTime': 1601270997159, 'description': 'SMS is sent'}\nCommand of receiving SMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3002\nResponse of receiving SMS is:  {'isSuccess': True, 'startTime': 1601271005987, 'receivedTime': 1601270999228, 'smsFrom': '+61418673947', 'smsBody': 'MAndroid2 SMS test.', 'description': 'Received SMS successfully'}\ndeviceSerialList to be disconnected is ['9886734d5647434c32', 'ce12160ccd1f323f05']\ndisconnected everything\r\n##########Calling REST API to release device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['ce12160ccd1f323f05']\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is []\ndisconnected everything\r\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 188, "funcName": "test_MAndroid2_SMS", "created": 1601270971.478348, "msecs": 478.3480167388916, "relativeCreated": 425555.48572540283, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 189, "funcName": "test_MAndroid2_SMS", "created": 1601270971.478348, "msecs": 478.3480167388916, "relativeCreated": 425555.48572540283, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'SMS': {'Duration': 5, 'smsBody': 'MAndroid2 SMS test.'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 190, "funcName": "test_MAndroid2_SMS", "created": 1601270971.478348, "msecs": 478.3480167388916, "relativeCreated": 425555.48572540283, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 193, "funcName": "test_MAndroid2_SMS", "created": 1601270971.478348, "msecs": 478.3480167388916, "relativeCreated": 425555.48572540283, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test result: [{'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3001 sms_address +61402537622 sms_body \"MAndroid2\\\\ SMS\\\\ test.\"', 'response': {'isSuccess': True, 'startTime': 1601270997159, 'description': 'SMS is sent'}, 'checkPoint': 'Send SMS successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3002', 'response': {'isSuccess': True, 'startTime': 1601271005987, 'receivedTime': 1601270999228, 'smsFrom': '+61418673947', 'smsBody': 'MAndroid2 SMS test.', 'description': 'Received SMS successfully'}, 'checkPoint': 'Receive SMS successfully.'}].", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 203, "funcName": "test_MAndroid2_SMS", "created": 1601271006.5765302, "msecs": 576.5302181243896, "relativeCreated": 460653.66792678833, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}]}, "teardown": {"duration": 0.0019960403442382812, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_SMS[testParameters0-testEnvironment4]", "lineno": 178, "outcome": "passed", "keywords": ["testParameters0-testEnvironment4", "test_MAndroid2_SMS[testParameters0-testEnvironment4]", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0019953250885009766, "outcome": "passed"}, "metadata": {"testEnvironment": {"MCloud": {"baseUrl": "http://mcloud.matrium.com.au:7100/api/v1"}, "Login": {"User": "Peter.Zhang@matrium.com.au", "accessToken": "Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e"}, "MAndroid2AgentPath": "c:/tmp/MatriumMAndroid2-release.jar", "testUsers": {"MO": {"IMSI": "505025703492762", "MSISDN": "+61402537622", "handsetID": "mcloud.matrium.com.au:7457", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}, "MT": {"IMSI": "505025504563848", "MSISDN": "+61431202671", "handsetID": "mcloud.matrium.com.au:7918", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}}}, "testParameters": {"SMS": {"Duration": 5, "smsBody": "MAndroid2 SMS test."}}, "testCaseInfo": {"TestCaseID": "MAndroid2_Smoke_Test_002_SMS", "Description": "Basic SMS.", "Preconditions": "None.", "TestSteps": ["Send SMS.", "Wait for SMS duraton.", "Receive SMS."], "CheckPoints": ["Send SMS successfully.", "Receive SMS successfully."]}, "testResults": [{"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3001 sms_address +61431202671 sms_body \"MAndroid2\\ SMS\\ test.\"", "response": {"isSuccess": true, "startTime": 1601271031715, "description": "SMS is sent"}, "checkPoint": "Send SMS successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3002", "response": {"isSuccess": true, "startTime": 1601271054079, "receivedTime": 1601271047556, "smsFrom": "+61402537622", "smsBody": "MAndroid2 SMS test.", "description": "Received SMS successfully"}, "checkPoint": "Receive SMS successfully."}]}, "call": {"duration": 48.615135192871094, "outcome": "passed", "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025703492762 has not been occupied.\nCorresponding device serial is ce12160ccd1f323f05.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'failed to authenticate to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457']\nMO Handset ID is mcloud.matrium.com.au:7457\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025504563848 has not been occupied.\nCorresponding device serial is 21f982c0b00c7ece.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'failed to authenticate to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7918']\nMT Handset ID is mcloud.matrium.com.au:7918\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9001\n{'isSuccess': True, 'startTime': 1601271018474, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271018735, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271018735, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9001\n{'isSuccess': True, 'startTime': 1601271023676, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271024439, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271024439, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of sending SMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3001 sms_address +61431202671 sms_body \"MAndroid2\\ SMS\\ test.\"\nResponse of sending SMS is:  {'isSuccess': True, 'startTime': 1601271031715, 'description': 'SMS is sent'}\nCommand of receiving SMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3002\nResponse of receiving SMS is:  {'isSuccess': True, 'startTime': 1601271054079, 'receivedTime': 1601271047556, 'smsFrom': '+61402537622', 'smsBody': 'MAndroid2 SMS test.', 'description': 'Received SMS successfully'}\ndeviceSerialList to be disconnected is ['ce12160ccd1f323f05', '21f982c0b00c7ece']\ndisconnected everything\r\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['21f982c0b00c7ece']\n##########Calling REST API to release device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is []\ndisconnected everything\r\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 188, "funcName": "test_MAndroid2_SMS", "created": 1601271011.6014817, "msecs": 601.4816761016846, "relativeCreated": 465678.6193847656, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 189, "funcName": "test_MAndroid2_SMS", "created": 1601271011.6014817, "msecs": 601.4816761016846, "relativeCreated": 465678.6193847656, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'SMS': {'Duration': 5, 'smsBody': 'MAndroid2 SMS test.'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 190, "funcName": "test_MAndroid2_SMS", "created": 1601271011.6014817, "msecs": 601.4816761016846, "relativeCreated": 465678.6193847656, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 193, "funcName": "test_MAndroid2_SMS", "created": 1601271011.60248, "msecs": 602.4799346923828, "relativeCreated": 465679.6176433563, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test result: [{'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3001 sms_address +61431202671 sms_body \"MAndroid2\\\\ SMS\\\\ test.\"', 'response': {'isSuccess': True, 'startTime': 1601271031715, 'description': 'SMS is sent'}, 'checkPoint': 'Send SMS successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3002', 'response': {'isSuccess': True, 'startTime': 1601271054079, 'receivedTime': 1601271047556, 'smsFrom': '+61402537622', 'smsBody': 'MAndroid2 SMS test.', 'description': 'Received SMS successfully'}, 'checkPoint': 'Receive SMS successfully.'}].", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 203, "funcName": "test_MAndroid2_SMS", "created": 1601271055.1993475, "msecs": 199.34749603271484, "relativeCreated": 509276.48520469666, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}]}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_SMS[testParameters0-testEnvironment5]", "lineno": 178, "outcome": "passed", "keywords": ["TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "test_MAndroid2_SMS[testParameters0-testEnvironment5]", "parametrize", "testParameters0-testEnvironment5", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.000995635986328125, "outcome": "passed"}, "metadata": {"testEnvironment": {"MCloud": {"baseUrl": "http://mcloud.matrium.com.au:7100/api/v1"}, "Login": {"User": "Peter.Zhang@matrium.com.au", "accessToken": "Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e"}, "MAndroid2AgentPath": "c:/tmp/MatriumMAndroid2-release.jar", "testUsers": {"MO": {"IMSI": "505025703492762", "MSISDN": "+61402537622", "handsetID": "mcloud.matrium.com.au:7457", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}, "MT": {"IMSI": "505025104559746", "MSISDN": "+61418673947", "handsetID": "mcloud.matrium.com.au:7465", "versions": {"MAndroid2": "2.20.41Build2020-06-09_14:00:07", "MAndroid2Agent": "2.19.33Build2020-03-27_04:28:38", "MAndroid2Plugin": "2.19.16Build2019-10-24_15:57:51"}}}}, "testParameters": {"SMS": {"Duration": 5, "smsBody": "MAndroid2 SMS test."}}, "testCaseInfo": {"TestCaseID": "MAndroid2_Smoke_Test_002_SMS", "Description": "Basic SMS.", "Preconditions": "None.", "TestSteps": ["Send SMS.", "Wait for SMS duraton.", "Receive SMS."], "CheckPoints": ["Send SMS successfully.", "Receive SMS successfully."]}, "testResults": [{"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3001 sms_address +61418673947 sms_body \"MAndroid2\\ SMS\\ test.\"", "response": {"isSuccess": true, "startTime": 1601271084869, "description": "SMS is sent"}, "checkPoint": "Send SMS successfully."}, {"checkPointResult": "passed", "failedReason": "none", "command": "java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3002", "response": {"isSuccess": true, "startTime": 1601271094938, "receivedTime": 1601271085246, "smsFrom": "+61402537622", "smsBody": "MAndroid2 SMS test.", "description": "Received SMS successfully"}, "checkPoint": "Receive SMS successfully."}]}, "call": {"duration": 41.25226616859436, "outcome": "passed", "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025703492762 has not been occupied.\nCorresponding device serial is ce12160ccd1f323f05.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'failed to authenticate to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457']\nMO Handset ID is mcloud.matrium.com.au:7457\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025104559746 has not been occupied.\nCorresponding device serial is 9886734d5647434c32.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'failed to authenticate to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7465\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7465']\nMT Handset ID is mcloud.matrium.com.au:7465\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9001\n{'isSuccess': True, 'startTime': 1601271066914, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271067170, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271067170, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'isSuccess': True, 'startTime': 1601271075160, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271076251, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271076251, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of sending SMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3001 sms_address +61418673947 sms_body \"MAndroid2\\ SMS\\ test.\"\nResponse of sending SMS is:  {'isSuccess': True, 'startTime': 1601271084869, 'description': 'SMS is sent'}\nCommand of receiving SMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3002\nResponse of receiving SMS is:  {'isSuccess': True, 'startTime': 1601271094938, 'receivedTime': 1601271085246, 'smsFrom': '+61402537622', 'smsBody': 'MAndroid2 SMS test.', 'description': 'Received SMS successfully'}\ndeviceSerialList to be disconnected is ['ce12160ccd1f323f05', '9886734d5647434c32']\ndisconnected everything\r\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['9886734d5647434c32']\n##########Calling REST API to release device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is []\ndisconnected everything\r\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 188, "funcName": "test_MAndroid2_SMS", "created": 1601271060.2085452, "msecs": 208.54520797729492, "relativeCreated": 514285.68291664124, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 189, "funcName": "test_MAndroid2_SMS", "created": 1601271060.2085452, "msecs": 208.54520797729492, "relativeCreated": 514285.68291664124, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'SMS': {'Duration': 5, 'smsBody': 'MAndroid2 SMS test.'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 190, "funcName": "test_MAndroid2_SMS", "created": 1601271060.2085452, "msecs": 208.54520797729492, "relativeCreated": 514285.68291664124, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 193, "funcName": "test_MAndroid2_SMS", "created": 1601271060.2085452, "msecs": 208.54520797729492, "relativeCreated": 514285.68291664124, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test result: [{'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3001 sms_address +61418673947 sms_body \"MAndroid2\\\\ SMS\\\\ test.\"', 'response': {'isSuccess': True, 'startTime': 1601271084869, 'description': 'SMS is sent'}, 'checkPoint': 'Send SMS successfully.'}, {'checkPointResult': 'passed', 'failedReason': 'none', 'command': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3002', 'response': {'isSuccess': True, 'startTime': 1601271094938, 'receivedTime': 1601271085246, 'smsFrom': '+61402537622', 'smsBody': 'MAndroid2 SMS test.', 'description': 'Received SMS successfully'}, 'checkPoint': 'Receive SMS successfully.'}].", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 203, "funcName": "test_MAndroid2_SMS", "created": 1601271096.453706, "msecs": 453.7060260772705, "relativeCreated": 550530.8437347412, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}]}, "teardown": {"duration": 0.0009999275207519531, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_MMS[testParameters0-testEnvironment0]", "lineno": 209, "outcome": "failed", "keywords": ["TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "test_MAndroid2_MMS[testParameters0-testEnvironment0]", "parametrize", "testParameters0-testEnvironment0", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0010364055633544922, "outcome": "passed"}, "call": {"duration": 55.66555118560791, "outcome": "failed", "crash": {"path": "c:\\setup\\python37\\lib\\json\\decoder.py", "lineno": 353, "message": "json.decoder.JSONDecodeError: Invalid control character at: line 1 column 107 (char 106)"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 226, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 347, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 448, "message": "in executeTestLogic"}, {"path": "..\\library\\MAndroid2BaseAPI.py", "lineno": 253, "message": "in sendMMS"}, {"path": "c:\\setup\\python37\\lib\\json\\__init__.py", "lineno": 348, "message": "in loads"}, {"path": "c:\\setup\\python37\\lib\\json\\decoder.py", "lineno": 337, "message": "in decode"}, {"path": "c:\\setup\\python37\\lib\\json\\decoder.py", "lineno": 353, "message": "JSONDecodeError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025504563848 has not been occupied.\nCorresponding device serial is 21f982c0b00c7ece.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'failed to authenticate to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7918']\nMO Handset ID is mcloud.matrium.com.au:7918\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025104559746 has not been occupied.\nCorresponding device serial is 9886734d5647434c32.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'failed to authenticate to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7465\tdevice\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7465', 'mcloud.matrium.com.au:7918']\nMT Handset ID is mcloud.matrium.com.au:7465\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9001\n{'isSuccess': True, 'startTime': 1601271107760, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271108510, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271108510, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'isSuccess': True, 'startTime': 1601271116748, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271117893, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271117893, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of sending MMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3003 mms_address +61418673947 mms_body \"MAndroid2\\ MMS\\ test.\" mms_url \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_153204.png\"\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 219, "funcName": "test_MAndroid2_MMS", "created": 1601271101.4697874, "msecs": 469.7873592376709, "relativeCreated": 555546.9250679016, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 220, "funcName": "test_MAndroid2_MMS", "created": 1601271101.4697874, "msecs": 469.7873592376709, "relativeCreated": 555546.9250679016, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'MMS': {'ScreenUnlockDuration': 5, 'Duration': 10, 'mmsBody': 'MAndroid2 MMS test.'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 221, "funcName": "test_MAndroid2_MMS", "created": 1601271101.4697874, "msecs": 469.7873592376709, "relativeCreated": 555546.9250679016, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 224, "funcName": "test_MAndroid2_MMS", "created": 1601271101.4697874, "msecs": 469.7873592376709, "relativeCreated": 555546.9250679016, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91C6F66D8>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'MMS': {'Duration': 10, 'ScreenUnlockDuration': 5, 'mmsBody': 'MAndroid2 MMS test.'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", mmsTestParameters)\n    def test_MAndroid2_MMS(self, rp_logger, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'MMS'\n        userFlag = 'MOMT'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:226: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:347: in executeTestCase\n    responseList = executeTestLogic(testEnvironment, testCaseInfo, testCaseKey, testParameters, testCaseSummary, testCaseDetailList)\n..\\library\\MAndroid2BaseCommon.py:448: in executeTestLogic\n    mmsUrl)\n..\\library\\MAndroid2BaseAPI.py:253: in sendMMS\n    print(\"Response of sending MMS is: \", json.loads(response))\nc:\\setup\\python37\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\nc:\\setup\\python37\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000002B91B346E10>\ns = '{\"isSuccess\":false,\"description\":\"Get empty or wrong format result: com.matrium.mandroid2.SAMSUNG.SendMMS:\\r\\n.\"}\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Invalid control character at: line 1 column 107 (char 106)\n\nc:\\setup\\python37\\lib\\json\\decoder.py:353: JSONDecodeError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_MMS[testParameters0-testEnvironment1]", "lineno": 209, "outcome": "failed", "keywords": ["testParameters0-testEnvironment1", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "()", "test_MAndroid2_MMS[testParameters0-testEnvironment1]", "MAndroid2SmokeTest"], "setup": {"duration": 0.0009932518005371094, "outcome": "passed"}, "call": {"duration": 42.89449071884155, "outcome": "failed", "crash": {"path": "c:\\setup\\python37\\lib\\json\\decoder.py", "lineno": 353, "message": "json.decoder.JSONDecodeError: Invalid control character at: line 1 column 107 (char 106)"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 226, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 347, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 448, "message": "in executeTestLogic"}, {"path": "..\\library\\MAndroid2BaseAPI.py", "lineno": 253, "message": "in sendMMS"}, {"path": "c:\\setup\\python37\\lib\\json\\__init__.py", "lineno": 348, "message": "in loads"}, {"path": "c:\\setup\\python37\\lib\\json\\decoder.py", "lineno": 337, "message": "in decode"}, {"path": "c:\\setup\\python37\\lib\\json\\decoder.py", "lineno": 353, "message": "JSONDecodeError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\n##########Calling REST API to release device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nHandset with IMSI 505025504563848 has been occupied by myself Peter.Zhang@matrium.com.au.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'failed to authenticate to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7918']\nMO Handset ID is mcloud.matrium.com.au:7918\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025703492762 has not been occupied.\nCorresponding device serial is ce12160ccd1f323f05.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'failed to authenticate to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7465\tauthorizing\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7918']\nMT Handset ID is mcloud.matrium.com.au:7457\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9001\n{'isSuccess': True, 'startTime': 1601271164740, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271165479, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271165479, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9001\n{'isSuccess': True, 'startTime': 1601271170513, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271171610, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271171610, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of sending MMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3003 mms_address +61402537622 mms_body \"MAndroid2\\ MMS\\ test.\" mms_url \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_153256.png\"\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 219, "funcName": "test_MAndroid2_MMS", "created": 1601271157.2201533, "msecs": 220.1533317565918, "relativeCreated": 611297.2910404205, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 220, "funcName": "test_MAndroid2_MMS", "created": 1601271157.2201533, "msecs": 220.1533317565918, "relativeCreated": 611297.2910404205, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'MMS': {'ScreenUnlockDuration': 5, 'Duration': 10, 'mmsBody': 'MAndroid2 MMS test.'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 221, "funcName": "test_MAndroid2_MMS", "created": 1601271157.2201533, "msecs": 220.1533317565918, "relativeCreated": 611297.2910404205, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 224, "funcName": "test_MAndroid2_MMS", "created": 1601271157.2201533, "msecs": 220.1533317565918, "relativeCreated": 611297.2910404205, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91C6E0240>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'MMS': {'Duration': 10, 'ScreenUnlockDuration': 5, 'mmsBody': 'MAndroid2 MMS test.'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", mmsTestParameters)\n    def test_MAndroid2_MMS(self, rp_logger, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'MMS'\n        userFlag = 'MOMT'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:226: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:347: in executeTestCase\n    responseList = executeTestLogic(testEnvironment, testCaseInfo, testCaseKey, testParameters, testCaseSummary, testCaseDetailList)\n..\\library\\MAndroid2BaseCommon.py:448: in executeTestLogic\n    mmsUrl)\n..\\library\\MAndroid2BaseAPI.py:253: in sendMMS\n    print(\"Response of sending MMS is: \", json.loads(response))\nc:\\setup\\python37\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\nc:\\setup\\python37\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000002B91B346E10>\ns = '{\"isSuccess\":false,\"description\":\"Get empty or wrong format result: com.matrium.mandroid2.SAMSUNG.SendMMS:\\r\\n.\"}\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Invalid control character at: line 1 column 107 (char 106)\n\nc:\\setup\\python37\\lib\\json\\decoder.py:353: JSONDecodeError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_MMS[testParameters0-testEnvironment2]", "lineno": 209, "outcome": "failed", "keywords": ["testParameters0-testEnvironment2", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "test_MAndroid2_MMS[testParameters0-testEnvironment2]", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0, "outcome": "passed"}, "call": {"duration": 5.787327289581299, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseCommon.py", "lineno": 222, "message": "AssertionError"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 226, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 344, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 222, "message": "AssertionError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025104559746 has not been occupied.\nCorresponding device serial is 9886734d5647434c32.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'failed to authenticate to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7465\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7465']\nMO Handset ID is mcloud.matrium.com.au:7465\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\n##########Calling REST API to release device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nHandset with IMSI 505025504563848 has been occupied by myself Peter.Zhang@matrium.com.au.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'failed to authenticate to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7465\toffline\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7918']\nMT Handset ID is mcloud.matrium.com.au:7918\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'screenshotURL': 'null', 'description': 'Handset is offline, check your handset_id parameter.', 'startTime': 1601271205767, 'isSuccess': False}\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 219, "funcName": "test_MAndroid2_MMS", "created": 1601271200.1724916, "msecs": 172.49155044555664, "relativeCreated": 654249.6292591095, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 220, "funcName": "test_MAndroid2_MMS", "created": 1601271200.1724916, "msecs": 172.49155044555664, "relativeCreated": 654249.6292591095, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'MMS': {'ScreenUnlockDuration': 5, 'Duration': 10, 'mmsBody': 'MAndroid2 MMS test.'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 221, "funcName": "test_MAndroid2_MMS", "created": 1601271200.1724916, "msecs": 172.49155044555664, "relativeCreated": 654249.6292591095, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 224, "funcName": "test_MAndroid2_MMS", "created": 1601271200.1724916, "msecs": 172.49155044555664, "relativeCreated": 654249.6292591095, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91C6E0B00>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'MMS': {'Duration': 10, 'ScreenUnlockDuration': 5, 'mmsBody': 'MAndroid2 MMS test.'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", mmsTestParameters)\n    def test_MAndroid2_MMS(self, rp_logger, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'MMS'\n        userFlag = 'MOMT'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:226: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:344: in executeTestCase\n    connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\nuserFlag = 'MOMT'\ntestParameters = {'MMS': {'Duration': 10, 'ScreenUnlockDuration': 5, 'mmsBody': 'MAndroid2 MMS test.'}}\ntestCaseInfo = {'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.'], 'Descr...asic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', ...}\ntestCaseSummary = {'MAndroid2AgentVersion': '2.19.33Build2020-03-27_04:28:38', 'fail': 1, 'pass': 12, 'sum': 13, ...}\ntestCaseDetailList = [{'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'De... 'Basic voice call.', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', ...}, ...]\n\n    def connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList):\n        # Connect available test handset on mcloud from specified IMSI.\n        result = {}\n        mcloud = MCloudControl()\n    \n        # Set test environment variables.\n        mcloud.mcloudBaseUrl = testEnvironment['MCloud']['baseUrl']\n        mcloud.mcloudLoginUser = testEnvironment['Login']['User']\n        mcloud.mcloudLoginToken = testEnvironment['Login']['accessToken']\n    \n        if (userFlag == \"MO\"):\n            result = mcloud.connectToMcloudUser(testEnvironment['testUsers']['MO']['IMSI'])\n    \n            if result[\"failedFlag\"] == True or result[\"remoteConnectUrl\"] == None:\n                failedReason = result[\"failedReason\"]\n                writeExcelFailedTestReport(failedReason, testCaseSummary, testCaseDetailList, testEnvironment,\n                                           testParameters, testCaseInfo)\n            else:\n                testEnvironment['testUsers']['MO']['handsetID'] = result[\"remoteConnectUrl\"]\n    \n            assert (result[\"remoteConnectUrl\"] != None)\n            print(\"MO Handset ID is {}\".format(result[\"remoteConnectUrl\"]))\n    \n            # Get MAndroid2 version info.\n            version = getMAndroid2Version(testEnvironment['MAndroid2AgentPath'],\n                                          testEnvironment['testUsers']['MO']['handsetID'])\n            if version != None:\n                testEnvironment['testUsers']['MO']['versions'] = version\n            else:\n                failedReason = \"Cannot get MAndroid2 version from {}\".format(testEnvironment['testUsers']['MO']['handsetID'])\n                writeExcelFailedTestReport(failedReason, testCaseSummary, testCaseDetailList, testEnvironment,\n                                           testParameters, testCaseInfo)\n            assert (version != None)\n        elif (userFlag == \"MT\"):\n            result = mcloud.connectToMcloudUser(testEnvironment['testUsers']['MT']['IMSI'])\n    \n            if result[\"failedFlag\"] == True or result[\"remoteConnectUrl\"] == None:\n                failedReason = result[\"failedReason\"]\n                writeExcelFailedTestReport(failedReason, testCaseSummary, testCaseDetailList, testEnvironment,\n                                           testParameters, testCaseInfo)\n            else:\n                testEnvironment['testUsers']['MT']['handsetID'] = result[\"remoteConnectUrl\"]\n    \n            assert (result[\"remoteConnectUrl\"] != None)\n            print(\"MT Handset ID is {}\".format(result[\"remoteConnectUrl\"]))\n    \n            # Get MAndroid2 version info.\n            version = getMAndroid2Version(testEnvironment['MAndroid2AgentPath'],\n                                          testEnvironment['testUsers']['MT']['handsetID'])\n            if version != None:\n                testEnvironment['testUsers']['MT']['versions'] = version\n            else:\n                failedReason = \"Cannot get MAndroid2 version from {}\".format(testEnvironment['testUsers']['MT']['handsetID'])\n                writeExcelFailedTestReport(failedReason, testCaseSummary, testCaseDetailList, testEnvironment,\n                                           testParameters, testCaseInfo)\n            assert (version != None)\n    \n        elif (userFlag == \"MOMT\"):\n            result = mcloud.connectToMcloudUser(testEnvironment['testUsers']['MO']['IMSI'])\n    \n            if result[\"failedFlag\"] == True or result[\"remoteConnectUrl\"] == None:\n                failedReason = result[\"failedReason\"]\n                writeExcelFailedTestReport(failedReason, testCaseSummary, testCaseDetailList, testEnvironment,\n                                           testParameters, testCaseInfo)\n            else:\n                testEnvironment['testUsers']['MO']['handsetID'] = result[\"remoteConnectUrl\"]\n    \n            assert (result[\"remoteConnectUrl\"] != None)\n            print(\"MO Handset ID is {}\".format(result[\"remoteConnectUrl\"]))\n    \n            result = mcloud.connectToMcloudUser(testEnvironment['testUsers']['MT']['IMSI'])\n    \n            if result[\"failedFlag\"] == True or result[\"remoteConnectUrl\"] == None:\n                failedReason = result[\"failedReason\"]\n                writeExcelFailedTestReport(failedReason, testCaseSummary, testCaseDetailList, testEnvironment,\n                                           testParameters, testCaseInfo)\n            else:\n                testEnvironment['testUsers']['MT']['handsetID'] = result[\"remoteConnectUrl\"]\n    \n            assert (result[\"remoteConnectUrl\"] != None)\n            print(\"MT Handset ID is {}\".format(result[\"remoteConnectUrl\"]))\n    \n            # Get MAndroid2 version info.\n            version = getMAndroid2Version(testEnvironment['MAndroid2AgentPath'],\n                                          testEnvironment['testUsers']['MO']['handsetID'])\n            if version != None:\n                testEnvironment['testUsers']['MO']['versions'] = version\n            else:\n                failedReason = \"Cannot get MAndroid2 version from {}\".format(testEnvironment['testUsers']['MO']['handsetID'])\n                writeExcelFailedTestReport(failedReason, testCaseSummary, testCaseDetailList, testEnvironment,\n                                           testParameters, testCaseInfo)\n>           assert (version != None)\nE           AssertionError\n\n..\\library\\MAndroid2BaseCommon.py:222: AssertionError"}, "teardown": {"duration": 0.0009653568267822266, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_MMS[testParameters0-testEnvironment3]", "lineno": 209, "outcome": "failed", "keywords": ["TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "testParameters0-testEnvironment3", "parametrize", "()", "test_MAndroid2_MMS[testParameters0-testEnvironment3]", "MAndroid2SmokeTest"], "setup": {"duration": 0.0010294914245605469, "outcome": "passed"}, "call": {"duration": 14.355592727661133, "outcome": "failed", "crash": {"path": "c:\\setup\\python37\\lib\\json\\decoder.py", "lineno": 353, "message": "json.decoder.JSONDecodeError: Invalid control character at: line 1 column 118 (char 117)"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 226, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 344, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 215, "message": "in connectTestUsers"}, {"path": "..\\library\\MAndroid2BaseAPI.py", "lineno": 72, "message": "in getMAndroid2Version"}, {"path": "c:\\setup\\python37\\lib\\json\\__init__.py", "lineno": 348, "message": "in loads"}, {"path": "c:\\setup\\python37\\lib\\json\\decoder.py", "lineno": 337, "message": "in decode"}, {"path": "c:\\setup\\python37\\lib\\json\\decoder.py", "lineno": 353, "message": "JSONDecodeError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\n##########Calling REST API to release device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nHandset with IMSI 505025104559746 has been occupied by myself Peter.Zhang@matrium.com.au.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'already connected to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\toffline\r\nmcloud.matrium.com.au:7465\tdevice\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7465', 'mcloud.matrium.com.au:7918']\nMO Handset ID is mcloud.matrium.com.au:7465\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nHandset with IMSI 505025703492762 has been occupied by myself Peter.Zhang@matrium.com.au.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'already connected to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7465\tdevice\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7465', 'mcloud.matrium.com.au:7918']\nMT Handset ID is mcloud.matrium.com.au:7457\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'isSuccess': True, 'startTime': 1601271214394, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271215505, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271215505, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 219, "funcName": "test_MAndroid2_MMS", "created": 1601271206.0027356, "msecs": 2.735614776611328, "relativeCreated": 660079.8733234406, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 220, "funcName": "test_MAndroid2_MMS", "created": 1601271206.0027356, "msecs": 2.735614776611328, "relativeCreated": 660079.8733234406, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'MMS': {'ScreenUnlockDuration': 5, 'Duration': 10, 'mmsBody': 'MAndroid2 MMS test.'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 221, "funcName": "test_MAndroid2_MMS", "created": 1601271206.0027356, "msecs": 2.735614776611328, "relativeCreated": 660079.8733234406, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 224, "funcName": "test_MAndroid2_MMS", "created": 1601271206.0027356, "msecs": 2.735614776611328, "relativeCreated": 660079.8733234406, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91C9A8B70>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'MMS': {'Duration': 10, 'ScreenUnlockDuration': 5, 'mmsBody': 'MAndroid2 MMS test.'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", mmsTestParameters)\n    def test_MAndroid2_MMS(self, rp_logger, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'MMS'\n        userFlag = 'MOMT'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:226: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:344: in executeTestCase\n    connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList)\n..\\library\\MAndroid2BaseCommon.py:215: in connectTestUsers\n    testEnvironment['testUsers']['MO']['handsetID'])\n..\\library\\MAndroid2BaseAPI.py:72: in getMAndroid2Version\n    response = json.loads(subprocess.check_output(command.split()))\nc:\\setup\\python37\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\nc:\\setup\\python37\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000002B91B346E10>\ns = '{\"isSuccess\":false,\"description\":\"Get empty or wrong format result: INSTRUMENTATION_RESULT: shortMsg=Process crashed.\\r\\nINSTRUMENTATION_CODE: 0\\r\\n.\"}\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Invalid control character at: line 1 column 118 (char 117)\n\nc:\\setup\\python37\\lib\\json\\decoder.py:353: JSONDecodeError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_MMS[testParameters0-testEnvironment4]", "lineno": 209, "outcome": "failed", "keywords": ["testParameters0-testEnvironment4", "test_MAndroid2_MMS[testParameters0-testEnvironment4]", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.000997781753540039, "outcome": "passed"}, "call": {"duration": 79.4486026763916, "outcome": "failed", "crash": {"path": "c:\\setup\\python37\\lib\\json\\decoder.py", "lineno": 353, "message": "json.decoder.JSONDecodeError: Invalid control character at: line 1 column 199 (char 198)"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 226, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 347, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 455, "message": "in executeTestLogic"}, {"path": "..\\library\\MAndroid2BaseAPI.py", "lineno": 275, "message": "in receiveMMS"}, {"path": "c:\\setup\\python37\\lib\\json\\__init__.py", "lineno": 348, "message": "in loads"}, {"path": "c:\\setup\\python37\\lib\\json\\decoder.py", "lineno": 337, "message": "in decode"}, {"path": "c:\\setup\\python37\\lib\\json\\decoder.py", "lineno": 353, "message": "JSONDecodeError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nHandset with IMSI 505025703492762 has been occupied by myself Peter.Zhang@matrium.com.au.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'already connected to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7465\tdevice\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7465', 'mcloud.matrium.com.au:7918']\nMO Handset ID is mcloud.matrium.com.au:7457\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\n##########Calling REST API to release device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nHandset with IMSI 505025504563848 has been occupied by myself Peter.Zhang@matrium.com.au.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'already connected to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7465\tdevice\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7465', 'mcloud.matrium.com.au:7918']\nMT Handset ID is mcloud.matrium.com.au:7918\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9001\n{'isSuccess': True, 'startTime': 1601271227229, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271228333, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271228333, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9001\n{'isSuccess': True, 'startTime': 1601271235168, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271235918, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271235918, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of sending MMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3003 mms_address +61431202671 mms_body \"MAndroid2\\ MMS\\ test.\" mms_url \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_153359.png\"\nResponse of sending MMS is:  {'isSuccess': True, 'startTime': 1601271259009, 'description': 'Send MMS successfully', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_153419.png'}\nCommand of receiving MMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3004\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 219, "funcName": "test_MAndroid2_MMS", "created": 1601271220.411193, "msecs": 411.1928939819336, "relativeCreated": 674488.3306026459, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 220, "funcName": "test_MAndroid2_MMS", "created": 1601271220.411193, "msecs": 411.1928939819336, "relativeCreated": 674488.3306026459, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'MMS': {'ScreenUnlockDuration': 5, 'Duration': 10, 'mmsBody': 'MAndroid2 MMS test.'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 221, "funcName": "test_MAndroid2_MMS", "created": 1601271220.411193, "msecs": 411.1928939819336, "relativeCreated": 674488.3306026459, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 224, "funcName": "test_MAndroid2_MMS", "created": 1601271220.411193, "msecs": 411.1928939819336, "relativeCreated": 674488.3306026459, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91C903160>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'MMS': {'Duration': 10, 'ScreenUnlockDuration': 5, 'mmsBody': 'MAndroid2 MMS test.'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", mmsTestParameters)\n    def test_MAndroid2_MMS(self, rp_logger, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'MMS'\n        userFlag = 'MOMT'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:226: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:347: in executeTestCase\n    responseList = executeTestLogic(testEnvironment, testCaseInfo, testCaseKey, testParameters, testCaseSummary, testCaseDetailList)\n..\\library\\MAndroid2BaseCommon.py:455: in executeTestLogic\n    testEnvironment['testUsers']['MT']['handsetID'])\n..\\library\\MAndroid2BaseAPI.py:275: in receiveMMS\n    print(\"Response of receiving MMS is: \", json.loads(response))\nc:\\setup\\python37\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\nc:\\setup\\python37\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000002B91B346E10>\ns = '{\"isSuccess\":false,\"description\":\"Get empty or wrong format result: Broadcasting: Intent { act=android.intent.action.Matrium_Test flg=0x400000 cmp=com.matrium.mandroid2/.MTestReceiver (has extras) }\\r\\n.\"}\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Invalid control character at: line 1 column 199 (char 198)\n\nc:\\setup\\python37\\lib\\json\\decoder.py:353: JSONDecodeError"}, "teardown": {"duration": 0.000997304916381836, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_MMS[testParameters0-testEnvironment5]", "lineno": 209, "outcome": "failed", "keywords": ["TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "test_MAndroid2_MMS[testParameters0-testEnvironment5]", "parametrize", "testParameters0-testEnvironment5", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0009970664978027344, "outcome": "passed"}, "call": {"duration": 88.62948489189148, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseMCloud.py", "lineno": 103, "message": "IndexError: tuple index out of range"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 226, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 350, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 245, "message": "in disconnectTestUsers"}, {"path": "..\\library\\MAndroid2BaseMCloud.py", "lineno": 334, "message": "in tearDownUsingDevices"}, {"path": "..\\library\\MAndroid2BaseMCloud.py", "lineno": 103, "message": "IndexError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025703492762 has not been occupied.\nCorresponding device serial is ce12160ccd1f323f05.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'failed to authenticate to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7465\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7465']\nMO Handset ID is mcloud.matrium.com.au:7457\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\n##########Calling REST API to release device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nHandset with IMSI 505025104559746 has been occupied by myself Peter.Zhang@matrium.com.au.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'already connected to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7465\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7465']\nMT Handset ID is mcloud.matrium.com.au:7465\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9001\n{'isSuccess': True, 'startTime': 1601271306238, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271307327, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271307327, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'isSuccess': True, 'startTime': 1601271315177, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271316259, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271316259, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of sending MMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3003 mms_address +61418673947 mms_body \"MAndroid2\\ MMS\\ test.\" mms_url \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_153522.png\"\nResponse of sending MMS is:  {'isSuccess': True, 'startTime': 1601271341956, 'description': 'Send MMS successfully', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_153541.png'}\nCommand of receiving MMS is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3004\nResponse of receiving MMS is:  {'isSuccess': False, 'startTime': 1601271387143, 'description': 'No received MMS matches your requirements'}\ndeviceSerialList to be disconnected is ['9886734d5647434c32', 'ce12160ccd1f323f05', '21f982c0b00c7ece', 'ce12160ccd1f323f05', '9886734d5647434c32']\ndisconnected everything\r\n##########Calling REST API to release device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['ce12160ccd1f323f05', '21f982c0b00c7ece', 'ce12160ccd1f323f05', '9886734d5647434c32']\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['21f982c0b00c7ece', 'ce12160ccd1f323f05', '9886734d5647434c32']\n##########Calling REST API to release device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['ce12160ccd1f323f05', '9886734d5647434c32']\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 403\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 219, "funcName": "test_MAndroid2_MMS", "created": 1601271299.957012, "msecs": 957.0119380950928, "relativeCreated": 754034.149646759, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 220, "funcName": "test_MAndroid2_MMS", "created": 1601271299.957012, "msecs": 957.0119380950928, "relativeCreated": 754034.149646759, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'MMS': {'ScreenUnlockDuration': 5, 'Duration': 10, 'mmsBody': 'MAndroid2 MMS test.'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 221, "funcName": "test_MAndroid2_MMS", "created": 1601271299.957012, "msecs": 957.0119380950928, "relativeCreated": 754034.149646759, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 224, "funcName": "test_MAndroid2_MMS", "created": 1601271299.957012, "msecs": 957.0119380950928, "relativeCreated": 754034.149646759, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91C8A7EF0>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'MMS': {'Duration': 10, 'ScreenUnlockDuration': 5, 'mmsBody': 'MAndroid2 MMS test.'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", mmsTestParameters)\n    def test_MAndroid2_MMS(self, rp_logger, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'MMS'\n        userFlag = 'MOMT'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:226: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:350: in executeTestCase\n    disconnectTestUsers(testEnvironment)\n..\\library\\MAndroid2BaseCommon.py:245: in disconnectTestUsers\n    mcloud.tearDownUsingDevices(mcloud.deviceSerialList)\n..\\library\\MAndroid2BaseMCloud.py:334: in tearDownUsingDevices\n    result = self.releaseDevice(deviceSerial)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <MAndroid2SmokeTest.library.MAndroid2BaseMCloud.MCloudControl object at 0x000002B91C9056A0>\ndeviceSerial = 'ce12160ccd1f323f05'\n\n    def releaseDevice(self, deviceSerial):\n        # Set authorization Token to acces mCloud through REST API.\n        headers = {\"Authorization\": self.mcloudLoginToken}\n    \n        # Call REST API to release the use of the testing device.\n        print(\"##########Calling REST API to release device {} on MCloud.\".format(deviceSerial))\n        resp = requests.delete(self._url('/user/devices/' + deviceSerial),\n                             headers=headers)\n        print(self._url('/user/devices/' + deviceSerial))\n        print(\"resp.status_code is {}\".format(resp.status_code))\n    \n        if resp.status_code == 200:\n            # Check REST API response.\n            dictResponse = json.loads(resp.content)\n            print(dictResponse)\n            if (deviceSerial in self.deviceSerialList):\n                self.deviceSerialList.remove(deviceSerial)\n            return True\n        else:\n>           print('[!] HTTP {0} calling [{1}]'.format(self._url('/user/devices/' + deviceSerial)))\nE           IndexError: tuple index out of range\n\n..\\library\\MAndroid2BaseMCloud.py:103: IndexError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_WebBrowsing[testParameters0-testEnvironment0]", "lineno": 240, "outcome": "failed", "keywords": ["TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "test_MAndroid2_WebBrowsing[testParameters0-testEnvironment0]", "parametrize", "testParameters0-testEnvironment0", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0, "outcome": "passed"}, "call": {"duration": 2.8002431392669678, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseCommon.py", "lineno": 151, "message": "AssertionError"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 258, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 344, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 151, "message": "AssertionError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025504563848 has not been occupied.\nCorresponding device serial is 21f982c0b00c7ece.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'failed to authenticate to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\n\r\n\n[]\nCannot find device mcloud.matrium.com.au:7918 after adb connect\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 251, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271388.6448681, "msecs": 644.8681354522705, "relativeCreated": 842722.0058441162, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 252, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271388.6448681, "msecs": 644.8681354522705, "relativeCreated": 842722.0058441162, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'WebBrowsing': {'webUrl': 'https://www.google.com'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 253, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271388.6448681, "msecs": 644.8681354522705, "relativeCreated": 842722.0058441162, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 256, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271388.6448681, "msecs": 644.8681354522705, "relativeCreated": 842722.0058441162, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91CABDF28>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'WebBrowsing': {'webUrl': 'https://www.google.com'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", webBrowsingTestParameters)\n    def test_MAndroid2_WebBrowsing(self, rp_logger, json_metadata, testEnvironment, testParameters):\n    \n        # Define test case variables.\n        testCaseKey = 'WebBrowsing'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:258: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:344: in executeTestCase\n    connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\nuserFlag = 'MO'\ntestParameters = {'WebBrowsing': {'webUrl': 'https://www.google.com'}}\ntestCaseInfo = {'CheckPoints': ['Web browsing successfully.'], 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', ...}\ntestCaseSummary = {'MAndroid2AgentVersion': '2.19.33Build2020-03-27_04:28:38', 'fail': 2, 'pass': 12, 'sum': 14, ...}\ntestCaseDetailList = [{'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'De... 'Basic voice call.', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', ...}, ...]\n\n    def connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList):\n        # Connect available test handset on mcloud from specified IMSI.\n        result = {}\n        mcloud = MCloudControl()\n    \n        # Set test environment variables.\n        mcloud.mcloudBaseUrl = testEnvironment['MCloud']['baseUrl']\n        mcloud.mcloudLoginUser = testEnvironment['Login']['User']\n        mcloud.mcloudLoginToken = testEnvironment['Login']['accessToken']\n    \n        if (userFlag == \"MO\"):\n            result = mcloud.connectToMcloudUser(testEnvironment['testUsers']['MO']['IMSI'])\n    \n            if result[\"failedFlag\"] == True or result[\"remoteConnectUrl\"] == None:\n                failedReason = result[\"failedReason\"]\n                writeExcelFailedTestReport(failedReason, testCaseSummary, testCaseDetailList, testEnvironment,\n                                           testParameters, testCaseInfo)\n            else:\n                testEnvironment['testUsers']['MO']['handsetID'] = result[\"remoteConnectUrl\"]\n    \n>           assert (result[\"remoteConnectUrl\"] != None)\nE           AssertionError\n\n..\\library\\MAndroid2BaseCommon.py:151: AssertionError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_WebBrowsing[testParameters0-testEnvironment1]", "lineno": 240, "outcome": "failed", "keywords": ["testParameters0-testEnvironment1", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "test_MAndroid2_WebBrowsing[testParameters0-testEnvironment1]", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0, "outcome": "passed"}, "call": {"duration": 14.071243047714233, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseMCloud.py", "lineno": 103, "message": "IndexError: tuple index out of range"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 258, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 350, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 245, "message": "in disconnectTestUsers"}, {"path": "..\\library\\MAndroid2BaseMCloud.py", "lineno": 334, "message": "in tearDownUsingDevices"}, {"path": "..\\library\\MAndroid2BaseMCloud.py", "lineno": 103, "message": "IndexError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\n##########Calling REST API to release device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nHandset with IMSI 505025504563848 has been occupied by myself Peter.Zhang@matrium.com.au.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'failed to authenticate to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7918']\nMO Handset ID is mcloud.matrium.com.au:7918\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9001\n{'isSuccess': True, 'startTime': 1601271395581, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271396426, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271396426, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of web browsing is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3030 web_url \"https://www.google.com\"\nResponse of web browsing is:  {'isSuccess': True, 'startTime': 1601271404003, 'description': 'load web successfully', 'screenshotURL': ''}\ndeviceSerialList to be disconnected is ['ce12160ccd1f323f05', '9886734d5647434c32', '21f982c0b00c7ece']\ndisconnected everything\r\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 403\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 251, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271391.5079207, "msecs": 507.9207420349121, "relativeCreated": 845585.0584506989, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 252, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271391.5079207, "msecs": 507.9207420349121, "relativeCreated": 845585.0584506989, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'WebBrowsing': {'webUrl': 'https://www.google.com'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 253, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271391.5079207, "msecs": 507.9207420349121, "relativeCreated": 845585.0584506989, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 256, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271391.5079207, "msecs": 507.9207420349121, "relativeCreated": 845585.0584506989, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91C8E6630>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'WebBrowsing': {'webUrl': 'https://www.google.com'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", webBrowsingTestParameters)\n    def test_MAndroid2_WebBrowsing(self, rp_logger, json_metadata, testEnvironment, testParameters):\n    \n        # Define test case variables.\n        testCaseKey = 'WebBrowsing'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:258: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:350: in executeTestCase\n    disconnectTestUsers(testEnvironment)\n..\\library\\MAndroid2BaseCommon.py:245: in disconnectTestUsers\n    mcloud.tearDownUsingDevices(mcloud.deviceSerialList)\n..\\library\\MAndroid2BaseMCloud.py:334: in tearDownUsingDevices\n    result = self.releaseDevice(deviceSerial)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <MAndroid2SmokeTest.library.MAndroid2BaseMCloud.MCloudControl object at 0x000002B91C83EB00>\ndeviceSerial = 'ce12160ccd1f323f05'\n\n    def releaseDevice(self, deviceSerial):\n        # Set authorization Token to acces mCloud through REST API.\n        headers = {\"Authorization\": self.mcloudLoginToken}\n    \n        # Call REST API to release the use of the testing device.\n        print(\"##########Calling REST API to release device {} on MCloud.\".format(deviceSerial))\n        resp = requests.delete(self._url('/user/devices/' + deviceSerial),\n                             headers=headers)\n        print(self._url('/user/devices/' + deviceSerial))\n        print(\"resp.status_code is {}\".format(resp.status_code))\n    \n        if resp.status_code == 200:\n            # Check REST API response.\n            dictResponse = json.loads(resp.content)\n            print(dictResponse)\n            if (deviceSerial in self.deviceSerialList):\n                self.deviceSerialList.remove(deviceSerial)\n            return True\n        else:\n>           print('[!] HTTP {0} calling [{1}]'.format(self._url('/user/devices/' + deviceSerial)))\nE           IndexError: tuple index out of range\n\n..\\library\\MAndroid2BaseMCloud.py:103: IndexError"}, "teardown": {"duration": 0.0009970664978027344, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_WebBrowsing[testParameters0-testEnvironment2]", "lineno": 240, "outcome": "failed", "keywords": ["testParameters0-testEnvironment2", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "test_MAndroid2_WebBrowsing[testParameters0-testEnvironment2]", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0009975433349609375, "outcome": "passed"}, "call": {"duration": 21.03680968284607, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseMCloud.py", "lineno": 103, "message": "IndexError: tuple index out of range"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 258, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 350, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 245, "message": "in disconnectTestUsers"}, {"path": "..\\library\\MAndroid2BaseMCloud.py", "lineno": 334, "message": "in tearDownUsingDevices"}, {"path": "..\\library\\MAndroid2BaseMCloud.py", "lineno": 103, "message": "IndexError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025104559746 has not been occupied.\nCorresponding device serial is 9886734d5647434c32.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'failed to authenticate to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7465\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7465']\nMO Handset ID is mcloud.matrium.com.au:7465\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'isSuccess': True, 'startTime': 1601271411796, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271412896, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271412896, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of web browsing is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3030 web_url \"https://www.google.com\"\nResponse of web browsing is:  {'isSuccess': True, 'startTime': 1601271424031, 'description': 'load web successfully', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_033705.png'}\ndeviceSerialList to be disconnected is ['ce12160ccd1f323f05', '9886734d5647434c32', '21f982c0b00c7ece', '9886734d5647434c32']\ndisconnected everything\r\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 403\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 251, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271405.6310437, "msecs": 631.0436725616455, "relativeCreated": 859708.1813812256, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 252, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271405.6310437, "msecs": 631.0436725616455, "relativeCreated": 859708.1813812256, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'WebBrowsing': {'webUrl': 'https://www.google.com'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 253, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271405.6310437, "msecs": 631.0436725616455, "relativeCreated": 859708.1813812256, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 256, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271405.6310437, "msecs": 631.0436725616455, "relativeCreated": 859708.1813812256, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91CA37630>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'WebBrowsing': {'webUrl': 'https://www.google.com'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", webBrowsingTestParameters)\n    def test_MAndroid2_WebBrowsing(self, rp_logger, json_metadata, testEnvironment, testParameters):\n    \n        # Define test case variables.\n        testCaseKey = 'WebBrowsing'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:258: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:350: in executeTestCase\n    disconnectTestUsers(testEnvironment)\n..\\library\\MAndroid2BaseCommon.py:245: in disconnectTestUsers\n    mcloud.tearDownUsingDevices(mcloud.deviceSerialList)\n..\\library\\MAndroid2BaseMCloud.py:334: in tearDownUsingDevices\n    result = self.releaseDevice(deviceSerial)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <MAndroid2SmokeTest.library.MAndroid2BaseMCloud.MCloudControl object at 0x000002B91C7DE470>\ndeviceSerial = 'ce12160ccd1f323f05'\n\n    def releaseDevice(self, deviceSerial):\n        # Set authorization Token to acces mCloud through REST API.\n        headers = {\"Authorization\": self.mcloudLoginToken}\n    \n        # Call REST API to release the use of the testing device.\n        print(\"##########Calling REST API to release device {} on MCloud.\".format(deviceSerial))\n        resp = requests.delete(self._url('/user/devices/' + deviceSerial),\n                             headers=headers)\n        print(self._url('/user/devices/' + deviceSerial))\n        print(\"resp.status_code is {}\".format(resp.status_code))\n    \n        if resp.status_code == 200:\n            # Check REST API response.\n            dictResponse = json.loads(resp.content)\n            print(dictResponse)\n            if (deviceSerial in self.deviceSerialList):\n                self.deviceSerialList.remove(deviceSerial)\n            return True\n        else:\n>           print('[!] HTTP {0} calling [{1}]'.format(self._url('/user/devices/' + deviceSerial)))\nE           IndexError: tuple index out of range\n\n..\\library\\MAndroid2BaseMCloud.py:103: IndexError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_WebBrowsing[testParameters0-testEnvironment3]", "lineno": 240, "outcome": "failed", "keywords": ["TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "test_MAndroid2_WebBrowsing[testParameters0-testEnvironment3]", "testcases/test_MAndroid2AllDevices.py", "testParameters0-testEnvironment3", "parametrize", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0009975433349609375, "outcome": "passed"}, "call": {"duration": 20.564867734909058, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseMCloud.py", "lineno": 103, "message": "IndexError: tuple index out of range"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 258, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 350, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 245, "message": "in disconnectTestUsers"}, {"path": "..\\library\\MAndroid2BaseMCloud.py", "lineno": 334, "message": "in tearDownUsingDevices"}, {"path": "..\\library\\MAndroid2BaseMCloud.py", "lineno": 103, "message": "IndexError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\n##########Calling REST API to release device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nHandset with IMSI 505025104559746 has been occupied by myself Peter.Zhang@matrium.com.au.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'failed to authenticate to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7465\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7465']\nMO Handset ID is mcloud.matrium.com.au:7465\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'isSuccess': True, 'startTime': 1601271433265, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271434354, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271434354, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of web browsing is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3030 web_url \"https://www.google.com\"\nResponse of web browsing is:  {'isSuccess': True, 'startTime': 1601271444937, 'description': 'load web successfully', 'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_033725.png'}\ndeviceSerialList to be disconnected is ['ce12160ccd1f323f05', '21f982c0b00c7ece', '9886734d5647434c32', '9886734d5647434c32']\ndisconnected everything\r\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 403\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 251, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271426.7436187, "msecs": 743.6187267303467, "relativeCreated": 880820.7564353943, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 252, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271426.7436187, "msecs": 743.6187267303467, "relativeCreated": 880820.7564353943, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'WebBrowsing': {'webUrl': 'https://www.google.com'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 253, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271426.744617, "msecs": 744.6169853210449, "relativeCreated": 880821.754693985, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 256, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271426.744617, "msecs": 744.6169853210449, "relativeCreated": 880821.754693985, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91C997E48>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'WebBrowsing': {'webUrl': 'https://www.google.com'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", webBrowsingTestParameters)\n    def test_MAndroid2_WebBrowsing(self, rp_logger, json_metadata, testEnvironment, testParameters):\n    \n        # Define test case variables.\n        testCaseKey = 'WebBrowsing'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:258: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:350: in executeTestCase\n    disconnectTestUsers(testEnvironment)\n..\\library\\MAndroid2BaseCommon.py:245: in disconnectTestUsers\n    mcloud.tearDownUsingDevices(mcloud.deviceSerialList)\n..\\library\\MAndroid2BaseMCloud.py:334: in tearDownUsingDevices\n    result = self.releaseDevice(deviceSerial)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <MAndroid2SmokeTest.library.MAndroid2BaseMCloud.MCloudControl object at 0x000002B91C979048>\ndeviceSerial = 'ce12160ccd1f323f05'\n\n    def releaseDevice(self, deviceSerial):\n        # Set authorization Token to acces mCloud through REST API.\n        headers = {\"Authorization\": self.mcloudLoginToken}\n    \n        # Call REST API to release the use of the testing device.\n        print(\"##########Calling REST API to release device {} on MCloud.\".format(deviceSerial))\n        resp = requests.delete(self._url('/user/devices/' + deviceSerial),\n                             headers=headers)\n        print(self._url('/user/devices/' + deviceSerial))\n        print(\"resp.status_code is {}\".format(resp.status_code))\n    \n        if resp.status_code == 200:\n            # Check REST API response.\n            dictResponse = json.loads(resp.content)\n            print(dictResponse)\n            if (deviceSerial in self.deviceSerialList):\n                self.deviceSerialList.remove(deviceSerial)\n            return True\n        else:\n>           print('[!] HTTP {0} calling [{1}]'.format(self._url('/user/devices/' + deviceSerial)))\nE           IndexError: tuple index out of range\n\n..\\library\\MAndroid2BaseMCloud.py:103: IndexError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_WebBrowsing[testParameters0-testEnvironment4]", "lineno": 240, "outcome": "failed", "keywords": ["testParameters0-testEnvironment4", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "test_MAndroid2_WebBrowsing[testParameters0-testEnvironment4]", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0, "outcome": "passed"}, "call": {"duration": 16.478313446044922, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseMCloud.py", "lineno": 103, "message": "IndexError: tuple index out of range"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 258, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 350, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 245, "message": "in disconnectTestUsers"}, {"path": "..\\library\\MAndroid2BaseMCloud.py", "lineno": 334, "message": "in tearDownUsingDevices"}, {"path": "..\\library\\MAndroid2BaseMCloud.py", "lineno": 103, "message": "IndexError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025703492762 has not been occupied.\nCorresponding device serial is ce12160ccd1f323f05.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'failed to authenticate to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457']\nMO Handset ID is mcloud.matrium.com.au:7457\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9001\n{'isSuccess': True, 'startTime': 1601271451956, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271453049, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271453049, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\nCommand of web browsing is:  java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3030 web_url \"https://www.google.com\"\nResponse of web browsing is:  {'isSuccess': True, 'startTime': 1601271460764, 'description': 'load web successfully', 'screenshotURL': ''}\ndeviceSerialList to be disconnected is ['ce12160ccd1f323f05', '21f982c0b00c7ece', '9886734d5647434c32', '9886734d5647434c32', 'ce12160ccd1f323f05']\ndisconnected everything\r\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['21f982c0b00c7ece', '9886734d5647434c32', '9886734d5647434c32', 'ce12160ccd1f323f05']\n##########Calling REST API to release device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['9886734d5647434c32', '9886734d5647434c32', 'ce12160ccd1f323f05']\n##########Calling REST API to release device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nRemaining released deviceSerialList is ['9886734d5647434c32', 'ce12160ccd1f323f05']\n##########Calling REST API to release device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32\nresp.status_code is 403\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 251, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271447.369323, "msecs": 369.3230152130127, "relativeCreated": 901446.460723877, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 252, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271447.369323, "msecs": 369.3230152130127, "relativeCreated": 901446.460723877, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'WebBrowsing': {'webUrl': 'https://www.google.com'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 253, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271447.369323, "msecs": 369.3230152130127, "relativeCreated": 901446.460723877, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 256, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271447.3703206, "msecs": 370.32055854797363, "relativeCreated": 901447.4582672119, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91CA5BE48>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'WebBrowsing': {'webUrl': 'https://www.google.com'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", webBrowsingTestParameters)\n    def test_MAndroid2_WebBrowsing(self, rp_logger, json_metadata, testEnvironment, testParameters):\n    \n        # Define test case variables.\n        testCaseKey = 'WebBrowsing'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:258: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:350: in executeTestCase\n    disconnectTestUsers(testEnvironment)\n..\\library\\MAndroid2BaseCommon.py:245: in disconnectTestUsers\n    mcloud.tearDownUsingDevices(mcloud.deviceSerialList)\n..\\library\\MAndroid2BaseMCloud.py:334: in tearDownUsingDevices\n    result = self.releaseDevice(deviceSerial)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <MAndroid2SmokeTest.library.MAndroid2BaseMCloud.MCloudControl object at 0x000002B91CAFE2B0>\ndeviceSerial = '9886734d5647434c32'\n\n    def releaseDevice(self, deviceSerial):\n        # Set authorization Token to acces mCloud through REST API.\n        headers = {\"Authorization\": self.mcloudLoginToken}\n    \n        # Call REST API to release the use of the testing device.\n        print(\"##########Calling REST API to release device {} on MCloud.\".format(deviceSerial))\n        resp = requests.delete(self._url('/user/devices/' + deviceSerial),\n                             headers=headers)\n        print(self._url('/user/devices/' + deviceSerial))\n        print(\"resp.status_code is {}\".format(resp.status_code))\n    \n        if resp.status_code == 200:\n            # Check REST API response.\n            dictResponse = json.loads(resp.content)\n            print(dictResponse)\n            if (deviceSerial in self.deviceSerialList):\n                self.deviceSerialList.remove(deviceSerial)\n            return True\n        else:\n>           print('[!] HTTP {0} calling [{1}]'.format(self._url('/user/devices/' + deviceSerial)))\nE           IndexError: tuple index out of range\n\n..\\library\\MAndroid2BaseMCloud.py:103: IndexError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_WebBrowsing[testParameters0-testEnvironment5]", "lineno": 240, "outcome": "failed", "keywords": ["TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "test_MAndroid2_WebBrowsing[testParameters0-testEnvironment5]", "parametrize", "testParameters0-testEnvironment5", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0, "outcome": "passed"}, "call": {"duration": 6.6201746463775635, "outcome": "failed", "crash": {"path": "c:\\setup\\python37\\lib\\json\\decoder.py", "lineno": 355, "message": "json.decoder.JSONDecodeError: Expecting value: line 2 column 1 (char 2)"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 258, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 344, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 156, "message": "in connectTestUsers"}, {"path": "..\\library\\MAndroid2BaseAPI.py", "lineno": 72, "message": "in getMAndroid2Version"}, {"path": "c:\\setup\\python37\\lib\\json\\__init__.py", "lineno": 348, "message": "in loads"}, {"path": "c:\\setup\\python37\\lib\\json\\decoder.py", "lineno": 337, "message": "in decode"}, {"path": "c:\\setup\\python37\\lib\\json\\decoder.py", "lineno": 355, "message": "JSONDecodeError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025703492762 has not been occupied.\nCorresponding device serial is ce12160ccd1f323f05.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'failed to authenticate to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457']\nMO Handset ID is mcloud.matrium.com.au:7457\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9001\n{'isSuccess': True, 'startTime': 1601271467337, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271468449, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271468449, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 251, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271463.9274166, "msecs": 927.4165630340576, "relativeCreated": 918004.554271698, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 252, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271463.9274166, "msecs": 927.4165630340576, "relativeCreated": 918004.554271698, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'WebBrowsing': {'webUrl': 'https://www.google.com'}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 253, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271463.9274166, "msecs": 927.4165630340576, "relativeCreated": 918004.554271698, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 256, "funcName": "test_MAndroid2_WebBrowsing", "created": 1601271463.9274166, "msecs": 927.4165630340576, "relativeCreated": 918004.554271698, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91C955EF0>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'WebBrowsing': {'webUrl': 'https://www.google.com'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", webBrowsingTestParameters)\n    def test_MAndroid2_WebBrowsing(self, rp_logger, json_metadata, testEnvironment, testParameters):\n    \n        # Define test case variables.\n        testCaseKey = 'WebBrowsing'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:258: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:344: in executeTestCase\n    connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList)\n..\\library\\MAndroid2BaseCommon.py:156: in connectTestUsers\n    testEnvironment['testUsers']['MO']['handsetID'])\n..\\library\\MAndroid2BaseAPI.py:72: in getMAndroid2Version\n    response = json.loads(subprocess.check_output(command.split()))\nc:\\setup\\python37\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\nc:\\setup\\python37\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000002B91B346E10>, s = '\\r\\n'\nidx = 2\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 2 column 1 (char 2)\n\nc:\\setup\\python37\\lib\\json\\decoder.py:355: JSONDecodeError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment0]", "lineno": 272, "outcome": "failed", "keywords": ["TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "test_MAndroid2_HTTPDownload[testParameters0-testEnvironment0]", "testParameters0-testEnvironment0", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0, "outcome": "passed"}, "call": {"duration": 2.582990884780884, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseCommon.py", "lineno": 151, "message": "AssertionError"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 289, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 344, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 151, "message": "AssertionError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025504563848 has not been occupied.\nCorresponding device serial is 21f982c0b00c7ece.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'failed to authenticate to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7918\toffline\r\n\r\n\n['mcloud.matrium.com.au:7457']\nCannot find device mcloud.matrium.com.au:7918 after adb connect\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 282, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271470.6064346, "msecs": 606.4345836639404, "relativeCreated": 924683.5722923279, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 283, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271470.6064346, "msecs": 606.4345836639404, "relativeCreated": 924683.5722923279, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'HTTPDownload': {'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat', 'Duration': 10}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 284, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271470.6064346, "msecs": 606.4345836639404, "relativeCreated": 924683.5722923279, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 287, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271470.6064346, "msecs": 606.4345836639404, "relativeCreated": 924683.5722923279, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91C979F98>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'HTTPDownload': {'Duration': 10, 'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", httpDownloadTestParameters)\n    def test_MAndroid2_HTTPDownload(self, rp_logger, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'HTTPDownload'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:344: in executeTestCase\n    connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\nuserFlag = 'MO'\ntestParameters = {'HTTPDownload': {'Duration': 10, 'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat'}}\ntestCaseInfo = {'CheckPoints': ['HTTP download successfully.'], 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', ...}\ntestCaseSummary = {'MAndroid2AgentVersion': '2.19.33Build2020-03-27_04:28:38', 'fail': 3, 'pass': 12, 'sum': 15, ...}\ntestCaseDetailList = [{'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'De... 'Basic voice call.', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', ...}, ...]\n\n    def connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList):\n        # Connect available test handset on mcloud from specified IMSI.\n        result = {}\n        mcloud = MCloudControl()\n    \n        # Set test environment variables.\n        mcloud.mcloudBaseUrl = testEnvironment['MCloud']['baseUrl']\n        mcloud.mcloudLoginUser = testEnvironment['Login']['User']\n        mcloud.mcloudLoginToken = testEnvironment['Login']['accessToken']\n    \n        if (userFlag == \"MO\"):\n            result = mcloud.connectToMcloudUser(testEnvironment['testUsers']['MO']['IMSI'])\n    \n            if result[\"failedFlag\"] == True or result[\"remoteConnectUrl\"] == None:\n                failedReason = result[\"failedReason\"]\n                writeExcelFailedTestReport(failedReason, testCaseSummary, testCaseDetailList, testEnvironment,\n                                           testParameters, testCaseInfo)\n            else:\n                testEnvironment['testUsers']['MO']['handsetID'] = result[\"remoteConnectUrl\"]\n    \n>           assert (result[\"remoteConnectUrl\"] != None)\nE           AssertionError\n\n..\\library\\MAndroid2BaseCommon.py:151: AssertionError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment1]", "lineno": 272, "outcome": "failed", "keywords": ["testParameters0-testEnvironment1", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "test_MAndroid2_HTTPDownload[testParameters0-testEnvironment1]", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0005536079406738281, "outcome": "passed"}, "call": {"duration": 2.5123581886291504, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseCommon.py", "lineno": 151, "message": "AssertionError"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 289, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 344, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 151, "message": "AssertionError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025504563848 has not been occupied.\nCorresponding device serial is 21f982c0b00c7ece.\nFind the matched IMSI 505025504563848 on mcloud\n##########Calling REST API to use device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 21f982c0b00c7ece to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 21f982c0b00c7ece on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/21f982c0b00c7ece/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7918'}\nconnect 505025504563848 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7918\nResponse of adb connect mcloud.matrium.com.au:7918 is: b'already connected to mcloud.matrium.com.au:7918\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7918\tunauthorized\r\n\r\n\n['mcloud.matrium.com.au:7457']\nCannot find device mcloud.matrium.com.au:7918 after adb connect\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 282, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271473.2319467, "msecs": 231.9467067718506, "relativeCreated": 927309.0844154358, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 283, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271473.2319467, "msecs": 231.9467067718506, "relativeCreated": 927309.0844154358, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'HTTPDownload': {'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat', 'Duration': 10}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 284, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271473.2329478, "msecs": 232.94782638549805, "relativeCreated": 927310.0855350494, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 287, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271473.2329478, "msecs": 232.94782638549805, "relativeCreated": 927310.0855350494, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91C979CF8>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'HTTPDownload': {'Duration': 10, 'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", httpDownloadTestParameters)\n    def test_MAndroid2_HTTPDownload(self, rp_logger, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'HTTPDownload'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:344: in executeTestCase\n    connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\nuserFlag = 'MO'\ntestParameters = {'HTTPDownload': {'Duration': 10, 'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat'}}\ntestCaseInfo = {'CheckPoints': ['HTTP download successfully.'], 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', ...}\ntestCaseSummary = {'MAndroid2AgentVersion': '2.19.33Build2020-03-27_04:28:38', 'fail': 4, 'pass': 12, 'sum': 16, ...}\ntestCaseDetailList = [{'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'De... 'Basic voice call.', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', ...}, ...]\n\n    def connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList):\n        # Connect available test handset on mcloud from specified IMSI.\n        result = {}\n        mcloud = MCloudControl()\n    \n        # Set test environment variables.\n        mcloud.mcloudBaseUrl = testEnvironment['MCloud']['baseUrl']\n        mcloud.mcloudLoginUser = testEnvironment['Login']['User']\n        mcloud.mcloudLoginToken = testEnvironment['Login']['accessToken']\n    \n        if (userFlag == \"MO\"):\n            result = mcloud.connectToMcloudUser(testEnvironment['testUsers']['MO']['IMSI'])\n    \n            if result[\"failedFlag\"] == True or result[\"remoteConnectUrl\"] == None:\n                failedReason = result[\"failedReason\"]\n                writeExcelFailedTestReport(failedReason, testCaseSummary, testCaseDetailList, testEnvironment,\n                                           testParameters, testCaseInfo)\n            else:\n                testEnvironment['testUsers']['MO']['handsetID'] = result[\"remoteConnectUrl\"]\n    \n>           assert (result[\"remoteConnectUrl\"] != None)\nE           AssertionError\n\n..\\library\\MAndroid2BaseCommon.py:151: AssertionError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment2]", "lineno": 272, "outcome": "failed", "keywords": ["testParameters0-testEnvironment2", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "test_MAndroid2_HTTPDownload[testParameters0-testEnvironment2]", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0, "outcome": "passed"}, "call": {"duration": 11.214625120162964, "outcome": "failed", "crash": {"path": "c:\\setup\\python37\\lib\\subprocess.py", "lineno": 481, "message": "subprocess.CalledProcessError: Command '['java', '-jar', 'c:/tmp/MatriumMAndroid2-release.jar', 'mcloud.matrium.com.au:7465', '9003']' returned non-zero exit status 1."}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 289, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 344, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 156, "message": "in connectTestUsers"}, {"path": "..\\library\\MAndroid2BaseAPI.py", "lineno": 72, "message": "in getMAndroid2Version"}, {"path": "c:\\setup\\python37\\lib\\subprocess.py", "lineno": 389, "message": "in check_output"}, {"path": "c:\\setup\\python37\\lib\\subprocess.py", "lineno": 481, "message": "CalledProcessError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025104559746 has not been occupied.\nCorresponding device serial is 9886734d5647434c32.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'failed to authenticate to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7465\tdevice\r\nmcloud.matrium.com.au:7918\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7465', 'mcloud.matrium.com.au:7918']\nMO Handset ID is mcloud.matrium.com.au:7465\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'isSuccess': True, 'startTime': 1601271482416, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9002\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271483504, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9003\n{'description': 'MAndroid2 Agent Version is: 2.19.33Build2020-03-27_04:28:38', 'startTime': 1601271483504, 'version': '2.19.33Build2020-03-27_04:28:38', 'isSuccess': True}\n", "stderr": "Exception in thread \"main\" java.lang.NullPointerException\r\n\tat mandroid2Agent.MainEntrance.execSsInstrument(MainEntrance.java:573)\r\n\tat mandroid2Agent.MainEntrance.execInstrument(MainEntrance.java:557)\r\n\tat mandroid2Agent.MainEntrance.execNonRootCmd(MainEntrance.java:536)\r\n\tat mandroid2Agent.MainEntrance.main(MainEntrance.java:227)\r\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 282, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271475.785179, "msecs": 785.1788997650146, "relativeCreated": 929862.316608429, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 283, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271475.785179, "msecs": 785.1788997650146, "relativeCreated": 929862.316608429, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'HTTPDownload': {'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat', 'Duration': 10}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 284, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271475.785179, "msecs": 785.1788997650146, "relativeCreated": 929862.316608429, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 287, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271475.785179, "msecs": 785.1788997650146, "relativeCreated": 929862.316608429, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91C971048>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'HTTPDownload': {'Duration': 10, 'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", httpDownloadTestParameters)\n    def test_MAndroid2_HTTPDownload(self, rp_logger, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'HTTPDownload'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:344: in executeTestCase\n    connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList)\n..\\library\\MAndroid2BaseCommon.py:156: in connectTestUsers\n    testEnvironment['testUsers']['MO']['handsetID'])\n..\\library\\MAndroid2BaseAPI.py:72: in getMAndroid2Version\n    response = json.loads(subprocess.check_output(command.split()))\nc:\\setup\\python37\\lib\\subprocess.py:389: in check_output\n    **kwargs).stdout\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ninput = None, capture_output = False, timeout = None, check = True\npopenargs = (['java', '-jar', 'c:/tmp/MatriumMAndroid2-release.jar', 'mcloud.matrium.com.au:7465', '9003'],)\nkwargs = {'stdout': -1}\nprocess = <subprocess.Popen object at 0x000002B91C971B38>, stdout = b''\nstderr = None, retcode = 1\n\n    def run(*popenargs,\n            input=None, capture_output=False, timeout=None, check=False, **kwargs):\n        \"\"\"Run command with arguments and return a CompletedProcess instance.\n    \n        The returned instance will have attributes args, returncode, stdout and\n        stderr. By default, stdout and stderr are not captured, and those attributes\n        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.\n    \n        If check is True and the exit code was non-zero, it raises a\n        CalledProcessError. The CalledProcessError object will have the return code\n        in the returncode attribute, and output & stderr attributes if those streams\n        were captured.\n    \n        If timeout is given, and the process takes too long, a TimeoutExpired\n        exception will be raised.\n    \n        There is an optional argument \"input\", allowing you to\n        pass bytes or a string to the subprocess's stdin.  If you use this argument\n        you may not also use the Popen constructor's \"stdin\" argument, as\n        it will be used internally.\n    \n        By default, all communication is in bytes, and therefore any \"input\" should\n        be bytes, and the stdout and stderr will be bytes. If in text mode, any\n        \"input\" should be a string, and stdout and stderr will be strings decoded\n        according to locale encoding, or by \"encoding\" if set. Text mode is\n        triggered by setting any of text, encoding, errors or universal_newlines.\n    \n        The other arguments are the same as for the Popen constructor.\n        \"\"\"\n        if input is not None:\n            if 'stdin' in kwargs:\n                raise ValueError('stdin and input arguments may not both be used.')\n            kwargs['stdin'] = PIPE\n    \n        if capture_output:\n            if ('stdout' in kwargs) or ('stderr' in kwargs):\n                raise ValueError('stdout and stderr arguments may not be used '\n                                 'with capture_output.')\n            kwargs['stdout'] = PIPE\n            kwargs['stderr'] = PIPE\n    \n        with Popen(*popenargs, **kwargs) as process:\n            try:\n                stdout, stderr = process.communicate(input, timeout=timeout)\n            except TimeoutExpired:\n                process.kill()\n                stdout, stderr = process.communicate()\n                raise TimeoutExpired(process.args, timeout, output=stdout,\n                                     stderr=stderr)\n            except:  # Including KeyboardInterrupt, communicate handled that.\n                process.kill()\n                # We don't call process.wait() as .__exit__ does that for us.\n                raise\n            retcode = process.poll()\n            if check and retcode:\n                raise CalledProcessError(retcode, process.args,\n>                                        output=stdout, stderr=stderr)\nE               subprocess.CalledProcessError: Command '['java', '-jar', 'c:/tmp/MatriumMAndroid2-release.jar', 'mcloud.matrium.com.au:7465', '9003']' returned non-zero exit status 1.\n\nc:\\setup\\python37\\lib\\subprocess.py:481: CalledProcessError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment3]", "lineno": 272, "outcome": "failed", "keywords": ["TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "testParameters0-testEnvironment3", "parametrize", "()", "test_MAndroid2_HTTPDownload[testParameters0-testEnvironment3]", "MAndroid2SmokeTest"], "setup": {"duration": 0.0, "outcome": "passed"}, "call": {"duration": 7.4465765953063965, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseCommon.py", "lineno": 163, "message": "AssertionError"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 289, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 344, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 163, "message": "AssertionError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\n##########Calling REST API to release device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nHandset with IMSI 505025104559746 has been occupied by myself Peter.Zhang@matrium.com.au.\nFind the matched IMSI 505025104559746 on mcloud\n##########Calling REST API to use device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding 9886734d5647434c32 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device 9886734d5647434c32 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/9886734d5647434c32/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7465'}\nconnect 505025104559746 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7465\nResponse of adb connect mcloud.matrium.com.au:7465 is: b'failed to authenticate to mcloud.matrium.com.au:7465\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7465\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7465']\nMO Handset ID is mcloud.matrium.com.au:7465\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 9001\n{'screenshotURL': '/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_153810.png', 'description': 'Failed to check License Support State, please check your MAndroid2 login succesessfully.', 'startTime': 1601271490033, 'isSuccess': False}\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 282, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271487.1010704, "msecs": 101.07040405273438, "relativeCreated": 941178.2081127167, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 283, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271487.1010704, "msecs": 101.07040405273438, "relativeCreated": 941178.2081127167, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'HTTPDownload': {'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat', 'Duration': 10}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 284, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271487.1010704, "msecs": 101.07040405273438, "relativeCreated": 941178.2081127167, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 287, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271487.1010704, "msecs": 101.07040405273438, "relativeCreated": 941178.2081127167, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91CAE7F60>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'HTTPDownload': {'Duration': 10, 'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", httpDownloadTestParameters)\n    def test_MAndroid2_HTTPDownload(self, rp_logger, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'HTTPDownload'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:344: in executeTestCase\n    connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\nuserFlag = 'MO'\ntestParameters = {'HTTPDownload': {'Duration': 10, 'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat'}}\ntestCaseInfo = {'CheckPoints': ['HTTP download successfully.'], 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', ...}\ntestCaseSummary = {'MAndroid2AgentVersion': '2.19.33Build2020-03-27_04:28:38', 'fail': 5, 'pass': 12, 'sum': 17, ...}\ntestCaseDetailList = [{'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'De... 'Basic voice call.', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', ...}, ...]\n\n    def connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList):\n        # Connect available test handset on mcloud from specified IMSI.\n        result = {}\n        mcloud = MCloudControl()\n    \n        # Set test environment variables.\n        mcloud.mcloudBaseUrl = testEnvironment['MCloud']['baseUrl']\n        mcloud.mcloudLoginUser = testEnvironment['Login']['User']\n        mcloud.mcloudLoginToken = testEnvironment['Login']['accessToken']\n    \n        if (userFlag == \"MO\"):\n            result = mcloud.connectToMcloudUser(testEnvironment['testUsers']['MO']['IMSI'])\n    \n            if result[\"failedFlag\"] == True or result[\"remoteConnectUrl\"] == None:\n                failedReason = result[\"failedReason\"]\n                writeExcelFailedTestReport(failedReason, testCaseSummary, testCaseDetailList, testEnvironment,\n                                           testParameters, testCaseInfo)\n            else:\n                testEnvironment['testUsers']['MO']['handsetID'] = result[\"remoteConnectUrl\"]\n    \n            assert (result[\"remoteConnectUrl\"] != None)\n            print(\"MO Handset ID is {}\".format(result[\"remoteConnectUrl\"]))\n    \n            # Get MAndroid2 version info.\n            version = getMAndroid2Version(testEnvironment['MAndroid2AgentPath'],\n                                          testEnvironment['testUsers']['MO']['handsetID'])\n            if version != None:\n                testEnvironment['testUsers']['MO']['versions'] = version\n            else:\n                failedReason = \"Cannot get MAndroid2 version from {}\".format(testEnvironment['testUsers']['MO']['handsetID'])\n                writeExcelFailedTestReport(failedReason, testCaseSummary, testCaseDetailList, testEnvironment,\n                                           testParameters, testCaseInfo)\n>           assert (version != None)\nE           AssertionError\n\n..\\library\\MAndroid2BaseCommon.py:163: AssertionError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment4]", "lineno": 272, "outcome": "failed", "keywords": ["testParameters0-testEnvironment4", "test_MAndroid2_HTTPDownload[testParameters0-testEnvironment4]", "TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "()", "MAndroid2SmokeTest"], "setup": {"duration": 0.0009975433349609375, "outcome": "passed"}, "call": {"duration": 4.515837907791138, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseCommon.py", "lineno": 163, "message": "AssertionError"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 289, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 344, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 163, "message": "AssertionError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\nHandset with IMSI 505025703492762 has not been occupied.\nCorresponding device serial is ce12160ccd1f323f05.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'failed to authenticate to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\tdevice\r\nmcloud.matrium.com.au:7465\tdevice\r\n\r\n\n['mcloud.matrium.com.au:7457', 'mcloud.matrium.com.au:7465']\nMO Handset ID is mcloud.matrium.com.au:7457\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9001\n{'isSuccess': True, 'startTime': 1601271497871, 'version': '2.20.41Build2020-06-09_14:00:07', 'description': 'MAndroid2 Version is: 2.20.41Build2020-06-09_14:00:07'}\njava -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 9002\n{'screenshotURL': 'null', 'description': 'Handset is offline, check your handset_id parameter.', 'startTime': 1601271498970, 'isSuccess': False}\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 282, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271494.5945542, "msecs": 594.5541858673096, "relativeCreated": 948671.6918945312, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025504563848', 'MSISDN': '+61431202671', 'handsetID': 'mcloud.matrium.com.au:7918', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 283, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271494.5945542, "msecs": 594.5541858673096, "relativeCreated": 948671.6918945312, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'HTTPDownload': {'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat', 'Duration': 10}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 284, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271494.5945542, "msecs": 594.5541858673096, "relativeCreated": 948671.6918945312, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 287, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271494.5945542, "msecs": 594.5541858673096, "relativeCreated": 948671.6918945312, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91CAE7080>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'HTTPDownload': {'Duration': 10, 'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", httpDownloadTestParameters)\n    def test_MAndroid2_HTTPDownload(self, rp_logger, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'HTTPDownload'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:344: in executeTestCase\n    connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\nuserFlag = 'MO'\ntestParameters = {'HTTPDownload': {'Duration': 10, 'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat'}}\ntestCaseInfo = {'CheckPoints': ['HTTP download successfully.'], 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', ...}\ntestCaseSummary = {'MAndroid2AgentVersion': '2.19.33Build2020-03-27_04:28:38', 'fail': 6, 'pass': 12, 'sum': 18, ...}\ntestCaseDetailList = [{'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'De... 'Basic voice call.', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', ...}, ...]\n\n    def connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList):\n        # Connect available test handset on mcloud from specified IMSI.\n        result = {}\n        mcloud = MCloudControl()\n    \n        # Set test environment variables.\n        mcloud.mcloudBaseUrl = testEnvironment['MCloud']['baseUrl']\n        mcloud.mcloudLoginUser = testEnvironment['Login']['User']\n        mcloud.mcloudLoginToken = testEnvironment['Login']['accessToken']\n    \n        if (userFlag == \"MO\"):\n            result = mcloud.connectToMcloudUser(testEnvironment['testUsers']['MO']['IMSI'])\n    \n            if result[\"failedFlag\"] == True or result[\"remoteConnectUrl\"] == None:\n                failedReason = result[\"failedReason\"]\n                writeExcelFailedTestReport(failedReason, testCaseSummary, testCaseDetailList, testEnvironment,\n                                           testParameters, testCaseInfo)\n            else:\n                testEnvironment['testUsers']['MO']['handsetID'] = result[\"remoteConnectUrl\"]\n    \n            assert (result[\"remoteConnectUrl\"] != None)\n            print(\"MO Handset ID is {}\".format(result[\"remoteConnectUrl\"]))\n    \n            # Get MAndroid2 version info.\n            version = getMAndroid2Version(testEnvironment['MAndroid2AgentPath'],\n                                          testEnvironment['testUsers']['MO']['handsetID'])\n            if version != None:\n                testEnvironment['testUsers']['MO']['versions'] = version\n            else:\n                failedReason = \"Cannot get MAndroid2 version from {}\".format(testEnvironment['testUsers']['MO']['handsetID'])\n                writeExcelFailedTestReport(failedReason, testCaseSummary, testCaseDetailList, testEnvironment,\n                                           testParameters, testCaseInfo)\n>           assert (version != None)\nE           AssertionError\n\n..\\library\\MAndroid2BaseCommon.py:163: AssertionError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "testcases/test_MAndroid2AllDevices.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment5]", "lineno": 272, "outcome": "error", "keywords": ["TestMAndroid2TestCases", "allAvailableDeviceSmokeTest", "pytestmark", "testcases/test_MAndroid2AllDevices.py", "parametrize", "testParameters0-testEnvironment5", "()", "test_MAndroid2_HTTPDownload[testParameters0-testEnvironment5]", "MAndroid2SmokeTest"], "setup": {"duration": 0.0, "outcome": "passed"}, "call": {"duration": 2.7020344734191895, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseCommon.py", "lineno": 151, "message": "AssertionError"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 289, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 344, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 151, "message": "AssertionError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\nyaml[1][keyName] is {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}.\n##########Calling REST API to get devices list on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/devices\n##########Calling REST API to release device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05\nresp.status_code is 200\n{'success': True, 'description': 'Device successfully removed'}\nHandset with IMSI 505025703492762 has been occupied by myself Peter.Zhang@matrium.com.au.\nFind the matched IMSI 505025703492762 on mcloud\n##########Calling REST API to use device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices\n{'success': True, 'description': 'Device successfully added'}\nAdding ce12160ccd1f323f05 to deviceSerialList\n##########Calling REST API to get the remote debug URL of the testing device ce12160ccd1f323f05 on MCloud.\nhttp://mcloud.matrium.com.au:7100/api/v1/user/devices/ce12160ccd1f323f05/remoteConnect\n{'success': True, 'remoteConnectUrl': 'mcloud.matrium.com.au:7457'}\nconnect 505025703492762 on mcloud successfully\nremoteConnectUrl is  mcloud.matrium.com.au:7457\nResponse of adb connect mcloud.matrium.com.au:7457 is: b'failed to authenticate to mcloud.matrium.com.au:7457\\r\\n'\nResponse of adb devices is: List of devices attached\r\nmcloud.matrium.com.au:7457\toffline\r\n\r\n\n[]\nCannot find device mcloud.matrium.com.au:7457 after adb connect\n", "log": [{"name": "MAndroid2SmokeTest.conftest", "msg": "Test case info: {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.']}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 282, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271499.1498852, "msecs": 149.8851776123047, "relativeCreated": 953227.0228862762, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test environment: {'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025703492762', 'MSISDN': '+61402537622', 'handsetID': 'mcloud.matrium.com.au:7457', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947', 'handsetID': 'mcloud.matrium.com.au:7465', 'versions': {'MAndroid2': '2.20.41Build2020-06-09_14:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 283, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271499.1498852, "msecs": 149.8851776123047, "relativeCreated": 953227.0228862762, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Test testParameters: {'HTTPDownload': {'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat', 'Duration': 10}}.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 284, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271499.1498852, "msecs": 149.8851776123047, "relativeCreated": 953227.0228862762, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}, {"name": "MAndroid2SmokeTest.conftest", "msg": "Executing test logic.", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\testcases\\test_MAndroid2AllDevices.py", "filename": "test_MAndroid2AllDevices.py", "module": "test_MAndroid2AllDevices", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 287, "funcName": "test_MAndroid2_HTTPDownload", "created": 1601271499.1498852, "msecs": 149.8851776123047, "relativeCreated": 953227.0228862762, "thread": 52408, "threadName": "MainThread", "processName": "MainProcess", "process": 51796}], "longrepr": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x000002B91C9C9C18>\nrp_logger = <Logger MAndroid2SmokeTest.conftest (DEBUG)>, json_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'HTTPDownload': {'Duration': 10, 'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", httpDownloadTestParameters)\n    def test_MAndroid2_HTTPDownload(self, rp_logger, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'HTTPDownload'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n>                                     testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n\ntest_MAndroid2AllDevices.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:344: in executeTestCase\n    connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\nuserFlag = 'MO'\ntestParameters = {'HTTPDownload': {'Duration': 10, 'downloadUrl': 'http://freeweb.siol.net/tehnika/test5M.dat'}}\ntestCaseInfo = {'CheckPoints': ['HTTP download successfully.'], 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', ...}\ntestCaseSummary = {'MAndroid2AgentVersion': '2.19.33Build2020-03-27_04:28:38', 'fail': 7, 'pass': 12, 'sum': 19, ...}\ntestCaseDetailList = [{'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'De... 'Basic voice call.', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', ...}, ...]\n\n    def connectTestUsers(testEnvironment, userFlag, testParameters, testCaseInfo, testCaseSummary, testCaseDetailList):\n        # Connect available test handset on mcloud from specified IMSI.\n        result = {}\n        mcloud = MCloudControl()\n    \n        # Set test environment variables.\n        mcloud.mcloudBaseUrl = testEnvironment['MCloud']['baseUrl']\n        mcloud.mcloudLoginUser = testEnvironment['Login']['User']\n        mcloud.mcloudLoginToken = testEnvironment['Login']['accessToken']\n    \n        if (userFlag == \"MO\"):\n            result = mcloud.connectToMcloudUser(testEnvironment['testUsers']['MO']['IMSI'])\n    \n            if result[\"failedFlag\"] == True or result[\"remoteConnectUrl\"] == None:\n                failedReason = result[\"failedReason\"]\n                writeExcelFailedTestReport(failedReason, testCaseSummary, testCaseDetailList, testEnvironment,\n                                           testParameters, testCaseInfo)\n            else:\n                testEnvironment['testUsers']['MO']['handsetID'] = result[\"remoteConnectUrl\"]\n    \n>           assert (result[\"remoteConnectUrl\"] != None)\nE           AssertionError\n\n..\\library\\MAndroid2BaseCommon.py:151: AssertionError"}, "teardown": {"duration": 0.007979154586791992, "outcome": "failed", "crash": {"path": "c:\\setup\\python37\\lib\\site-packages\\xlsxwriter\\workbook.py", "lineno": 318, "message": "xlsxwriter.exceptions.FileCreateError: [Errno 2] No such file or directory: 'C:\\\\tmp\\\\MAndroid2SmokeTestReport\\\\excel/MAndroid2TestReport_20200928_152226.xlsx'"}, "traceback": [{"path": "test_MAndroid2AllDevices.py", "lineno": 120, "message": ""}, {"path": "..\\library\\MAndroid2BaseExcel.py", "lineno": 112, "message": "in close"}, {"path": "c:\\setup\\python37\\lib\\site-packages\\xlsxwriter\\workbook.py", "lineno": 318, "message": "FileCreateError"}], "stdout": "------ Teardown after class TestMAndroid2TestCases ------\ntestCaseDetailList is [{'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'moInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"VoiceCall\": {\"Duration\": 8}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Place voice call.\\nReceive voice call.\\nWait for call duraton.\\nEnd voice call.', 'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3010 call_phonenum +61418673947\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270570754, \"callee\": \"+61418673947\", \"networkModeBeforeCall\": \"LTE\", \"description\": \"Make a call successfully\"}, \"checkPoint\": \"Place voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3011 \", \"response\": {\"isSuccess\": true, \"callAnswered\": true, \"ringingTime\": 1601270574927, \"answerTime\": 1601270575083, \"endTime\": \"0\", \"caller\": \"0431202671\", \"callDuration\": \"null\", \"networkModeBeforeCall\": \"LTE\", \"networkModeDuringCall\": \"LTE\", \"networkModeAfterCall\": \"\", \"description\": \"Call is connected successfully\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032255.png\"}, \"checkPoint\": \"Receive voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3012\", \"response\": {\"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152304.png\", \"description\": \"End the call successfully.\", \"endTime\": \"1601270587907\", \"networkModeAfterCall\": \"LTE\", \"isSuccess\": \"true\"}, \"checkPoint\": \"End voice call successfully.\"}', 'testResult': 'passed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'moInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"VoiceCall\": {\"Duration\": 8}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Place voice call.\\nReceive voice call.\\nWait for call duraton.\\nEnd voice call.', 'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3010 call_phonenum +61402537622\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270615422, \"callee\": \"+61402537622\", \"networkModeBeforeCall\": \"LTE\", \"description\": \"Make a call successfully\"}, \"checkPoint\": \"Place voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3011 \", \"response\": {\"ringingTime\": \"1601270619049\", \"callDuration\": \"null\", \"networkModeBeforeCall\": \"HSPAP\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152336.png\", \"caller\": \"0431202671\", \"callAnswered\": \"true\", \"answerTime\": \"1601270621318\", \"description\": \"Call is connected successfully.\", \"endTime\": \"0\", \"networkModeDuringCall\": \"HSPAP\", \"networkModeAfterCall\": \"null\", \"isSuccess\": \"true\"}, \"checkPoint\": \"Receive voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3012\", \"response\": {\"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152352.png\", \"description\": \"End the call successfully.\", \"endTime\": \"1601270636082\", \"networkModeAfterCall\": \"LTE\", \"isSuccess\": \"true\"}, \"checkPoint\": \"End voice call successfully.\"}', 'testResult': 'passed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'moInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"VoiceCall\": {\"Duration\": 8}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Place voice call.\\nReceive voice call.\\nWait for call duraton.\\nEnd voice call.', 'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3010 call_phonenum +61431202671\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270670763, \"callee\": \"+61431202671\", \"networkModeBeforeCall\": \"LTE\", \"description\": \"Make a call successfully\"}, \"checkPoint\": \"Place voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3011 \", \"response\": {\"ringingTime\": \"1601270674228\", \"callDuration\": \"null\", \"networkModeBeforeCall\": \"LTE\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152431.png\", \"caller\": \"+61418673947\", \"callAnswered\": \"true\", \"answerTime\": \"1601270676282\", \"description\": \"Call is connected successfully.\", \"endTime\": \"0\", \"networkModeDuringCall\": \"LTE\", \"networkModeAfterCall\": \"null\", \"isSuccess\": \"true\"}, \"checkPoint\": \"Receive voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3012\", \"response\": {\"isSuccess\": true, \"endTime\": 1601270691746, \"networkModeAfterCall\": \"LTE\", \"description\": \"End the call successfully\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032451.png\"}, \"checkPoint\": \"End voice call successfully.\"}', 'testResult': 'passed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'moInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"VoiceCall\": {\"Duration\": 8}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Place voice call.\\nReceive voice call.\\nWait for call duraton.\\nEnd voice call.', 'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3010 call_phonenum +61402537622\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270724798, \"callee\": \"+61402537622\", \"networkModeBeforeCall\": \"LTE\", \"description\": \"Make a call successfully\"}, \"checkPoint\": \"Place voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3011 \", \"response\": {\"ringingTime\": \"1601270730936\", \"callDuration\": \"null\", \"networkModeBeforeCall\": \"HSPAP\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152525.png\", \"caller\": \"0418673947\", \"callAnswered\": \"true\", \"answerTime\": \"1601270733030\", \"description\": \"Call is connected successfully.\", \"endTime\": \"0\", \"networkModeDuringCall\": \"HSPAP\", \"networkModeAfterCall\": \"null\", \"isSuccess\": \"true\"}, \"checkPoint\": \"Receive voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3012\", \"response\": {\"isSuccess\": true, \"endTime\": 1601270748156, \"networkModeAfterCall\": \"LTE\", \"description\": \"End the call successfully\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032548.png\"}, \"checkPoint\": \"End voice call successfully.\"}', 'testResult': 'passed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'moInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"VoiceCall\": {\"Duration\": 8}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Place voice call.\\nReceive voice call.\\nWait for call duraton.\\nEnd voice call.', 'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3010 call_phonenum +61431202671\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270774908, \"callee\": \"+61431202671\", \"networkModeBeforeCall\": \"LTE\", \"description\": \"Make a call successfully\"}, \"checkPoint\": \"Place voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3011 \", \"response\": {\"ringingTime\": \"1601270782485\", \"callDuration\": \"null\", \"networkModeBeforeCall\": \"LTE\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152615.png\", \"caller\": \"+61402537622\", \"callAnswered\": \"true\", \"answerTime\": \"1601270784712\", \"description\": \"Call is connected successfully.\", \"endTime\": \"0\", \"networkModeDuringCall\": \"LTE\", \"networkModeAfterCall\": \"null\", \"isSuccess\": \"true\"}, \"checkPoint\": \"Receive voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3012\", \"response\": {\"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152636.png\", \"description\": \"End the call successfully.\", \"endTime\": \"1601270799512\", \"networkModeAfterCall\": \"HSPAP\", \"isSuccess\": \"true\"}, \"checkPoint\": \"End voice call successfully.\"}', 'testResult': 'passed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'moInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"VoiceCall\": {\"Duration\": 8}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Place voice call.\\nReceive voice call.\\nWait for call duraton.\\nEnd voice call.', 'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3010 call_phonenum +61418673947\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270832579, \"callee\": \"+61418673947\", \"networkModeBeforeCall\": \"LTE\", \"description\": \"Make a call successfully\"}, \"checkPoint\": \"Place voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3011 \", \"response\": {\"isSuccess\": true, \"callAnswered\": true, \"ringingTime\": 1601270836928, \"answerTime\": 1601270837004, \"endTime\": \"0\", \"caller\": \"0402537622\", \"callDuration\": \"null\", \"networkModeBeforeCall\": \"LTE\", \"networkModeDuringCall\": \"LTE\", \"networkModeAfterCall\": \"\", \"description\": \"Call is connected successfully\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032717.png\"}, \"checkPoint\": \"Receive voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3012\", \"response\": {\"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152726.png\", \"description\": \"End the call successfully.\", \"endTime\": \"1601270850043\", \"networkModeAfterCall\": \"HSPAP\", \"isSuccess\": \"true\"}, \"checkPoint\": \"End voice call successfully.\"}', 'testResult': 'passed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'moInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"SMS\": {\"Duration\": 5, \"smsBody\": \"MAndroid2 SMS test.\"}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Send SMS.\\nWait for SMS duraton.\\nReceive SMS.', 'CheckPoints': 'Send SMS successfully.\\nReceive SMS successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3001 sms_address +61418673947 sms_body \\\\\"MAndroid2\\\\\\\\ SMS\\\\\\\\ test.\\\\\"\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270882423, \"description\": \"SMS is sent\"}, \"checkPoint\": \"Send SMS successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3002\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270892727, \"receivedTime\": 1601270883524, \"smsFrom\": \"+61431202671\", \"smsBody\": \"MAndroid2 SMS test.\", \"description\": \"Received SMS successfully\"}, \"checkPoint\": \"Receive SMS successfully.\"}', 'testResult': 'passed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'moInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"SMS\": {\"Duration\": 5, \"smsBody\": \"MAndroid2 SMS test.\"}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Send SMS.\\nWait for SMS duraton.\\nReceive SMS.', 'CheckPoints': 'Send SMS successfully.\\nReceive SMS successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3001 sms_address +61402537622 sms_body \\\\\"MAndroid2\\\\\\\\ SMS\\\\\\\\ test.\\\\\"\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270917791, \"description\": \"SMS is sent\"}, \"checkPoint\": \"Send SMS successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3002\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270926002, \"receivedTime\": 1601270919182, \"smsFrom\": \"+61431202671\", \"smsBody\": \"MAndroid2 SMS test.\", \"description\": \"Received SMS successfully\"}, \"checkPoint\": \"Receive SMS successfully.\"}', 'testResult': 'passed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'moInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"SMS\": {\"Duration\": 5, \"smsBody\": \"MAndroid2 SMS test.\"}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Send SMS.\\nWait for SMS duraton.\\nReceive SMS.', 'CheckPoints': 'Send SMS successfully.\\nReceive SMS successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3001 sms_address +61431202671 sms_body \\\\\"MAndroid2\\\\\\\\ SMS\\\\\\\\ test.\\\\\"\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270957204, \"description\": \"SMS is sent\"}, \"checkPoint\": \"Send SMS successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3002\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270965470, \"receivedTime\": 1601270959010, \"smsFrom\": \"+61418673947\", \"smsBody\": \"MAndroid2 SMS test.\", \"description\": \"Received SMS successfully\"}, \"checkPoint\": \"Receive SMS successfully.\"}', 'testResult': 'passed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'moInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"SMS\": {\"Duration\": 5, \"smsBody\": \"MAndroid2 SMS test.\"}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Send SMS.\\nWait for SMS duraton.\\nReceive SMS.', 'CheckPoints': 'Send SMS successfully.\\nReceive SMS successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3001 sms_address +61402537622 sms_body \\\\\"MAndroid2\\\\\\\\ SMS\\\\\\\\ test.\\\\\"\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270997159, \"description\": \"SMS is sent\"}, \"checkPoint\": \"Send SMS successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3002\", \"response\": {\"isSuccess\": true, \"startTime\": 1601271005987, \"receivedTime\": 1601270999228, \"smsFrom\": \"+61418673947\", \"smsBody\": \"MAndroid2 SMS test.\", \"description\": \"Received SMS successfully\"}, \"checkPoint\": \"Receive SMS successfully.\"}', 'testResult': 'passed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'moInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"SMS\": {\"Duration\": 5, \"smsBody\": \"MAndroid2 SMS test.\"}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Send SMS.\\nWait for SMS duraton.\\nReceive SMS.', 'CheckPoints': 'Send SMS successfully.\\nReceive SMS successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3001 sms_address +61431202671 sms_body \\\\\"MAndroid2\\\\\\\\ SMS\\\\\\\\ test.\\\\\"\", \"response\": {\"isSuccess\": true, \"startTime\": 1601271031715, \"description\": \"SMS is sent\"}, \"checkPoint\": \"Send SMS successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3002\", \"response\": {\"isSuccess\": true, \"startTime\": 1601271054079, \"receivedTime\": 1601271047556, \"smsFrom\": \"+61402537622\", \"smsBody\": \"MAndroid2 SMS test.\", \"description\": \"Received SMS successfully\"}, \"checkPoint\": \"Receive SMS successfully.\"}', 'testResult': 'passed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'moInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"SMS\": {\"Duration\": 5, \"smsBody\": \"MAndroid2 SMS test.\"}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Send SMS.\\nWait for SMS duraton.\\nReceive SMS.', 'CheckPoints': 'Send SMS successfully.\\nReceive SMS successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3001 sms_address +61418673947 sms_body \\\\\"MAndroid2\\\\\\\\ SMS\\\\\\\\ test.\\\\\"\", \"response\": {\"isSuccess\": true, \"startTime\": 1601271084869, \"description\": \"SMS is sent\"}, \"checkPoint\": \"Send SMS successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3002\", \"response\": {\"isSuccess\": true, \"startTime\": 1601271094938, \"receivedTime\": 1601271085246, \"smsFrom\": \"+61402537622\", \"smsBody\": \"MAndroid2 SMS test.\", \"description\": \"Received SMS successfully\"}, \"checkPoint\": \"Receive SMS successfully.\"}', 'testResult': 'passed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'moInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"MMS\": {\"ScreenUnlockDuration\": 5, \"Duration\": 10, \"mmsBody\": \"MAndroid2 MMS test.\"}}', 'Preconditions': 'Get a file as MMS url by 1033 API.', 'TestSteps': 'Unlock handset screen.\\nWait for screen unlock.\\nSend MMS.\\nWait for MMS duraton.\\nReceive MMS.', 'CheckPoints': 'Unlock handset screen successfully.\\nSend MMS successfully.\\nReceive MMS successfully.', 'testResultList': 'Cannot get MAndroid2 version from mcloud.matrium.com.au:7465', 'testResult': 'failed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'moInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"WebBrowsing\": {\"webUrl\": \"https://www.google.com\"}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Web Browsing.', 'CheckPoints': 'Web browsing successfully.', 'testResultList': 'Cannot find device mcloud.matrium.com.au:7918 after adb connect', 'testResult': 'failed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'moInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"HTTPDownload\": {\"downloadUrl\": \"http://freeweb.siol.net/tehnika/test5M.dat\", \"Duration\": 10}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Start HTTP download.\\nWait for HTTP download completion.', 'CheckPoints': 'HTTP download successfully.', 'testResultList': 'Cannot find device mcloud.matrium.com.au:7918 after adb connect', 'testResult': 'failed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'moInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"HTTPDownload\": {\"downloadUrl\": \"http://freeweb.siol.net/tehnika/test5M.dat\", \"Duration\": 10}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Start HTTP download.\\nWait for HTTP download completion.', 'CheckPoints': 'HTTP download successfully.', 'testResultList': 'Cannot find device mcloud.matrium.com.au:7918 after adb connect', 'testResult': 'failed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'moInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"HTTPDownload\": {\"downloadUrl\": \"http://freeweb.siol.net/tehnika/test5M.dat\", \"Duration\": 10}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Start HTTP download.\\nWait for HTTP download completion.', 'CheckPoints': 'HTTP download successfully.', 'testResultList': 'Cannot get MAndroid2 version from mcloud.matrium.com.au:7465', 'testResult': 'failed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'moInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"HTTPDownload\": {\"downloadUrl\": \"http://freeweb.siol.net/tehnika/test5M.dat\", \"Duration\": 10}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Start HTTP download.\\nWait for HTTP download completion.', 'CheckPoints': 'HTTP download successfully.', 'testResultList': 'Cannot get MAndroid2 version from mcloud.matrium.com.au:7457', 'testResult': 'failed'}, {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'moInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"HTTPDownload\": {\"downloadUrl\": \"http://freeweb.siol.net/tehnika/test5M.dat\", \"Duration\": 10}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Start HTTP download.\\nWait for HTTP download completion.', 'CheckPoints': 'HTTP download successfully.', 'testResultList': 'Cannot find device mcloud.matrium.com.au:7457 after adb connect', 'testResult': 'failed'}]\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'moInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"VoiceCall\": {\"Duration\": 8}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Place voice call.\\nReceive voice call.\\nWait for call duraton.\\nEnd voice call.', 'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3010 call_phonenum +61418673947\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270570754, \"callee\": \"+61418673947\", \"networkModeBeforeCall\": \"LTE\", \"description\": \"Make a call successfully\"}, \"checkPoint\": \"Place voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3011 \", \"response\": {\"isSuccess\": true, \"callAnswered\": true, \"ringingTime\": 1601270574927, \"answerTime\": 1601270575083, \"endTime\": \"0\", \"caller\": \"0431202671\", \"callDuration\": \"null\", \"networkModeBeforeCall\": \"LTE\", \"networkModeDuringCall\": \"LTE\", \"networkModeAfterCall\": \"\", \"description\": \"Call is connected successfully\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032255.png\"}, \"checkPoint\": \"Receive voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3012\", \"response\": {\"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152304.png\", \"description\": \"End the call successfully.\", \"endTime\": \"1601270587907\", \"networkModeAfterCall\": \"LTE\", \"isSuccess\": \"true\"}, \"checkPoint\": \"End voice call successfully.\"}', 'testResult': 'passed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'moInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"VoiceCall\": {\"Duration\": 8}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Place voice call.\\nReceive voice call.\\nWait for call duraton.\\nEnd voice call.', 'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3010 call_phonenum +61402537622\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270615422, \"callee\": \"+61402537622\", \"networkModeBeforeCall\": \"LTE\", \"description\": \"Make a call successfully\"}, \"checkPoint\": \"Place voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3011 \", \"response\": {\"ringingTime\": \"1601270619049\", \"callDuration\": \"null\", \"networkModeBeforeCall\": \"HSPAP\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152336.png\", \"caller\": \"0431202671\", \"callAnswered\": \"true\", \"answerTime\": \"1601270621318\", \"description\": \"Call is connected successfully.\", \"endTime\": \"0\", \"networkModeDuringCall\": \"HSPAP\", \"networkModeAfterCall\": \"null\", \"isSuccess\": \"true\"}, \"checkPoint\": \"Receive voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3012\", \"response\": {\"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152352.png\", \"description\": \"End the call successfully.\", \"endTime\": \"1601270636082\", \"networkModeAfterCall\": \"LTE\", \"isSuccess\": \"true\"}, \"checkPoint\": \"End voice call successfully.\"}', 'testResult': 'passed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'moInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"VoiceCall\": {\"Duration\": 8}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Place voice call.\\nReceive voice call.\\nWait for call duraton.\\nEnd voice call.', 'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3010 call_phonenum +61431202671\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270670763, \"callee\": \"+61431202671\", \"networkModeBeforeCall\": \"LTE\", \"description\": \"Make a call successfully\"}, \"checkPoint\": \"Place voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3011 \", \"response\": {\"ringingTime\": \"1601270674228\", \"callDuration\": \"null\", \"networkModeBeforeCall\": \"LTE\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152431.png\", \"caller\": \"+61418673947\", \"callAnswered\": \"true\", \"answerTime\": \"1601270676282\", \"description\": \"Call is connected successfully.\", \"endTime\": \"0\", \"networkModeDuringCall\": \"LTE\", \"networkModeAfterCall\": \"null\", \"isSuccess\": \"true\"}, \"checkPoint\": \"Receive voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3012\", \"response\": {\"isSuccess\": true, \"endTime\": 1601270691746, \"networkModeAfterCall\": \"LTE\", \"description\": \"End the call successfully\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032451.png\"}, \"checkPoint\": \"End voice call successfully.\"}', 'testResult': 'passed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'moInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"VoiceCall\": {\"Duration\": 8}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Place voice call.\\nReceive voice call.\\nWait for call duraton.\\nEnd voice call.', 'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3010 call_phonenum +61402537622\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270724798, \"callee\": \"+61402537622\", \"networkModeBeforeCall\": \"LTE\", \"description\": \"Make a call successfully\"}, \"checkPoint\": \"Place voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3011 \", \"response\": {\"ringingTime\": \"1601270730936\", \"callDuration\": \"null\", \"networkModeBeforeCall\": \"HSPAP\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152525.png\", \"caller\": \"0418673947\", \"callAnswered\": \"true\", \"answerTime\": \"1601270733030\", \"description\": \"Call is connected successfully.\", \"endTime\": \"0\", \"networkModeDuringCall\": \"HSPAP\", \"networkModeAfterCall\": \"null\", \"isSuccess\": \"true\"}, \"checkPoint\": \"Receive voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3012\", \"response\": {\"isSuccess\": true, \"endTime\": 1601270748156, \"networkModeAfterCall\": \"LTE\", \"description\": \"End the call successfully\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032548.png\"}, \"checkPoint\": \"End voice call successfully.\"}', 'testResult': 'passed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'moInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"VoiceCall\": {\"Duration\": 8}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Place voice call.\\nReceive voice call.\\nWait for call duraton.\\nEnd voice call.', 'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3010 call_phonenum +61431202671\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270774908, \"callee\": \"+61431202671\", \"networkModeBeforeCall\": \"LTE\", \"description\": \"Make a call successfully\"}, \"checkPoint\": \"Place voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3011 \", \"response\": {\"ringingTime\": \"1601270782485\", \"callDuration\": \"null\", \"networkModeBeforeCall\": \"LTE\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152615.png\", \"caller\": \"+61402537622\", \"callAnswered\": \"true\", \"answerTime\": \"1601270784712\", \"description\": \"Call is connected successfully.\", \"endTime\": \"0\", \"networkModeDuringCall\": \"LTE\", \"networkModeAfterCall\": \"null\", \"isSuccess\": \"true\"}, \"checkPoint\": \"Receive voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3012\", \"response\": {\"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152636.png\", \"description\": \"End the call successfully.\", \"endTime\": \"1601270799512\", \"networkModeAfterCall\": \"HSPAP\", \"isSuccess\": \"true\"}, \"checkPoint\": \"End voice call successfully.\"}', 'testResult': 'passed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'moInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"VoiceCall\": {\"Duration\": 8}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Place voice call.\\nReceive voice call.\\nWait for call duraton.\\nEnd voice call.', 'CheckPoints': 'Place voice call successfully.\\nReceive voice call successfully.\\nEnd voice call successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3010 call_phonenum +61418673947\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270832579, \"callee\": \"+61418673947\", \"networkModeBeforeCall\": \"LTE\", \"description\": \"Make a call successfully\"}, \"checkPoint\": \"Place voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3011 \", \"response\": {\"isSuccess\": true, \"callAnswered\": true, \"ringingTime\": 1601270836928, \"answerTime\": 1601270837004, \"endTime\": \"0\", \"caller\": \"0402537622\", \"callDuration\": \"null\", \"networkModeBeforeCall\": \"LTE\", \"networkModeDuringCall\": \"LTE\", \"networkModeAfterCall\": \"\", \"description\": \"Call is connected successfully\", \"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_032717.png\"}, \"checkPoint\": \"Receive voice call successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3012\", \"response\": {\"screenshotURL\": \"/sdcard/MAndroid2/Output/Screenshot/takescreen_20200928_152726.png\", \"description\": \"End the call successfully.\", \"endTime\": \"1601270850043\", \"networkModeAfterCall\": \"HSPAP\", \"isSuccess\": \"true\"}, \"checkPoint\": \"End voice call successfully.\"}', 'testResult': 'passed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'moInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"SMS\": {\"Duration\": 5, \"smsBody\": \"MAndroid2 SMS test.\"}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Send SMS.\\nWait for SMS duraton.\\nReceive SMS.', 'CheckPoints': 'Send SMS successfully.\\nReceive SMS successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3001 sms_address +61418673947 sms_body \\\\\"MAndroid2\\\\\\\\ SMS\\\\\\\\ test.\\\\\"\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270882423, \"description\": \"SMS is sent\"}, \"checkPoint\": \"Send SMS successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3002\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270892727, \"receivedTime\": 1601270883524, \"smsFrom\": \"+61431202671\", \"smsBody\": \"MAndroid2 SMS test.\", \"description\": \"Received SMS successfully\"}, \"checkPoint\": \"Receive SMS successfully.\"}', 'testResult': 'passed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'moInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"SMS\": {\"Duration\": 5, \"smsBody\": \"MAndroid2 SMS test.\"}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Send SMS.\\nWait for SMS duraton.\\nReceive SMS.', 'CheckPoints': 'Send SMS successfully.\\nReceive SMS successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3001 sms_address +61402537622 sms_body \\\\\"MAndroid2\\\\\\\\ SMS\\\\\\\\ test.\\\\\"\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270917791, \"description\": \"SMS is sent\"}, \"checkPoint\": \"Send SMS successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3002\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270926002, \"receivedTime\": 1601270919182, \"smsFrom\": \"+61431202671\", \"smsBody\": \"MAndroid2 SMS test.\", \"description\": \"Received SMS successfully\"}, \"checkPoint\": \"Receive SMS successfully.\"}', 'testResult': 'passed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'moInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"SMS\": {\"Duration\": 5, \"smsBody\": \"MAndroid2 SMS test.\"}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Send SMS.\\nWait for SMS duraton.\\nReceive SMS.', 'CheckPoints': 'Send SMS successfully.\\nReceive SMS successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3001 sms_address +61431202671 sms_body \\\\\"MAndroid2\\\\\\\\ SMS\\\\\\\\ test.\\\\\"\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270957204, \"description\": \"SMS is sent\"}, \"checkPoint\": \"Send SMS successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3002\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270965470, \"receivedTime\": 1601270959010, \"smsFrom\": \"+61418673947\", \"smsBody\": \"MAndroid2 SMS test.\", \"description\": \"Received SMS successfully\"}, \"checkPoint\": \"Receive SMS successfully.\"}', 'testResult': 'passed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'moInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"SMS\": {\"Duration\": 5, \"smsBody\": \"MAndroid2 SMS test.\"}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Send SMS.\\nWait for SMS duraton.\\nReceive SMS.', 'CheckPoints': 'Send SMS successfully.\\nReceive SMS successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3001 sms_address +61402537622 sms_body \\\\\"MAndroid2\\\\\\\\ SMS\\\\\\\\ test.\\\\\"\", \"response\": {\"isSuccess\": true, \"startTime\": 1601270997159, \"description\": \"SMS is sent\"}, \"checkPoint\": \"Send SMS successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3002\", \"response\": {\"isSuccess\": true, \"startTime\": 1601271005987, \"receivedTime\": 1601270999228, \"smsFrom\": \"+61418673947\", \"smsBody\": \"MAndroid2 SMS test.\", \"description\": \"Received SMS successfully\"}, \"checkPoint\": \"Receive SMS successfully.\"}', 'testResult': 'passed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'moInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"SMS\": {\"Duration\": 5, \"smsBody\": \"MAndroid2 SMS test.\"}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Send SMS.\\nWait for SMS duraton.\\nReceive SMS.', 'CheckPoints': 'Send SMS successfully.\\nReceive SMS successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3001 sms_address +61431202671 sms_body \\\\\"MAndroid2\\\\\\\\ SMS\\\\\\\\ test.\\\\\"\", \"response\": {\"isSuccess\": true, \"startTime\": 1601271031715, \"description\": \"SMS is sent\"}, \"checkPoint\": \"Send SMS successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7918 3002\", \"response\": {\"isSuccess\": true, \"startTime\": 1601271054079, \"receivedTime\": 1601271047556, \"smsFrom\": \"+61402537622\", \"smsBody\": \"MAndroid2 SMS test.\", \"description\": \"Received SMS successfully\"}, \"checkPoint\": \"Receive SMS successfully.\"}', 'testResult': 'passed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'moInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"SMS\": {\"Duration\": 5, \"smsBody\": \"MAndroid2 SMS test.\"}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Send SMS.\\nWait for SMS duraton.\\nReceive SMS.', 'CheckPoints': 'Send SMS successfully.\\nReceive SMS successfully.', 'testResultList': '{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7457 3001 sms_address +61418673947 sms_body \\\\\"MAndroid2\\\\\\\\ SMS\\\\\\\\ test.\\\\\"\", \"response\": {\"isSuccess\": true, \"startTime\": 1601271084869, \"description\": \"SMS is sent\"}, \"checkPoint\": \"Send SMS successfully.\"}\\n{\"checkPointResult\": \"passed\", \"failedReason\": \"none\", \"command\": \"java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7465 3002\", \"response\": {\"isSuccess\": true, \"startTime\": 1601271094938, \"receivedTime\": 1601271085246, \"smsFrom\": \"+61402537622\", \"smsBody\": \"MAndroid2 SMS test.\", \"description\": \"Received SMS successfully\"}, \"checkPoint\": \"Receive SMS successfully.\"}', 'testResult': 'passed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'moInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"MMS\": {\"ScreenUnlockDuration\": 5, \"Duration\": 10, \"mmsBody\": \"MAndroid2 MMS test.\"}}', 'Preconditions': 'Get a file as MMS url by 1033 API.', 'TestSteps': 'Unlock handset screen.\\nWait for screen unlock.\\nSend MMS.\\nWait for MMS duraton.\\nReceive MMS.', 'CheckPoints': 'Unlock handset screen successfully.\\nSend MMS successfully.\\nReceive MMS successfully.', 'testResultList': 'Cannot get MAndroid2 version from mcloud.matrium.com.au:7465', 'testResult': 'failed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'moInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"WebBrowsing\": {\"webUrl\": \"https://www.google.com\"}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Web Browsing.', 'CheckPoints': 'Web browsing successfully.', 'testResultList': 'Cannot find device mcloud.matrium.com.au:7918 after adb connect', 'testResult': 'failed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'moInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"HTTPDownload\": {\"downloadUrl\": \"http://freeweb.siol.net/tehnika/test5M.dat\", \"Duration\": 10}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Start HTTP download.\\nWait for HTTP download completion.', 'CheckPoints': 'HTTP download successfully.', 'testResultList': 'Cannot find device mcloud.matrium.com.au:7918 after adb connect', 'testResult': 'failed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'moInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"HTTPDownload\": {\"downloadUrl\": \"http://freeweb.siol.net/tehnika/test5M.dat\", \"Duration\": 10}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Start HTTP download.\\nWait for HTTP download completion.', 'CheckPoints': 'HTTP download successfully.', 'testResultList': 'Cannot find device mcloud.matrium.com.au:7918 after adb connect', 'testResult': 'failed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'moInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"HTTPDownload\": {\"downloadUrl\": \"http://freeweb.siol.net/tehnika/test5M.dat\", \"Duration\": 10}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Start HTTP download.\\nWait for HTTP download completion.', 'CheckPoints': 'HTTP download successfully.', 'testResultList': 'Cannot get MAndroid2 version from mcloud.matrium.com.au:7465', 'testResult': 'failed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'moInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025504563848\", \"MSISDN\": \"+61431202671\", \"handsetID\": \"mcloud.matrium.com.au:7918\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"HTTPDownload\": {\"downloadUrl\": \"http://freeweb.siol.net/tehnika/test5M.dat\", \"Duration\": 10}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Start HTTP download.\\nWait for HTTP download completion.', 'CheckPoints': 'HTTP download successfully.', 'testResultList': 'Cannot get MAndroid2 version from mcloud.matrium.com.au:7457', 'testResult': 'failed'}\nCurrent item is {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'moInfo': '{\"IMSI\": \"505025703492762\", \"MSISDN\": \"+61402537622\", \"handsetID\": \"mcloud.matrium.com.au:7457\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'mtInfo': '{\"IMSI\": \"505025104559746\", \"MSISDN\": \"+61418673947\", \"handsetID\": \"mcloud.matrium.com.au:7465\", \"versions\": {\"MAndroid2\": \"2.20.41Build2020-06-09_14:00:07\", \"MAndroid2Agent\": \"2.19.33Build2020-03-27_04:28:38\", \"MAndroid2Plugin\": \"2.19.16Build2019-10-24_15:57:51\"}}', 'testParameters': '{\"HTTPDownload\": {\"downloadUrl\": \"http://freeweb.siol.net/tehnika/test5M.dat\", \"Duration\": 10}}', 'Preconditions': 'N\\no\\nn\\ne\\n.', 'TestSteps': 'Start HTTP download.\\nWait for HTTP download completion.', 'CheckPoints': 'HTTP download successfully.', 'testResultList': 'Cannot find device mcloud.matrium.com.au:7457 after adb connect', 'testResult': 'failed'}\n", "longrepr": "self = <xlsxwriter.workbook.Workbook object at 0x000002B91C6EA278>\n\n    def close(self):\n        \"\"\"\n        Call finalization code and close file.\n    \n        Args:\n            None.\n    \n        Returns:\n            Nothing.\n    \n        \"\"\"\n        if not self.fileclosed:\n    \n            try:\n>               self._store_workbook()\n\nc:\\setup\\python37\\lib\\site-packages\\xlsxwriter\\workbook.py:316: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <xlsxwriter.workbook.Workbook object at 0x000002B91C6EA278>\n\n    def _store_workbook(self):\n    \n        # Create the xlsx/zip file.\n        try:\n            xlsx_file = ZipFile(self.filename, \"w\", compression=ZIP_DEFLATED,\n                                allowZip64=self.allow_zip64)\n        except IOError as e:\n>           raise e\n\nc:\\setup\\python37\\lib\\site-packages\\xlsxwriter\\workbook.py:632: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <xlsxwriter.workbook.Workbook object at 0x000002B91C6EA278>\n\n    def _store_workbook(self):\n    \n        # Create the xlsx/zip file.\n        try:\n            xlsx_file = ZipFile(self.filename, \"w\", compression=ZIP_DEFLATED,\n>                               allowZip64=self.allow_zip64)\n\nc:\\setup\\python37\\lib\\site-packages\\xlsxwriter\\workbook.py:630: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile [closed]>\nfile = 'C:\\\\tmp\\\\MAndroid2SmokeTestReport\\\\excel/MAndroid2TestReport_20200928_152226.xlsx'\nmode = 'w', compression = 8, allowZip64 = False, compresslevel = None\n\n    def __init__(self, file, mode=\"r\", compression=ZIP_STORED, allowZip64=True,\n                 compresslevel=None):\n        \"\"\"Open the ZIP file with mode read 'r', write 'w', exclusive create 'x',\n        or append 'a'.\"\"\"\n        if mode not in ('r', 'w', 'x', 'a'):\n            raise ValueError(\"ZipFile requires mode 'r', 'w', 'x', or 'a'\")\n    \n        _check_compression(compression)\n    \n        self._allowZip64 = allowZip64\n        self._didModify = False\n        self.debug = 0  # Level of printing: 0 through 3\n        self.NameToInfo = {}    # Find file info given name\n        self.filelist = []      # List of ZipInfo instances for archive\n        self.compression = compression  # Method of compression\n        self.compresslevel = compresslevel\n        self.mode = mode\n        self.pwd = None\n        self._comment = b''\n    \n        # Check if we were passed a file-like object\n        if isinstance(file, os.PathLike):\n            file = os.fspath(file)\n        if isinstance(file, str):\n            # No, it's a filename\n            self._filePassed = 0\n            self.filename = file\n            modeDict = {'r' : 'rb', 'w': 'w+b', 'x': 'x+b', 'a' : 'r+b',\n                        'r+b': 'w+b', 'w+b': 'wb', 'x+b': 'xb'}\n            filemode = modeDict[mode]\n            while True:\n                try:\n>                   self.fp = io.open(file, filemode)\nE                   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\tmp\\\\MAndroid2SmokeTestReport\\\\excel/MAndroid2TestReport_20200928_152226.xlsx'\n\nc:\\setup\\python37\\lib\\zipfile.py:1204: FileNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\ncls = <class 'test_MAndroid2AllDevices.TestMAndroid2TestCases'>\n\n    @classmethod\n    def teardown_class(cls):\n        print(\"------ Teardown after class TestMAndroid2TestCases ------\")\n    \n        # Get test case ending date.\n        cls.testSuiteEndTime = datetime.now()\n        diff = cls.testSuiteEndTime - cls.testSuiteStartingTime  # the result is a datetime.timedelta object\n        formatedDiff = str(timedelta(seconds=diff.seconds))\n        cls.testCaseSummary['testDuration'] = \"{}\".format(formatedDiff)\n    \n        # Write excel test report.\n        cls.excelReport.summary(cls.summarySheet, cls.testCaseSummary)\n        print (\"testCaseDetailList is {}\".format(cls.testCaseDetailList))\n        cls.excelReport.detail(cls.detailSheet, cls.testCaseDetailList)\n>       cls.excelReport.close()\n\ntest_MAndroid2AllDevices.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseExcel.py:112: in close\n    self.wd.close()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <xlsxwriter.workbook.Workbook object at 0x000002B91C6EA278>\n\n    def close(self):\n        \"\"\"\n        Call finalization code and close file.\n    \n        Args:\n            None.\n    \n        Returns:\n            Nothing.\n    \n        \"\"\"\n        if not self.fileclosed:\n    \n            try:\n                self._store_workbook()\n            except IOError as e:\n>               raise FileCreateError(e)\nE               xlsxwriter.exceptions.FileCreateError: [Errno 2] No such file or directory: 'C:\\\\tmp\\\\MAndroid2SmokeTestReport\\\\excel/MAndroid2TestReport_20200928_152226.xlsx'\n\nc:\\setup\\python37\\lib\\site-packages\\xlsxwriter\\workbook.py:318: FileCreateError"}}]}