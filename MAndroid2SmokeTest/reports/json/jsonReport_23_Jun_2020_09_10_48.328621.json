{"created": 1592867451.5043545, "duration": 0.7081067562103271, "exitcode": 1, "root": "C:\\Work\\Projects\\Python-Practice", "environment": {"Python": "3.7.1", "Platform": "Windows-10-10.0.18362-SP0", "Packages": {"pytest": "5.3.4", "py": "1.8.1", "pluggy": "0.13.1"}, "Plugins": {"allure-pytest": "2.8.7", "html": "2.1.1", "json-report": "1.2.1", "metadata": "1.8.0", "reportportal": "5.0.0"}, "JAVA_HOME": "C:\\Program Files\\Java\\jdk1.8.0_162"}, "summary": {"failed": 4, "total": 4, "collected": 4}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "type": "Module"}]}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "outcome": "passed", "result": [{"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment0]", "type": "Function", "lineno": 173}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment1]", "type": "Function", "lineno": 173}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters1-testEnvironment0]", "type": "Function", "lineno": 173}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters1-testEnvironment1]", "type": "Function", "lineno": 173}]}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "outcome": "passed", "result": [{"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "type": "Instance"}]}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "outcome": "passed", "result": [{"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases", "type": "Class"}]}], "tests": [{"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment0]", "lineno": 173, "outcome": "failed", "keywords": ["pytestmark", "testParameters0-testEnvironment0", "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "Python-Practice", "()", "test_MAndroid2_HTTPDownload[testParameters0-testEnvironment0]", "TestMAndroid2TestCases", "parametrize"], "setup": {"duration": 0.0029926300048828125, "outcome": "passed", "stdout": "------ Setup before class TestMAndroid2TestCases ------\n"}, "call": {"duration": 0.014960050582885742, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseCommon.py", "lineno": 193, "message": "AssertionError"}, "traceback": [{"path": "test_MAndroid2TestCases.py", "lineno": 185, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 220, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 193, "message": "AssertionError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.', 'Downloaded file exists.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\n", "longrepr": "self = <test_MAndroid2TestCases.TestMAndroid2TestCases object at 0x000002C76C87D3C8>\njson_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...': {'IMSI': '505025104559746', 'MSISDN': '+61418673947'}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622'}}}\ntestParameters = {'WebBrowsing': {'webUrl': 'https://www.google.com'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironment)\n    @pytest.mark.parametrize(\"testParameters\", webBrowsingTestParameters)\n    def test_MAndroid2_HTTPDownload(self, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'HTTPDownload'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n    \n        # Execute test case.\n>       testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters, testCaseInfo)\n\ntest_MAndroid2TestCases.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:220: in executeTestCase\n    checkTestParametersConfig(testParameters, testCaseKey)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntestParameters = {'WebBrowsing': {'webUrl': 'https://www.google.com'}}\ntestCaseKey = 'HTTPDownload'\n\n    def checkTestParametersConfig(testParameters, testCaseKey):\n        # Check test parameters from configuration file.\n        if (testCaseKey == 'VoiceCall'):\n            assert (\"VoiceCall\" in testParameters)\n            assert (\"Duration\" in testParameters['VoiceCall'])\n        elif (testCaseKey == 'SMS'):\n            assert (\"SMS\" in testParameters)\n            assert (\"Duration\" in testParameters['SMS'])\n            assert (\"smsBody\" in testParameters['SMS'])\n        elif (testCaseKey == 'MMS'):\n            assert (\"MMS\" in testParameters)\n            assert (\"Duration\" in testParameters['MMS'])\n            assert (\"mmsBody\" in testParameters['MMS'])\n        elif (testCaseKey == 'WebBrowsing'):\n            assert (\"WebBrowsing\" in testParameters)\n            assert (\"webUrl\" in testParameters['WebBrowsing'])\n        elif (testCaseKey == 'HTTPDownload'):\n>           assert (\"HTTPDownload\" in testParameters)\nE           AssertionError\n\n..\\library\\MAndroid2BaseCommon.py:193: AssertionError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters0-testEnvironment1]", "lineno": 173, "outcome": "failed", "keywords": ["pytestmark", "testParameters0-testEnvironment1", "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "Python-Practice", "()", "test_MAndroid2_HTTPDownload[testParameters0-testEnvironment1]", "TestMAndroid2TestCases", "parametrize"], "setup": {"duration": 0.0009970664978027344, "outcome": "passed"}, "call": {"duration": 0.013962507247924805, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseCommon.py", "lineno": 193, "message": "AssertionError"}, "traceback": [{"path": "test_MAndroid2TestCases.py", "lineno": 185, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 220, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 193, "message": "AssertionError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.', 'Downloaded file exists.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\n", "longrepr": "self = <test_MAndroid2TestCases.TestMAndroid2TestCases object at 0x000002C76C8C6CC0>\njson_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...': {'IMSI': '505025703492762', 'MSISDN': '+61402537622'}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947'}}}\ntestParameters = {'WebBrowsing': {'webUrl': 'https://www.google.com'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironment)\n    @pytest.mark.parametrize(\"testParameters\", webBrowsingTestParameters)\n    def test_MAndroid2_HTTPDownload(self, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'HTTPDownload'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n    \n        # Execute test case.\n>       testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters, testCaseInfo)\n\ntest_MAndroid2TestCases.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:220: in executeTestCase\n    checkTestParametersConfig(testParameters, testCaseKey)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntestParameters = {'WebBrowsing': {'webUrl': 'https://www.google.com'}}\ntestCaseKey = 'HTTPDownload'\n\n    def checkTestParametersConfig(testParameters, testCaseKey):\n        # Check test parameters from configuration file.\n        if (testCaseKey == 'VoiceCall'):\n            assert (\"VoiceCall\" in testParameters)\n            assert (\"Duration\" in testParameters['VoiceCall'])\n        elif (testCaseKey == 'SMS'):\n            assert (\"SMS\" in testParameters)\n            assert (\"Duration\" in testParameters['SMS'])\n            assert (\"smsBody\" in testParameters['SMS'])\n        elif (testCaseKey == 'MMS'):\n            assert (\"MMS\" in testParameters)\n            assert (\"Duration\" in testParameters['MMS'])\n            assert (\"mmsBody\" in testParameters['MMS'])\n        elif (testCaseKey == 'WebBrowsing'):\n            assert (\"WebBrowsing\" in testParameters)\n            assert (\"webUrl\" in testParameters['WebBrowsing'])\n        elif (testCaseKey == 'HTTPDownload'):\n>           assert (\"HTTPDownload\" in testParameters)\nE           AssertionError\n\n..\\library\\MAndroid2BaseCommon.py:193: AssertionError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters1-testEnvironment0]", "lineno": 173, "outcome": "failed", "keywords": ["pytestmark", "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "Python-Practice", "testParameters1-testEnvironment0", "()", "TestMAndroid2TestCases", "parametrize", "test_MAndroid2_HTTPDownload[testParameters1-testEnvironment0]"], "setup": {"duration": 0.0, "outcome": "passed"}, "call": {"duration": 0.03789925575256348, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseCommon.py", "lineno": 193, "message": "AssertionError"}, "traceback": [{"path": "test_MAndroid2TestCases.py", "lineno": 185, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 220, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 193, "message": "AssertionError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.', 'Downloaded file exists.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\n", "longrepr": "self = <test_MAndroid2TestCases.TestMAndroid2TestCases object at 0x000002C76C9A2DA0>\njson_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...': {'IMSI': '505025104559746', 'MSISDN': '+61418673947'}, 'MT': {'IMSI': '505025703492762', 'MSISDN': '+61402537622'}}}\ntestParameters = {'WebBrowsing': {'webUrl': 'https://www.google.com'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironment)\n    @pytest.mark.parametrize(\"testParameters\", webBrowsingTestParameters)\n    def test_MAndroid2_HTTPDownload(self, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'HTTPDownload'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n    \n        # Execute test case.\n>       testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters, testCaseInfo)\n\ntest_MAndroid2TestCases.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:220: in executeTestCase\n    checkTestParametersConfig(testParameters, testCaseKey)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntestParameters = {'WebBrowsing': {'webUrl': 'https://www.google.com'}}\ntestCaseKey = 'HTTPDownload'\n\n    def checkTestParametersConfig(testParameters, testCaseKey):\n        # Check test parameters from configuration file.\n        if (testCaseKey == 'VoiceCall'):\n            assert (\"VoiceCall\" in testParameters)\n            assert (\"Duration\" in testParameters['VoiceCall'])\n        elif (testCaseKey == 'SMS'):\n            assert (\"SMS\" in testParameters)\n            assert (\"Duration\" in testParameters['SMS'])\n            assert (\"smsBody\" in testParameters['SMS'])\n        elif (testCaseKey == 'MMS'):\n            assert (\"MMS\" in testParameters)\n            assert (\"Duration\" in testParameters['MMS'])\n            assert (\"mmsBody\" in testParameters['MMS'])\n        elif (testCaseKey == 'WebBrowsing'):\n            assert (\"WebBrowsing\" in testParameters)\n            assert (\"webUrl\" in testParameters['WebBrowsing'])\n        elif (testCaseKey == 'HTTPDownload'):\n>           assert (\"HTTPDownload\" in testParameters)\nE           AssertionError\n\n..\\library\\MAndroid2BaseCommon.py:193: AssertionError"}, "teardown": {"duration": 0.0, "outcome": "passed"}}, {"nodeid": "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py::TestMAndroid2TestCases::test_MAndroid2_HTTPDownload[testParameters1-testEnvironment1]", "lineno": 173, "outcome": "failed", "keywords": ["pytestmark", "MAndroid2SmokeTest/testcases/test_MAndroid2TestCases.py", "Python-Practice", "testParameters1-testEnvironment1", "test_MAndroid2_HTTPDownload[testParameters1-testEnvironment1]", "()", "TestMAndroid2TestCases", "parametrize"], "setup": {"duration": 0.0009975433349609375, "outcome": "passed"}, "call": {"duration": 0.013962745666503906, "outcome": "failed", "crash": {"path": "C:\\Work\\Projects\\Python-Practice\\MAndroid2SmokeTest\\library\\MAndroid2BaseCommon.py", "lineno": 193, "message": "AssertionError"}, "traceback": [{"path": "test_MAndroid2TestCases.py", "lineno": 185, "message": ""}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 220, "message": "in executeTestCase"}, {"path": "..\\library\\MAndroid2BaseCommon.py", "lineno": 193, "message": "AssertionError"}], "stdout": "{'VoiceCall': {'TestCaseID': 'MAndroid2_Smoke_Test_001_Voice_Call', 'Description': 'Basic voice call.', 'Preconditions': 'None.', 'TestSteps': ['Place voice call.', 'Receive voice call.', 'Wait for call duraton.', 'End voice call.'], 'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice call successfully.']}, 'SMS': {'TestCaseID': 'MAndroid2_Smoke_Test_002_SMS', 'Description': 'Basic SMS.', 'Preconditions': 'None.', 'TestSteps': ['Send SMS.', 'Wait for SMS duraton.', 'Receive SMS.'], 'CheckPoints': ['Send SMS successfully.', 'Receive SMS successfully.']}, 'MMS': {'TestCaseID': 'MAndroid2_Smoke_Test_003_MMS', 'Description': 'Basic MMS.', 'Preconditions': ['Get a file as MMS url by 1033 API.'], 'TestSteps': ['Unlock handset screen.', 'Wait for screen unlock.', 'Send MMS.', 'Wait for MMS duraton.', 'Receive MMS.'], 'CheckPoints': ['Unlock handset screen successfully.', 'Send MMS successfully.', 'Receive MMS successfully.']}, 'WebBrowsing': {'TestCaseID': 'MAndroid2_Smoke_Test_004_WebBrowsing', 'Description': 'Basic web browsing.', 'Preconditions': 'None.', 'TestSteps': ['Web Browsing.'], 'CheckPoints': ['Web browsing successfully.']}, 'HTTPDownload': {'TestCaseID': 'MAndroid2_Smoke_Test_005_HTTPDownload', 'Description': 'Basic HTTP download.', 'Preconditions': 'None.', 'TestSteps': ['Start HTTP download.', 'Wait for HTTP download completion.'], 'CheckPoints': ['HTTP download successfully.', 'Downloaded file exists.']}}\nRead test configuration yaml file ../configuration/testCaseInfo/testCaseInfo.yaml successfully.\n", "longrepr": "self = <test_MAndroid2TestCases.TestMAndroid2TestCases object at 0x000002C76C8F2198>\njson_metadata = {}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...': {'IMSI': '505025703492762', 'MSISDN': '+61402537622'}, 'MT': {'IMSI': '505025104559746', 'MSISDN': '+61418673947'}}}\ntestParameters = {'WebBrowsing': {'webUrl': 'https://www.google.com'}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironment)\n    @pytest.mark.parametrize(\"testParameters\", webBrowsingTestParameters)\n    def test_MAndroid2_HTTPDownload(self, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'HTTPDownload'\n        userFlag = 'MO'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n    \n        # Execute test case.\n>       testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters, testCaseInfo)\n\ntest_MAndroid2TestCases.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\library\\MAndroid2BaseCommon.py:220: in executeTestCase\n    checkTestParametersConfig(testParameters, testCaseKey)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntestParameters = {'WebBrowsing': {'webUrl': 'https://www.google.com'}}\ntestCaseKey = 'HTTPDownload'\n\n    def checkTestParametersConfig(testParameters, testCaseKey):\n        # Check test parameters from configuration file.\n        if (testCaseKey == 'VoiceCall'):\n            assert (\"VoiceCall\" in testParameters)\n            assert (\"Duration\" in testParameters['VoiceCall'])\n        elif (testCaseKey == 'SMS'):\n            assert (\"SMS\" in testParameters)\n            assert (\"Duration\" in testParameters['SMS'])\n            assert (\"smsBody\" in testParameters['SMS'])\n        elif (testCaseKey == 'MMS'):\n            assert (\"MMS\" in testParameters)\n            assert (\"Duration\" in testParameters['MMS'])\n            assert (\"mmsBody\" in testParameters['MMS'])\n        elif (testCaseKey == 'WebBrowsing'):\n            assert (\"WebBrowsing\" in testParameters)\n            assert (\"webUrl\" in testParameters['WebBrowsing'])\n        elif (testCaseKey == 'HTTPDownload'):\n>           assert (\"HTTPDownload\" in testParameters)\nE           AssertionError\n\n..\\library\\MAndroid2BaseCommon.py:193: AssertionError"}, "teardown": {"duration": 0.06781840324401855, "outcome": "passed", "stdout": "------ Teardown after class TestMAndroid2TestCases ------\ntestCaseDetailList is []\n"}}]}