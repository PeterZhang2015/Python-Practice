{"name": "test_MAndroid2_VoiceCall[testParameters0-testEnvironment2]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'failed' == 'passed'\n  - failed\n  + passed", "trace": "self = <test_MAndroid2AllDevices.TestMAndroid2TestCases object at 0x0000018F723E80F0>\nrp_logger = <RPLogger MAndroid2SmokeTest.conftest (DEBUG)>\njson_metadata = {'testCaseInfo': {'CheckPoints': ['Place voice call successfully.', 'Receive voice call successfully.', 'End voice cal...mmand': 'java -jar c:/tmp/MatriumMAndroid2-release.jar mcloud.matrium.com.au:7453 3012', 'failedReason': 'none', ...}]}\ntestEnvironment = {'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab1240...4:00:07', 'MAndroid2Agent': '2.19.33Build2020-03-27_04:28:38', 'MAndroid2Plugin': '2.19.16Build2019-10-24_15:57:51'}}}}\ntestParameters = {'VoiceCall': {'Duration': 8}}\n\n    @pytest.mark.parametrize(\"testEnvironment\", testEnvironmentCombinations)\n    @pytest.mark.parametrize(\"testParameters\", voiceCallTestParameters)\n    def test_MAndroid2_VoiceCall(self, rp_logger, json_metadata, testEnvironment, testParameters):\n        # Define test case variables.\n        testCaseKey = 'VoiceCall'\n        userFlag = 'MOMT'\n    \n        # Get and check test case info.\n        testCaseInfo = checkTestCaseInfoConfig(testCaseKey)\n        rp_logger.info(\"Test case info: {}.\".format(testCaseInfo))\n        rp_logger.info(\"Test environment: {}.\".format(testEnvironment))\n        rp_logger.info(\"Test testParameters: {}.\".format(testParameters))\n    \n        # Execute test case.\n        rp_logger.info(\"Executing test logic.\")\n        testResults = executeTestCase(testCaseKey, userFlag, json_metadata, testEnvironment, testParameters,\n                                      testCaseInfo, self.testCaseSummary, self.testCaseDetailList)\n    \n        # Write test case summary and test case detail.\n        writeExcelTestReportSummary(self.testCaseSummary, testResults, testEnvironment)\n        writeExcelTestReportDetail(self.testCaseDetailList, testEnvironment, testParameters,\n                                                             testCaseInfo, testResults)\n    \n        # Assert test result.\n        rp_logger.info(\"Test result: {}.\".format(testResults))\n        for result in testResults:\n>           assert (result['checkPointResult'] == \"passed\")\nE           AssertionError: assert 'failed' == 'passed'\nE             - failed\nE             + passed\n\ntest_MAndroid2AllDevices.py:170: AssertionError"}, "attachments": [{"name": "log", "source": "fc601cb9-3033-4a07-9ce5-121e2ce9af26-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "5ad90863-5535-4750-9a2e-d5ef155140ac-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "testParameters", "value": "{'VoiceCall': {'Duration': 8}}"}, {"name": "testEnvironment", "value": "{'MCloud': {'baseUrl': 'http://mcloud.matrium.com.au:7100/api/v1'}, 'Login': {'User': 'Peter.Zhang@matrium.com.au', 'accessToken': 'Bearer 6fc22b08ce00468fa56cc53a22384012e16d1ac9ab12403abeaaa5e14496239e'}, 'MAndroid2AgentPath': 'c:/tmp/MatriumMAndroid2-release.jar', 'testUsers': {'MO': {'IMSI': '505025104559746', 'MSISDN': '+61418673947'}, 'MT': {'IMSI': '505025504563848', 'MSISDN': '+61431202671'}}}"}], "start": 1599276156485, "stop": 1599276217289, "uuid": "43d6ca04-f11e-4839-bc11-6ec4bb8a0c46", "historyId": "d16a882511c00f494ce4b8adeb528c62", "testCaseId": "99b39bb68dade2c631227e786bcfdca2", "fullName": "testcases.test_MAndroid2AllDevices.TestMAndroid2TestCases#test_MAndroid2_VoiceCall", "labels": [{"name": "tag", "value": "allAvailableDeviceSmokeTest"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_MAndroid2AllDevices"}, {"name": "subSuite", "value": "TestMAndroid2TestCases"}, {"name": "host", "value": "Peter-Zhang"}, {"name": "thread", "value": "11348-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_MAndroid2AllDevices"}]}